import org.junit.Test;
import static org.junit.Assert.*;

public class HumanEval_142_sum_squaresTest {

    @Test
    public void test_sumSquares_Problem_3_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_91037e1d_7744_45b3_aa4b_94e1c157c70f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_6591485e_9389_44f3_8c84_57412fb5852f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_31d29684_6728_45c2_8383_f046fc7646ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_2920ec9d_4773_4905_bd37_c1e21eac8991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_29f75f89_21e3_433c_9490_a8bb6314e6db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_529f7d15_687b_4434_beab_b97d9962ab89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_954b0240_cece_4cbc_9464_e5264a34b939() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_6fd1b752_2140_4c98_939f_b6d1568a0a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_7cfcbc79_7467_47e8_a02c_98ec290ea5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_b771b8dd_5bea_429f_b6f7_74218bb8a438() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_018e5b2b_20bc_4228_8dd8_2e78c81fda11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_f327f89e_14b2_486a_94f5_3eb83d3c7e9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_df836a52_8e5e_4964_99af_6da837d35e47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_c40eeabf_3889_464c_b8ef_d286127a21fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_f309460b_7607_4043_8bcd_d1752a581989() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5c6334cb_6778_46bb_a001_12f68613d405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_744738d8_6498_44bf_bd49_23e635d4afce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_76ccea4f_882a_45ce_aae1_52e9bb680b20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_04447889_0e0d_4932_8122_7062b0b97fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_50863ff2_4de1_434e_8a8e_bcfcaa1a992c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_bc4af9d9_c08e_42fd_946a_790968ef9503() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_863762fb_716a_4b99_a863_0c6db1c74006() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5c6334cb_6778_46bb_a001_12f68613d405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_661bbd0e_d19e_40f1_99c0_311dd686ba06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a3f92616_88fe_459a_9939_6a4970de9921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b95a33f3_d95f_404a_9545_decd7aeccf8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_4997ccc9_80de_4610_940c_a67d26fb88ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_17eed356_a98a_4144_81cc_a130dc8d71dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_c40eeabf_3889_464c_b8ef_d286127a21fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e64c14f1_5d1b_4fa8_b931_5c2889db16d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_a796700b_3101_41df_97c6_7637a9f3b3be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d61a06e0_a1dd_4ad7_8876_d018ff3fab9a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_299e5046_040f_4267_ae4b_92a2bfca6433() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_0873675e_9f23_4a04_840a_f1e3a4545d19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_124eb85f_27a2_4e9e_8c80_73229a2a2e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1521b40a_dfeb_447b_8658_35e2b725ec25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_84035bbc_badd_4646_a850_a1310fc3ce67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_fa9cc615_0099_435f_8123_e92d33aff570() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_3f6865a8_0557_4b3b_9237_d82f50dc7b74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_02aed84a_4d87_4a53_8668_8a7ee1d03b41() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_bac8f173_743f_482c_8f2c_0d6fdf4842cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a9085423_ebe6_45bb_bfeb_c6e319da3c5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_badd6070_be44_4de5_ab8b_3963c15fcc4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_21c5ab9d_1a4b_49fd_bc45_f93e08c14318() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2eec0a26_889f_42c8_ab3a_cf614c33eb02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4b2d63a3_fb25_441e_9ae9_8437dec23060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0873675e_9f23_4a04_840a_f1e3a4545d19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6b7153cc_6dd6_414c_aaea_c348b763ea89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2dc1d790_febe_4c1a_97c3_fa493faa3d85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_99bdc146_ce24_4f1e_8986_04633a843a52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_815b3a53_3155_46fe_a340_0a14e26e5ac6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ab386b80_099c_41b3_89c9_abff850c78d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2920ec9d_4773_4905_bd37_c1e21eac8991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_50863ff2_4de1_434e_8a8e_bcfcaa1a992c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_5fcbf3db_a994_4263_b99d_4f3608c69312() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_3c818ff9_63a4_4d1d_8625_b24e5fc79de3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_399e1ee8_b536_4b4f_acb5_606a07826bfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_45b385b7_5362_410a_ae36_d7f8b115eb27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_6591485e_9389_44f3_8c84_57412fb5852f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_86e91777_6292_4b6f_b875_3cd212b44283() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a3f92616_88fe_459a_9939_6a4970de9921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6591485e_9389_44f3_8c84_57412fb5852f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_fee7cd71_206a_46f3_a718_65fbe855f76f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_a26c4082_781d_4d49_becb_d101065b27b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6fd1b752_2140_4c98_939f_b6d1568a0a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e27c79db_7149_4b02_b65c_1b4c9ae37533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b4c991b7_aecc_49ba_b04d_f8a9ef108a73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_843605a1_5f73_4543_b747_2a4697a28709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fc513e13_1c49_4633_918b_3bfb255a5ac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8d2a7897_30cd_42b7_af8b_daee576d56f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_07fd84d4_ce27_46f2_a33f_85663ced0b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3c4de698_31c8_4d76_8edd_eaebd6accce3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9e9bee03_0375_466b_9de7_d19455ebb25b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_cce37627_7888_4606_b921_ae0704816a8c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_930a195a_4207_4fde_8c9d_8d4222642842() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_eacec2c1_23cb_4dc9_a7d9_175dfc405289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_78b3576a_5b4c_424d_a1c7_75304b4af075() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f77c9afb_51a7_4f90_9fab_e9a871330a36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_e9cda3a9_39c8_4533_8362_eba65aefcf8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_815b3a53_3155_46fe_a340_0a14e26e5ac6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_81fcc6af_3413_41ad_9ea6_8fee9da8831d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_50ec7e93_5f22_4e4e_922a_4d14806d7bfe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_cffb825a_fb1c_4337_b57a_726dc5e72074() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_d3005b08_ae5c_48ee_a27a_5daf9d966bb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f327f89e_14b2_486a_94f5_3eb83d3c7e9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_cce37627_7888_4606_b921_ae0704816a8c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_1eeea871_05b0_4234_a4d6_0959ddefd7bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_17145441_5706_484e_b008_8555308a3251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d4cf3f8d_8cbb_439c_a52a_c475fef26424() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_4038df60_3524_480e_84fd_08af3e15ad46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_f792f7f2_ec71_491f_a233_b42dc798a07c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_d580d599_d96f_43c3_92f6_c330de837be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ec63832f_4d1b_439b_a6d2_7c23682e3dd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ea685832_8829_471a_9e62_83d698a8e182() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ec9f71a2_4f52_4194_9df7_1704f84d7a89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1bdc924b_8b14_46bd_9a28_20cbc335b68a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_9f7c04cd_81aa_4753_ac47_8786a0898509() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ccb53d16_6e23_4450_b659_755f86012997() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_dbad242a_9fd3_421c_ba9a_5cc765181b33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f3b2b915_8737_4534_9b36_303c9e97da3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_f8a0a499_f3ab_4c28_ae81_95b809d50600() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_e5c8172b_5f08_4447_aff1_2173019b0038() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_aaaa89ba_0356_47d8_8d9c_db9a401dfac5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_6b30a54a_39f9_4bec_a658_7951eae74aec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ed60d1dd_f669_4e9a_b441_1236ce649679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_fee7cd71_206a_46f3_a718_65fbe855f76f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_49fcd812_3a47_4e35_9964_59008040728f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_cfd28e78_833e_4d0f_b036_f052369b3c09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5f950da1_25a3_4028_98c6_556fc489d94e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_558e2004_f9c3_415a_8c13_5dee91265aaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_e0d8a05f_36d1_4de0_8df2_49c4211732b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_26896a9e_3d98_449f_bfa7_848f165a52f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d61a06e0_a1dd_4ad7_8876_d018ff3fab9a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1d00a0fc_0eef_492a_8e95_5d194a6a72bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3c4de698_31c8_4d76_8edd_eaebd6accce3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3f6865a8_0557_4b3b_9237_d82f50dc7b74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_8d2a7897_30cd_42b7_af8b_daee576d56f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_db3ba92f_660c_4b06_baf2_78368914651f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f77c9afb_51a7_4f90_9fab_e9a871330a36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_865d21f0_d80c_432f_b1b8_9874498230e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_84035bbc_badd_4646_a850_a1310fc3ce67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_0acc6cc9_5875_44d3_bd48_b24bb91caf4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_49727e83_e170_4d2f_8744_3e33880947d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_1c11aea5_2426_4d5e_918f_911502043c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_7b5ab684_000e_4905_972a_f90accdc1f10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a26c4082_781d_4d49_becb_d101065b27b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_26896a9e_3d98_449f_bfa7_848f165a52f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4d624990_b328_4f75_b9ad_bafd0dd0f593() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_1d00a0fc_0eef_492a_8e95_5d194a6a72bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9f8dca92_1c17_4f0b_869f_d0102f7601e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b7140928_9635_4c5d_bb8f_19ff0fba1a72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_df836a52_8e5e_4964_99af_6da837d35e47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5fcbf3db_a994_4263_b99d_4f3608c69312() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_47bba2dc_56b7_448a_b7c0_31f1fd040fdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_a7e16e1a_7114_4ac9_ad29_01d525a1683d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_50ec7e93_5f22_4e4e_922a_4d14806d7bfe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e9d93803_53da_4a94_a4ee_3df8a4697597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_81fcc6af_3413_41ad_9ea6_8fee9da8831d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a7e16e1a_7114_4ac9_ad29_01d525a1683d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_1bdc924b_8b14_46bd_9a28_20cbc335b68a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_dbad242a_9fd3_421c_ba9a_5cc765181b33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_ec9f71a2_4f52_4194_9df7_1704f84d7a89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_3434766c_069e_4c8b_aaa0_a87707738ebf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_932345d5_7fa8_4538_bc14_186f5ba046f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_e6144540_b1a9_4c63_a2fe_933e40d4ee96() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9386621c_f170_4700_9b7b_35cab9f89fce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_60b55890_5333_4845_8b63_abc51c86ae13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_db3ba92f_660c_4b06_baf2_78368914651f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_b039404a_91d9_4bad_bc40_75ac9efe3f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_204702ea_441f_45ac_a1e6_d6921a5fb857() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_6e9b267e_ae76_4480_b70d_18fbcd219893() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_4038df60_3524_480e_84fd_08af3e15ad46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bac8f173_743f_482c_8f2c_0d6fdf4842cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_7528433a_9df1_42f4_8893_1468b88288c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1eeea871_05b0_4234_a4d6_0959ddefd7bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_178c6532_f397_426f_9f6b_7649ab5f785a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_71d4b5fd_75fc_429e_be2e_846e2234baee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_e6144540_b1a9_4c63_a2fe_933e40d4ee96() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_99bdc146_ce24_4f1e_8986_04633a843a52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ea685832_8829_471a_9e62_83d698a8e182() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8c973c8b_9e5c_4dc0_a72c_b25747f83287() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_92dc4688_f22a_422a_befd_1cf76c2bd886() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_5412e256_0693_4601_9264_bb98a1655290() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_9f7c04cd_81aa_4753_ac47_8786a0898509() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_11cbe7a9_951b_419b_ad6b_497c9a804849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_ad461f13_726d_4c5d_9c86_df85fe03b77c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_316482e4_96f9_43cc_923d_dc113a87a43a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_b1ca4e97_1d92_4c0d_b173_cdd438e156e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_cce37627_7888_4606_b921_ae0704816a8c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_085fa809_643d_4caa_ab60_3b75ee538fc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6b7153cc_6dd6_414c_aaea_c348b763ea89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_45b385b7_5362_410a_ae36_d7f8b115eb27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6b7153cc_6dd6_414c_aaea_c348b763ea89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_ac4bcdec_3232_4f2b_9fbe_b10b43e04147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_966e529a_30e9_457d_8abf_901a6bfab7fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_d0f37d70_1bab_4ae3_87f4_6606978d1fc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_e9b26a14_c1d4_496c_8733_be4555e77294() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_beda2c5c_bbe8_4917_9274_7d2ea50e9131() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_815b3a53_3155_46fe_a340_0a14e26e5ac6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_e6144540_b1a9_4c63_a2fe_933e40d4ee96() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_a796700b_3101_41df_97c6_7637a9f3b3be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_e1a8c7c4_11ec_483c_8a39_c384bf07bffc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_8d2a7897_30cd_42b7_af8b_daee576d56f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_4c265e4e_8008_43c4_8ba8_7671d8b00b49() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_dbad242a_9fd3_421c_ba9a_5cc765181b33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_bcb19784_7424_434a_a9f2_f025dfaf8a59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b2e5b779_cd09_4690_b83d_2c9f677ed669() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_50c7ebde_3ffd_42f1_8f64_9328f09d581b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1521b40a_dfeb_447b_8658_35e2b725ec25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ed60d1dd_f669_4e9a_b441_1236ce649679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_863762fb_716a_4b99_a863_0c6db1c74006() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2dc1d790_febe_4c1a_97c3_fa493faa3d85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e094467c_7ff1_4762_bc86_194281345421() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b2e5b779_cd09_4690_b83d_2c9f677ed669() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_9f8dca92_1c17_4f0b_869f_d0102f7601e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_d0f37d70_1bab_4ae3_87f4_6606978d1fc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_87db7987_a454_4ab0_81a7_ba7097ecc2c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_6493f40a_ad90_4e32_9d59_429b77d0acef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b57787ee_d9f7_4b85_8734_3fb62f2615df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_b4c991b7_aecc_49ba_b04d_f8a9ef108a73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_881d0442_0a4a_436a_af3d_fa6321028b8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_21a5057c_9234_44dd_8b3f_78fa8dfa74b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_8e8f136c_369a_4118_842e_e4d3b80556d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_02aed84a_4d87_4a53_8668_8a7ee1d03b41() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_1d658de9_31c8_4f00_8862_d4297229d3cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e9cda3a9_39c8_4533_8362_eba65aefcf8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_7437e832_c555_4f9b_aad4_382ba4d01cae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_639c08b6_9749_47c8_9e9e_b0120525fd5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_60547a3b_f2f3_4291_8091_6a9d7c98ed6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_4f006df3_1986_4ab2_a21f_5eb4eef11551() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_139dde5d_e1ef_4e9b_a336_a3550f786b1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_e1cb8491_9376_4d9a_b29b_01611ac79aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_4f31dbc3_8d16_4644_9032_3e2ef1850573() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c82327d4_10dc_419a_9656_325333257766() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_5be0a2de_b5f5_4f86_8eb4_734dc89c2e89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6dedb913_4d05_4b8c_9499_254d2408ad58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d4cf3f8d_8cbb_439c_a52a_c475fef26424() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5a7fe767_bff0_4d2f_9aca_38e6996f45bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_47bba2dc_56b7_448a_b7c0_31f1fd040fdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_92dc4688_f22a_422a_befd_1cf76c2bd886() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_5453c301_dfb3_404a_8d5b_0fa41044ca8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b771b8dd_5bea_429f_b6f7_74218bb8a438() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_727c1f17_1d45_433c_b239_78e6b9f3b708() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_744738d8_6498_44bf_bd49_23e635d4afce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_15577870_b90f_4811_8690_5bd1e99c2fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_661bbd0e_d19e_40f1_99c0_311dd686ba06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_865d21f0_d80c_432f_b1b8_9874498230e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b1ca4e97_1d92_4c0d_b173_cdd438e156e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_c8db7701_a480_430f_a0bf_434a1680aaba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f327f89e_14b2_486a_94f5_3eb83d3c7e9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e5c8172b_5f08_4447_aff1_2173019b0038() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_4038df60_3524_480e_84fd_08af3e15ad46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_e5c8172b_5f08_4447_aff1_2173019b0038() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_aaaa89ba_0356_47d8_8d9c_db9a401dfac5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_4038df60_3524_480e_84fd_08af3e15ad46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_4d624990_b328_4f75_b9ad_bafd0dd0f593() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e259049d_672d_4d23_b3f2_5f9030585626() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_f792f7f2_ec71_491f_a233_b42dc798a07c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_db47b70c_c2f3_4ce6_a98c_5309009653cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ad5b03cd_df53_40e0_a401_35a92898c0b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2ad17ca3_d8ad_453b_abad_b50430af3faf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_beda2c5c_bbe8_4917_9274_7d2ea50e9131() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3c9e4243_900b_41a9_be9e_4d90988988fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_2ad17ca3_d8ad_453b_abad_b50430af3faf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f8a0a499_f3ab_4c28_ae81_95b809d50600() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_478addb9_1928_479a_9391_e707350c9f84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_acad1ec2_69e2_4b92_a327_0aa4b5380223() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_ccb53d16_6e23_4450_b659_755f86012997() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_87db7987_a454_4ab0_81a7_ba7097ecc2c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1bdc924b_8b14_46bd_9a28_20cbc335b68a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_204702ea_441f_45ac_a1e6_d6921a5fb857() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_085fa809_643d_4caa_ab60_3b75ee538fc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_4c265e4e_8008_43c4_8ba8_7671d8b00b49() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_badd6070_be44_4de5_ab8b_3963c15fcc4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1ae2de34_dd11_421a_a919_1be39e9b8fcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ea685832_8829_471a_9e62_83d698a8e182() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_17eed356_a98a_4144_81cc_a130dc8d71dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_a9085423_ebe6_45bb_bfeb_c6e319da3c5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_ed60d1dd_f669_4e9a_b441_1236ce649679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_87fb2c6a_34ca_4714_9c71_5f4dae18e887() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_692bcc92_5697_49a5_8075_744188d2bf67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b039404a_91d9_4bad_bc40_75ac9efe3f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_60547a3b_f2f3_4291_8091_6a9d7c98ed6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_eb5b91f3_c5b1_459e_b83d_2f3a849386c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ebac03bf_376f_4573_aa85_16bce3e518be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_865d21f0_d80c_432f_b1b8_9874498230e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_cffb825a_fb1c_4337_b57a_726dc5e72074() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4c265e4e_8008_43c4_8ba8_7671d8b00b49() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_cc253d53_bcdd_48cd_9672_44649fa81488() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_15091014_7235_4798_83e4_3a32431ef765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_191611d2_1730_471d_bcc5_794c0aa7c004() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_899fb681_838a_4fee_aaeb_8104224668f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ac0a4bf0_05d1_421d_a9fa_34788c642591() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4d624990_b328_4f75_b9ad_bafd0dd0f593() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_81fcc6af_3413_41ad_9ea6_8fee9da8831d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a7e16e1a_7114_4ac9_ad29_01d525a1683d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_af76e576_7bb4_4a6b_ad7e_d01b150d1790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_a79f9971_af1e_4864_b6b4_55c2a8130e58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_16a19495_7462_4362_b04f_fc9bde746fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_45b385b7_5362_410a_ae36_d7f8b115eb27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_4b2d63a3_fb25_441e_9ae9_8437dec23060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5a7fe767_bff0_4d2f_9aca_38e6996f45bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_164a09c6_03a5_45de_b5e8_f2af4e3f660b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b1ca4e97_1d92_4c0d_b173_cdd438e156e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_178c6532_f397_426f_9f6b_7649ab5f785a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8515769a_e00a_4d94_aaa5_c20c676943fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_178c6532_f397_426f_9f6b_7649ab5f785a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_178c6532_f397_426f_9f6b_7649ab5f785a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_df836a52_8e5e_4964_99af_6da837d35e47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_9e9bee03_0375_466b_9de7_d19455ebb25b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_7cfcbc79_7467_47e8_a02c_98ec290ea5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4602b924_803d_415a_bdfe_0de0206a7125() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_eea54644_d489_47cd_bffa_7827ff58ebf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b771b8dd_5bea_429f_b6f7_74218bb8a438() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_cce37627_7888_4606_b921_ae0704816a8c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_954b0240_cece_4cbc_9464_e5264a34b939() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_aaaa89ba_0356_47d8_8d9c_db9a401dfac5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_db3ba92f_660c_4b06_baf2_78368914651f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4b2d63a3_fb25_441e_9ae9_8437dec23060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_29f75f89_21e3_433c_9490_a8bb6314e6db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_15577870_b90f_4811_8690_5bd1e99c2fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ba1524c4_be82_4cd8_bb50_92607f69bd01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_02aed84a_4d87_4a53_8668_8a7ee1d03b41() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_d4cf3f8d_8cbb_439c_a52a_c475fef26424() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6c1d9f4a_474a_4f22_a744_f328ed2a91bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_67529236_e760_43a3_9ea7_51cc91ddbaa6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_587e36f5_fc86_44ef_874c_3ecc1f275fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_9e9bee03_0375_466b_9de7_d19455ebb25b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_9e9bee03_0375_466b_9de7_d19455ebb25b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_1521b40a_dfeb_447b_8658_35e2b725ec25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_e094467c_7ff1_4762_bc86_194281345421() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ccb53d16_6e23_4450_b659_755f86012997() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_852e4bfe_cdf8_4131_8287_e37177bed8c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_75a3b961_8055_46ea_b387_80acf446743b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1c11aea5_2426_4d5e_918f_911502043c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_b7140928_9635_4c5d_bb8f_19ff0fba1a72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_eea54644_d489_47cd_bffa_7827ff58ebf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e27c79db_7149_4b02_b65c_1b4c9ae37533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_91037e1d_7744_45b3_aa4b_94e1c157c70f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_1d658de9_31c8_4f00_8862_d4297229d3cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_3f1d5f9f_8005_4be1_be6a_af01edd12315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_ebac03bf_376f_4573_aa85_16bce3e518be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_e9cda3a9_39c8_4533_8362_eba65aefcf8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_1c11aea5_2426_4d5e_918f_911502043c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_2dc1d790_febe_4c1a_97c3_fa493faa3d85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_0f6db28e_fba0_4b5f_bdd0_62ff634e092d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_f3b2b915_8737_4534_9b36_303c9e97da3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_6493f40a_ad90_4e32_9d59_429b77d0acef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f7ada62_460a_4eb5_be82_f9797b2d7376() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_d9c8ab28_a340_4269_b355_9e9668d286c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_843605a1_5f73_4543_b747_2a4697a28709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6591485e_9389_44f3_8c84_57412fb5852f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ac0a4bf0_05d1_421d_a9fa_34788c642591() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_ec63832f_4d1b_439b_a6d2_7c23682e3dd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a6fe331e_c151_440b_9af1_269c5772617a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_e27c79db_7149_4b02_b65c_1b4c9ae37533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_3f1d5f9f_8005_4be1_be6a_af01edd12315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1c11aea5_2426_4d5e_918f_911502043c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_badd6070_be44_4de5_ab8b_3963c15fcc4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_cffb825a_fb1c_4337_b57a_726dc5e72074() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_863762fb_716a_4b99_a863_0c6db1c74006() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_67529236_e760_43a3_9ea7_51cc91ddbaa6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_21a5057c_9234_44dd_8b3f_78fa8dfa74b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_2bd01f7f_0632_4818_aa79_8de61c7b4e0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7437e832_c555_4f9b_aad4_382ba4d01cae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_587e36f5_fc86_44ef_874c_3ecc1f275fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_bac8f173_743f_482c_8f2c_0d6fdf4842cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_451e9b6b_0dc9_4613_99f8_feeeac29c616() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7b5ab684_000e_4905_972a_f90accdc1f10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_c82327d4_10dc_419a_9656_325333257766() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_a8766ee5_c769_458a_9299_741370924d22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_010b613c_829d_4e69_89ea_f916837e475a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f309460b_7607_4043_8bcd_d1752a581989() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_eea54644_d489_47cd_bffa_7827ff58ebf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_621477ba_4954_4cd3_9812_cbd314708938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_bc4af9d9_c08e_42fd_946a_790968ef9503() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_78b3576a_5b4c_424d_a1c7_75304b4af075() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_76ccea4f_882a_45ce_aae1_52e9bb680b20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f6eed8b9_75db_453e_aa58_776776cf6533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_9386621c_f170_4700_9b7b_35cab9f89fce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_bf9a39d6_42e7_4198_baec_7fb827e74e0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_50863ff2_4de1_434e_8a8e_bcfcaa1a992c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_db3ba92f_660c_4b06_baf2_78368914651f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_50863ff2_4de1_434e_8a8e_bcfcaa1a992c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_529f7d15_687b_4434_beab_b97d9962ab89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_085fa809_643d_4caa_ab60_3b75ee538fc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ac4bcdec_3232_4f2b_9fbe_b10b43e04147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_aaaa89ba_0356_47d8_8d9c_db9a401dfac5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7a2068fd_8f11_42be_9d17_0a15768bdd94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_a79f9971_af1e_4864_b6b4_55c2a8130e58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1ae2de34_dd11_421a_a919_1be39e9b8fcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_6e9b267e_ae76_4480_b70d_18fbcd219893() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_d3005b08_ae5c_48ee_a27a_5daf9d966bb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_65877ab1_60af_4436_8d56_2c2798f00f9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_6278e127_0a3d_4478_850e_5ed3e7773607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_178c6532_f397_426f_9f6b_7649ab5f785a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_af76e576_7bb4_4a6b_ad7e_d01b150d1790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_17145441_5706_484e_b008_8555308a3251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_f6eed8b9_75db_453e_aa58_776776cf6533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e6144540_b1a9_4c63_a2fe_933e40d4ee96() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_478addb9_1928_479a_9391_e707350c9f84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_2f7ae070_0144_4672_852d_307ad82e59e6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_49727e83_e170_4d2f_8744_3e33880947d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_085fa809_643d_4caa_ab60_3b75ee538fc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_af76e576_7bb4_4a6b_ad7e_d01b150d1790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_e9d93803_53da_4a94_a4ee_3df8a4697597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_881d0442_0a4a_436a_af3d_fa6321028b8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f47c8fe1_de17_4b2b_a484_4559dc07b4f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_587e36f5_fc86_44ef_874c_3ecc1f275fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_bf097a19_5c35_4acb_ba3c_14fbd827dfc6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_15577870_b90f_4811_8690_5bd1e99c2fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_3434766c_069e_4c8b_aaa0_a87707738ebf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e64c14f1_5d1b_4fa8_b931_5c2889db16d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_17145441_5706_484e_b008_8555308a3251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_6abea681_fb66_4df6_870e_4a2646907ca7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_7528433a_9df1_42f4_8893_1468b88288c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_178c6532_f397_426f_9f6b_7649ab5f785a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_5f70af44_0e70_455d_bc3d_23637613b7a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1d658de9_31c8_4f00_8862_d4297229d3cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_316482e4_96f9_43cc_923d_dc113a87a43a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_31d29684_6728_45c2_8383_f046fc7646ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_7cfcbc79_7467_47e8_a02c_98ec290ea5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_412ab1dc_173f_4ed5_8b65_aaf27d1b7545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ccb53d16_6e23_4450_b659_755f86012997() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_02aed84a_4d87_4a53_8668_8a7ee1d03b41() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_843605a1_5f73_4543_b747_2a4697a28709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_299e5046_040f_4267_ae4b_92a2bfca6433() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f327f89e_14b2_486a_94f5_3eb83d3c7e9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ccb53d16_6e23_4450_b659_755f86012997() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_bf097a19_5c35_4acb_ba3c_14fbd827dfc6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_e9511eeb_c1d1_435c_9572_6d57456515ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_240b8c2c_348c_4acc_abb0_2b2910658e5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f3b2b915_8737_4534_9b36_303c9e97da3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_fee7cd71_206a_46f3_a718_65fbe855f76f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_72049a7d_821b_4dca_9b1a_3cf104a4b67c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_30d135c3_f023_4fb1_9c3d_95305aadc243() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_2fc8099c_429a_4682_ada0_ccc17ca42855() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5453c301_dfb3_404a_8d5b_0fa41044ca8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_65877ab1_60af_4436_8d56_2c2798f00f9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f327f89e_14b2_486a_94f5_3eb83d3c7e9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_76ccea4f_882a_45ce_aae1_52e9bb680b20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_412ab1dc_173f_4ed5_8b65_aaf27d1b7545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_930a195a_4207_4fde_8c9d_8d4222642842() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_932345d5_7fa8_4538_bc14_186f5ba046f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_e4883c35_6136_4eac_a548_2b882630b4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2dc1d790_febe_4c1a_97c3_fa493faa3d85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_17eed356_a98a_4144_81cc_a130dc8d71dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_0f6db28e_fba0_4b5f_bdd0_62ff634e092d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_f309460b_7607_4043_8bcd_d1752a581989() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_b95a33f3_d95f_404a_9545_decd7aeccf8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d61a06e0_a1dd_4ad7_8876_d018ff3fab9a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_783891ee_eb84_464a_abb0_b42451fc07e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_b2e5b779_cd09_4690_b83d_2c9f677ed669() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_86e91777_6292_4b6f_b875_3cd212b44283() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e9b26a14_c1d4_496c_8733_be4555e77294() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_07fd84d4_ce27_46f2_a33f_85663ced0b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_00120f57_0796_4276_ae6c_c0ee5d320c1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_50c7ebde_3ffd_42f1_8f64_9328f09d581b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_55c791ff_43bd_4681_81dd_474414d0907d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_2eec0a26_889f_42c8_ab3a_cf614c33eb02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a6fe331e_c151_440b_9af1_269c5772617a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_df8ce354_1273_42f6_bfa8_4ccc2bf1975e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b995b6ab_1e95_4c21_b895_55ec8aeac450() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_9d8fdebe_0ece_476e_aa90_2ce8240de597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_018e5b2b_20bc_4228_8dd8_2e78c81fda11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_0c831846_2911_414f_9c33_2fcdf65a8610() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_02aed84a_4d87_4a53_8668_8a7ee1d03b41() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a796700b_3101_41df_97c6_7637a9f3b3be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_f63d409d_516f_4bdb_8f21_a636a37dc729() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b95a33f3_d95f_404a_9545_decd7aeccf8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_47bba2dc_56b7_448a_b7c0_31f1fd040fdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_187fe97e_fa5e_4288_a0bc_c23248e92289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2920ec9d_4773_4905_bd37_c1e21eac8991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_30d135c3_f023_4fb1_9c3d_95305aadc243() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_379750a7_e27b_4f81_a664_60419d7485c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_92dc4688_f22a_422a_befd_1cf76c2bd886() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_727c1f17_1d45_433c_b239_78e6b9f3b708() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_6dedb913_4d05_4b8c_9499_254d2408ad58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_aa045fa2_71bf_4a24_80e2_9b11d545a5d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e4883c35_6136_4eac_a548_2b882630b4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_4f006df3_1986_4ab2_a21f_5eb4eef11551() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_db47b70c_c2f3_4ce6_a98c_5309009653cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d812e5e1_b8fd_4eb2_8734_f923d475fc0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a33c7c91_6bac_41ba_80c0_78e68954cca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f6eed8b9_75db_453e_aa58_776776cf6533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3c4de698_31c8_4d76_8edd_eaebd6accce3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c66fa3c_4f6b_41ff_b081_873217edc19d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_2a4aa73b_31ad_4698_b480_a31d1d0a9b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_5f950da1_25a3_4028_98c6_556fc489d94e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_954b0240_cece_4cbc_9464_e5264a34b939() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_bcb19784_7424_434a_a9f2_f025dfaf8a59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1ae2de34_dd11_421a_a919_1be39e9b8fcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_96476ed6_e033_4e23_8251_0bfb2ef28e80() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_954b0240_cece_4cbc_9464_e5264a34b939() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3f6865a8_0557_4b3b_9237_d82f50dc7b74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_727c1f17_1d45_433c_b239_78e6b9f3b708() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6fd1b752_2140_4c98_939f_b6d1568a0a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_a6fe331e_c151_440b_9af1_269c5772617a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a00924fd_5f4e_45a4_930f_427c4b139cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a9085423_ebe6_45bb_bfeb_c6e319da3c5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_60b55890_5333_4845_8b63_abc51c86ae13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_fb8487a0_53ef_489d_ba29_fa94cd3244cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_75a3b961_8055_46ea_b387_80acf446743b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fc513e13_1c49_4633_918b_3bfb255a5ac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b4c991b7_aecc_49ba_b04d_f8a9ef108a73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a0695789_7e86_436d_ae93_6e212b003010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_bf3995bb_7132_4003_b1d1_b7a93df5a712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_bf9a39d6_42e7_4198_baec_7fb827e74e0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_86e91777_6292_4b6f_b875_3cd212b44283() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_699e1ae9_3bb2_49ee_b625_80863052b62e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_cc253d53_bcdd_48cd_9672_44649fa81488() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_2f7ae070_0144_4672_852d_307ad82e59e6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_c28c830c_9b19_4290_bc64_79b90c8f8ad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_0873675e_9f23_4a04_840a_f1e3a4545d19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4038df60_3524_480e_84fd_08af3e15ad46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_379750a7_e27b_4f81_a664_60419d7485c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6591485e_9389_44f3_8c84_57412fb5852f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_60b55890_5333_4845_8b63_abc51c86ae13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_3f1d5f9f_8005_4be1_be6a_af01edd12315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_aa045fa2_71bf_4a24_80e2_9b11d545a5d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_16a19495_7462_4362_b04f_fc9bde746fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_2f7ae070_0144_4672_852d_307ad82e59e6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_899fb681_838a_4fee_aaeb_8104224668f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_71d4b5fd_75fc_429e_be2e_846e2234baee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_3c4de698_31c8_4d76_8edd_eaebd6accce3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_75a3b961_8055_46ea_b387_80acf446743b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_478addb9_1928_479a_9391_e707350c9f84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_3f6865a8_0557_4b3b_9237_d82f50dc7b74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_21a5057c_9234_44dd_8b3f_78fa8dfa74b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_ee18edb1_8f9e_444b_bcdd_932a7ed4677f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_863762fb_716a_4b99_a863_0c6db1c74006() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_21c5ab9d_1a4b_49fd_bc45_f93e08c14318() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_c8db7701_a480_430f_a0bf_434a1680aaba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_191611d2_1730_471d_bcc5_794c0aa7c004() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_ec63832f_4d1b_439b_a6d2_7c23682e3dd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_76ccea4f_882a_45ce_aae1_52e9bb680b20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_91037e1d_7744_45b3_aa4b_94e1c157c70f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_b039404a_91d9_4bad_bc40_75ac9efe3f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_e27c79db_7149_4b02_b65c_1b4c9ae37533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ebac03bf_376f_4573_aa85_16bce3e518be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_31d29684_6728_45c2_8383_f046fc7646ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_75a3b961_8055_46ea_b387_80acf446743b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3fe26bee_0a8e_452f_aa28_cd9c3f62216b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_78b3576a_5b4c_424d_a1c7_75304b4af075() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_87db7987_a454_4ab0_81a7_ba7097ecc2c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_884d1a62_c544_45ba_bd51_dbbedb71eeba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_51da9846_b0eb_44c7_9601_b63fef168983() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b57787ee_d9f7_4b85_8734_3fb62f2615df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6278e127_0a3d_4478_850e_5ed3e7773607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bac8f173_743f_482c_8f2c_0d6fdf4842cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_11cbe7a9_951b_419b_ad6b_497c9a804849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1eeea871_05b0_4234_a4d6_0959ddefd7bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_9f7c04cd_81aa_4753_ac47_8786a0898509() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0c831846_2911_414f_9c33_2fcdf65a8610() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8515769a_e00a_4d94_aaa5_c20c676943fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_5f950da1_25a3_4028_98c6_556fc489d94e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_f77c9afb_51a7_4f90_9fab_e9a871330a36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_50863ff2_4de1_434e_8a8e_bcfcaa1a992c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_72049a7d_821b_4dca_9b1a_3cf104a4b67c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_db47b70c_c2f3_4ce6_a98c_5309009653cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_c82327d4_10dc_419a_9656_325333257766() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_6fd1b752_2140_4c98_939f_b6d1568a0a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_f3964e00_ea32_474b_9b18_8548792e6444() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_65877ab1_60af_4436_8d56_2c2798f00f9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9386621c_f170_4700_9b7b_35cab9f89fce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_881d0442_0a4a_436a_af3d_fa6321028b8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_316482e4_96f9_43cc_923d_dc113a87a43a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_a9085423_ebe6_45bb_bfeb_c6e319da3c5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_240b8c2c_348c_4acc_abb0_2b2910658e5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_299e5046_040f_4267_ae4b_92a2bfca6433() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_eacec2c1_23cb_4dc9_a7d9_175dfc405289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_beda2c5c_bbe8_4917_9274_7d2ea50e9131() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_c5d86865_e0f2_43bd_a160_35132eb25260() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_17eed356_a98a_4144_81cc_a130dc8d71dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_164a09c6_03a5_45de_b5e8_f2af4e3f660b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e977284a_e651_4a31_815b_6f9a68cf57f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_d580d599_d96f_43c3_92f6_c330de837be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_eb5b91f3_c5b1_459e_b83d_2f3a849386c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3434766c_069e_4c8b_aaa0_a87707738ebf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_451e9b6b_0dc9_4613_99f8_feeeac29c616() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_843605a1_5f73_4543_b747_2a4697a28709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_5412e256_0693_4601_9264_bb98a1655290() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_558e2004_f9c3_415a_8c13_5dee91265aaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_29f75f89_21e3_433c_9490_a8bb6314e6db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_bf097a19_5c35_4acb_ba3c_14fbd827dfc6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_50ec7e93_5f22_4e4e_922a_4d14806d7bfe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_661bbd0e_d19e_40f1_99c0_311dd686ba06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_72049a7d_821b_4dca_9b1a_3cf104a4b67c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_47855f1d_5dea_4a3b_a158_50a18a59fdff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_7b5ab684_000e_4905_972a_f90accdc1f10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_187fe97e_fa5e_4288_a0bc_c23248e92289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6493f40a_ad90_4e32_9d59_429b77d0acef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5bd0b6e3_ff80_4177_aba3_68c7ab538204() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_c82327d4_10dc_419a_9656_325333257766() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_7aa3e9c6_7f2f_455c_811d_b6b3419af771() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_b0b584fc_3829_4045_a1d7_e946ee10271b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_6591485e_9389_44f3_8c84_57412fb5852f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e64c14f1_5d1b_4fa8_b931_5c2889db16d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c5d86865_e0f2_43bd_a160_35132eb25260() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f77c9afb_51a7_4f90_9fab_e9a871330a36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_638f0eac_bade_4319_ac99_0897319a1eca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4602b924_803d_415a_bdfe_0de0206a7125() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_17eed356_a98a_4144_81cc_a130dc8d71dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fc513e13_1c49_4633_918b_3bfb255a5ac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_7aa3e9c6_7f2f_455c_811d_b6b3419af771() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_240b8c2c_348c_4acc_abb0_2b2910658e5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d61a06e0_a1dd_4ad7_8876_d018ff3fab9a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_0c831846_2911_414f_9c33_2fcdf65a8610() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_010b613c_829d_4e69_89ea_f916837e475a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_7b5ab684_000e_4905_972a_f90accdc1f10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ccb53d16_6e23_4450_b659_755f86012997() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_638f0eac_bade_4319_ac99_0897319a1eca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_621477ba_4954_4cd3_9812_cbd314708938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_638f0eac_bade_4319_ac99_0897319a1eca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_dbad242a_9fd3_421c_ba9a_5cc765181b33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_e259049d_672d_4d23_b3f2_5f9030585626() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_65877ab1_60af_4436_8d56_2c2798f00f9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fa9cc615_0099_435f_8123_e92d33aff570() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_187fe97e_fa5e_4288_a0bc_c23248e92289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4602b924_803d_415a_bdfe_0de0206a7125() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_2a4aa73b_31ad_4698_b480_a31d1d0a9b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_451e9b6b_0dc9_4613_99f8_feeeac29c616() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_5fcbf3db_a994_4263_b99d_4f3608c69312() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_9d8fdebe_0ece_476e_aa90_2ce8240de597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f3b2b915_8737_4534_9b36_303c9e97da3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_8e8f136c_369a_4118_842e_e4d3b80556d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_31d29684_6728_45c2_8383_f046fc7646ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_4b2d63a3_fb25_441e_9ae9_8437dec23060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_21a5057c_9234_44dd_8b3f_78fa8dfa74b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_60b55890_5333_4845_8b63_abc51c86ae13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5be0a2de_b5f5_4f86_8eb4_734dc89c2e89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e64c14f1_5d1b_4fa8_b931_5c2889db16d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_71d4b5fd_75fc_429e_be2e_846e2234baee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_699e1ae9_3bb2_49ee_b625_80863052b62e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_1eeea871_05b0_4234_a4d6_0959ddefd7bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_5be0a2de_b5f5_4f86_8eb4_734dc89c2e89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ee18edb1_8f9e_444b_bcdd_932a7ed4677f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_412ab1dc_173f_4ed5_8b65_aaf27d1b7545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_699e1ae9_3bb2_49ee_b625_80863052b62e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_aa045fa2_71bf_4a24_80e2_9b11d545a5d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_cc253d53_bcdd_48cd_9672_44649fa81488() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4f006df3_1986_4ab2_a21f_5eb4eef11551() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b1ca4e97_1d92_4c0d_b173_cdd438e156e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e0d8a05f_36d1_4de0_8df2_49c4211732b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_899fb681_838a_4fee_aaeb_8104224668f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_d3005b08_ae5c_48ee_a27a_5daf9d966bb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_893fb16f_1d0c_424b_beb1_53966af892a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3dd80269_1724_42c9_beed_d9ee99f84ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_2eec0a26_889f_42c8_ab3a_cf614c33eb02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_815b3a53_3155_46fe_a340_0a14e26e5ac6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_899fb681_838a_4fee_aaeb_8104224668f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7528433a_9df1_42f4_8893_1468b88288c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_4602b924_803d_415a_bdfe_0de0206a7125() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_7a2068fd_8f11_42be_9d17_0a15768bdd94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_018e5b2b_20bc_4228_8dd8_2e78c81fda11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ebac03bf_376f_4573_aa85_16bce3e518be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_139dde5d_e1ef_4e9b_a336_a3550f786b1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_884d1a62_c544_45ba_bd51_dbbedb71eeba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e259049d_672d_4d23_b3f2_5f9030585626() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_59e84e77_e49c_4108_bf2d_5d418ba54d97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_c82327d4_10dc_419a_9656_325333257766() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d3005b08_ae5c_48ee_a27a_5daf9d966bb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_92dc4688_f22a_422a_befd_1cf76c2bd886() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_e259049d_672d_4d23_b3f2_5f9030585626() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e0d8a05f_36d1_4de0_8df2_49c4211732b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_6e9b267e_ae76_4480_b70d_18fbcd219893() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_a37873b0_1240_43b0_8c0c_ae0c9babbdf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a26c4082_781d_4d49_becb_d101065b27b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_d812e5e1_b8fd_4eb2_8734_f923d475fc0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_aa045fa2_71bf_4a24_80e2_9b11d545a5d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a6eb6bda_797b_4295_a04c_62181ba40628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2f7ae070_0144_4672_852d_307ad82e59e6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_ad5b03cd_df53_40e0_a401_35a92898c0b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_9f8dca92_1c17_4f0b_869f_d0102f7601e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_e977284a_e651_4a31_815b_6f9a68cf57f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_bf9a39d6_42e7_4198_baec_7fb827e74e0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_865d21f0_d80c_432f_b1b8_9874498230e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_d4cf3f8d_8cbb_439c_a52a_c475fef26424() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_164a09c6_03a5_45de_b5e8_f2af4e3f660b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_555da9d4_9a5c_49dd_af49_1f24d38d8d9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_4038df60_3524_480e_84fd_08af3e15ad46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_fb8487a0_53ef_489d_ba29_fa94cd3244cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_ee18edb1_8f9e_444b_bcdd_932a7ed4677f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_bf9a39d6_42e7_4198_baec_7fb827e74e0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8e8f136c_369a_4118_842e_e4d3b80556d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_59e84e77_e49c_4108_bf2d_5d418ba54d97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ea685832_8829_471a_9e62_83d698a8e182() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_75a3b961_8055_46ea_b387_80acf446743b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_018e5b2b_20bc_4228_8dd8_2e78c81fda11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2dc1d790_febe_4c1a_97c3_fa493faa3d85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_11cbe7a9_951b_419b_ad6b_497c9a804849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7140928_9635_4c5d_bb8f_19ff0fba1a72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_893fb16f_1d0c_424b_beb1_53966af892a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_84035bbc_badd_4646_a850_a1310fc3ce67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_ba1524c4_be82_4cd8_bb50_92607f69bd01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_3c9e4243_900b_41a9_be9e_4d90988988fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_a00924fd_5f4e_45a4_930f_427c4b139cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_5412e256_0693_4601_9264_bb98a1655290() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_a657dff6_0ef5_4bec_88b3_71770e988c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_e9511eeb_c1d1_435c_9572_6d57456515ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_4b2d63a3_fb25_441e_9ae9_8437dec23060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_d812e5e1_b8fd_4eb2_8734_f923d475fc0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_50c7ebde_3ffd_42f1_8f64_9328f09d581b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_a0695789_7e86_436d_ae93_6e212b003010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_17145441_5706_484e_b008_8555308a3251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_451e9b6b_0dc9_4613_99f8_feeeac29c616() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_b4c991b7_aecc_49ba_b04d_f8a9ef108a73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ebac03bf_376f_4573_aa85_16bce3e518be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_529f7d15_687b_4434_beab_b97d9962ab89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_87db7987_a454_4ab0_81a7_ba7097ecc2c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a3f92616_88fe_459a_9939_6a4970de9921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_e1a8c7c4_11ec_483c_8a39_c384bf07bffc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_692bcc92_5697_49a5_8075_744188d2bf67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_478addb9_1928_479a_9391_e707350c9f84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_7437e832_c555_4f9b_aad4_382ba4d01cae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2dc1d790_febe_4c1a_97c3_fa493faa3d85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_15091014_7235_4798_83e4_3a32431ef765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_47bba2dc_56b7_448a_b7c0_31f1fd040fdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_f6eed8b9_75db_453e_aa58_776776cf6533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8d2a7897_30cd_42b7_af8b_daee576d56f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e5c8172b_5f08_4447_aff1_2173019b0038() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_aaaa89ba_0356_47d8_8d9c_db9a401dfac5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_14479c31_c593_4a5e_95d7_e0bfe7a2b37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_7cfcbc79_7467_47e8_a02c_98ec290ea5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_6b30a54a_39f9_4bec_a658_7951eae74aec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_a79f9971_af1e_4864_b6b4_55c2a8130e58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_eb5b91f3_c5b1_459e_b83d_2f3a849386c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_51da9846_b0eb_44c7_9601_b63fef168983() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_204702ea_441f_45ac_a1e6_d6921a5fb857() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_ad461f13_726d_4c5d_9c86_df85fe03b77c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_a00924fd_5f4e_45a4_930f_427c4b139cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_b95a33f3_d95f_404a_9545_decd7aeccf8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e1cb8491_9376_4d9a_b29b_01611ac79aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_eb5b91f3_c5b1_459e_b83d_2f3a849386c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_a8766ee5_c769_458a_9299_741370924d22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a79f9971_af1e_4864_b6b4_55c2a8130e58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_60547a3b_f2f3_4291_8091_6a9d7c98ed6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_04447889_0e0d_4932_8122_7062b0b97fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_15091014_7235_4798_83e4_3a32431ef765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_d1fe9331_833b_450d_9ba3_08972bd89892() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_7528433a_9df1_42f4_8893_1468b88288c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6b30a54a_39f9_4bec_a658_7951eae74aec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4f006df3_1986_4ab2_a21f_5eb4eef11551() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e9b26a14_c1d4_496c_8733_be4555e77294() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ee18edb1_8f9e_444b_bcdd_932a7ed4677f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b7140928_9635_4c5d_bb8f_19ff0fba1a72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_5453c301_dfb3_404a_8d5b_0fa41044ca8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a33c7c91_6bac_41ba_80c0_78e68954cca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2ad17ca3_d8ad_453b_abad_b50430af3faf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_187fe97e_fa5e_4288_a0bc_c23248e92289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_d61a06e0_a1dd_4ad7_8876_d018ff3fab9a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1d00a0fc_0eef_492a_8e95_5d194a6a72bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d4cf3f8d_8cbb_439c_a52a_c475fef26424() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_3dd80269_1724_42c9_beed_d9ee99f84ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6b7153cc_6dd6_414c_aaea_c348b763ea89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ec63832f_4d1b_439b_a6d2_7c23682e3dd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_f47c8fe1_de17_4b2b_a484_4559dc07b4f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_df836a52_8e5e_4964_99af_6da837d35e47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3dd80269_1724_42c9_beed_d9ee99f84ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_6278e127_0a3d_4478_850e_5ed3e7773607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e977284a_e651_4a31_815b_6f9a68cf57f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_df8ce354_1273_42f6_bfa8_4ccc2bf1975e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_ed60d1dd_f669_4e9a_b441_1236ce649679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_0c831846_2911_414f_9c33_2fcdf65a8610() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_76ccea4f_882a_45ce_aae1_52e9bb680b20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_ed60d1dd_f669_4e9a_b441_1236ce649679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_49727e83_e170_4d2f_8744_3e33880947d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_379750a7_e27b_4f81_a664_60419d7485c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_299e5046_040f_4267_ae4b_92a2bfca6433() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_e1a8c7c4_11ec_483c_8a39_c384bf07bffc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_2fc8099c_429a_4682_ada0_ccc17ca42855() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ac4bcdec_3232_4f2b_9fbe_b10b43e04147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_30d135c3_f023_4fb1_9c3d_95305aadc243() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_91037e1d_7744_45b3_aa4b_94e1c157c70f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_a0695789_7e86_436d_ae93_6e212b003010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ea685832_8829_471a_9e62_83d698a8e182() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ab386b80_099c_41b3_89c9_abff850c78d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_15091014_7235_4798_83e4_3a32431ef765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_f309460b_7607_4043_8bcd_d1752a581989() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_e5c8172b_5f08_4447_aff1_2173019b0038() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6c1d9f4a_474a_4f22_a744_f328ed2a91bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_29f75f89_21e3_433c_9490_a8bb6314e6db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_661bbd0e_d19e_40f1_99c0_311dd686ba06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e9511eeb_c1d1_435c_9572_6d57456515ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_a33c7c91_6bac_41ba_80c0_78e68954cca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_191611d2_1730_471d_bcc5_794c0aa7c004() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_fc513e13_1c49_4633_918b_3bfb255a5ac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9f8dca92_1c17_4f0b_869f_d0102f7601e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_21a5057c_9234_44dd_8b3f_78fa8dfa74b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_e1cb8491_9376_4d9a_b29b_01611ac79aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_e0d8a05f_36d1_4de0_8df2_49c4211732b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_bf097a19_5c35_4acb_ba3c_14fbd827dfc6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_7437e832_c555_4f9b_aad4_382ba4d01cae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_6fd1b752_2140_4c98_939f_b6d1568a0a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_692bcc92_5697_49a5_8075_744188d2bf67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_3fe26bee_0a8e_452f_aa28_cd9c3f62216b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9d8fdebe_0ece_476e_aa90_2ce8240de597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_638f0eac_bade_4319_ac99_0897319a1eca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e64c14f1_5d1b_4fa8_b931_5c2889db16d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3c9e4243_900b_41a9_be9e_4d90988988fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_75a3b961_8055_46ea_b387_80acf446743b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5a7fe767_bff0_4d2f_9aca_38e6996f45bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_9f8dca92_1c17_4f0b_869f_d0102f7601e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_299e5046_040f_4267_ae4b_92a2bfca6433() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_bf3995bb_7132_4003_b1d1_b7a93df5a712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bce02fa9_879f_49c1_88cc_f0fa38607796() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_14479c31_c593_4a5e_95d7_e0bfe7a2b37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_399e1ee8_b536_4b4f_acb5_606a07826bfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_04447889_0e0d_4932_8122_7062b0b97fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_3dd80269_1724_42c9_beed_d9ee99f84ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2fc8099c_429a_4682_ada0_ccc17ca42855() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_5f70af44_0e70_455d_bc3d_23637613b7a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_316482e4_96f9_43cc_923d_dc113a87a43a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_621477ba_4954_4cd3_9812_cbd314708938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_727c1f17_1d45_433c_b239_78e6b9f3b708() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_899fb681_838a_4fee_aaeb_8104224668f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6c1d9f4a_474a_4f22_a744_f328ed2a91bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_91037e1d_7744_45b3_aa4b_94e1c157c70f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_55c791ff_43bd_4681_81dd_474414d0907d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_acad1ec2_69e2_4b92_a327_0aa4b5380223() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a00924fd_5f4e_45a4_930f_427c4b139cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_843605a1_5f73_4543_b747_2a4697a28709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_010b613c_829d_4e69_89ea_f916837e475a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_2c66fa3c_4f6b_41ff_b081_873217edc19d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bc4af9d9_c08e_42fd_946a_790968ef9503() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_9386621c_f170_4700_9b7b_35cab9f89fce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6278e127_0a3d_4478_850e_5ed3e7773607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d9c8ab28_a340_4269_b355_9e9668d286c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_acad1ec2_69e2_4b92_a327_0aa4b5380223() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_966e529a_30e9_457d_8abf_901a6bfab7fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0873675e_9f23_4a04_840a_f1e3a4545d19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_379750a7_e27b_4f81_a664_60419d7485c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_df8ce354_1273_42f6_bfa8_4ccc2bf1975e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ab386b80_099c_41b3_89c9_abff850c78d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4997ccc9_80de_4610_940c_a67d26fb88ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_c8db7701_a480_430f_a0bf_434a1680aaba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_e9511eeb_c1d1_435c_9572_6d57456515ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_cce37627_7888_4606_b921_ae0704816a8c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_64424203_1bf6_4c1e_9f98_ee960b4902ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_930a195a_4207_4fde_8c9d_8d4222642842() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_164a09c6_03a5_45de_b5e8_f2af4e3f660b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_96476ed6_e033_4e23_8251_0bfb2ef28e80() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1eeea871_05b0_4234_a4d6_0959ddefd7bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_783891ee_eb84_464a_abb0_b42451fc07e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_3434766c_069e_4c8b_aaa0_a87707738ebf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_87db7987_a454_4ab0_81a7_ba7097ecc2c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ad5b03cd_df53_40e0_a401_35a92898c0b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_4d624990_b328_4f75_b9ad_bafd0dd0f593() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_ccceb358_7056_4c3e_b371_2489337dca39() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_bcb19784_7424_434a_a9f2_f025dfaf8a59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b995b6ab_1e95_4c21_b895_55ec8aeac450() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e2211059_43d1_4b9f_b4f1_30f15463c1dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_df8ce354_1273_42f6_bfa8_4ccc2bf1975e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_a6fe331e_c151_440b_9af1_269c5772617a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_71d4b5fd_75fc_429e_be2e_846e2234baee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_af76e576_7bb4_4a6b_ad7e_d01b150d1790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_df836a52_8e5e_4964_99af_6da837d35e47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_15091014_7235_4798_83e4_3a32431ef765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_5453c301_dfb3_404a_8d5b_0fa41044ca8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_716ec40a_9196_4c24_9227_eb622cb32760() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_df836a52_8e5e_4964_99af_6da837d35e47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_1a892c90_9a35_498b_830a_87fe35ae87e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_6b7153cc_6dd6_414c_aaea_c348b763ea89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_f47c8fe1_de17_4b2b_a484_4559dc07b4f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b9814b26_2690_481a_ba20_4302311d8084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_6c1d9f4a_474a_4f22_a744_f328ed2a91bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_fa9cc615_0099_435f_8123_e92d33aff570() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_bf097a19_5c35_4acb_ba3c_14fbd827dfc6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_932345d5_7fa8_4538_bc14_186f5ba046f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_87db7987_a454_4ab0_81a7_ba7097ecc2c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3c818ff9_63a4_4d1d_8625_b24e5fc79de3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_cfd28e78_833e_4d0f_b036_f052369b3c09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9f7c04cd_81aa_4753_ac47_8786a0898509() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_e9511eeb_c1d1_435c_9572_6d57456515ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_1ae2de34_dd11_421a_a919_1be39e9b8fcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_1bdc924b_8b14_46bd_9a28_20cbc335b68a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_6b7153cc_6dd6_414c_aaea_c348b763ea89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_76ccea4f_882a_45ce_aae1_52e9bb680b20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_79efaffe_8a10_4af3_91d7_857873508885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_379750a7_e27b_4f81_a664_60419d7485c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_fc513e13_1c49_4633_918b_3bfb255a5ac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_8c973c8b_9e5c_4dc0_a72c_b25747f83287() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_863762fb_716a_4b99_a863_0c6db1c74006() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_6c93a622_5a40_41c7_98c1_b6154ffaefd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3f6865a8_0557_4b3b_9237_d82f50dc7b74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_db47b70c_c2f3_4ce6_a98c_5309009653cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_9d8fdebe_0ece_476e_aa90_2ce8240de597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_9d8fdebe_0ece_476e_aa90_2ce8240de597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_1c11aea5_2426_4d5e_918f_911502043c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_59d212a1_07d3_4c4b_9dd9_2ab6494178b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_8f6bc875_ca01_4d22_947f_f4b4b12a9a12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_db47b70c_c2f3_4ce6_a98c_5309009653cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d8cd6731_e63f_4745_81e6_a19d52a5432a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_a7e16e1a_7114_4ac9_ad29_01d525a1683d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_191611d2_1730_471d_bcc5_794c0aa7c004() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_744738d8_6498_44bf_bd49_23e635d4afce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_71d4b5fd_75fc_429e_be2e_846e2234baee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c8ce6fac_cacd_46d1_8317_2185ba755012() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_e9cda3a9_39c8_4533_8362_eba65aefcf8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_db3ba92f_660c_4b06_baf2_78368914651f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8e8f136c_369a_4118_842e_e4d3b80556d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a8766ee5_c769_458a_9299_741370924d22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ea46944d_6e45_47f4_b822_3a386b9c12ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_67529236_e760_43a3_9ea7_51cc91ddbaa6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_04447889_0e0d_4932_8122_7062b0b97fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f33db735_1426_48b3_a8cf_6bd971a60d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e9cda3a9_39c8_4533_8362_eba65aefcf8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0873675e_9f23_4a04_840a_f1e3a4545d19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_47bba2dc_56b7_448a_b7c0_31f1fd040fdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_fb8487a0_53ef_489d_ba29_fa94cd3244cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_7437e832_c555_4f9b_aad4_382ba4d01cae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_beda2c5c_bbe8_4917_9274_7d2ea50e9131() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e977284a_e651_4a31_815b_6f9a68cf57f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_279cfa77_7685_4004_8c81_40e47b13596b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d0f37d70_1bab_4ae3_87f4_6606978d1fc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_00120f57_0796_4276_ae6c_c0ee5d320c1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e1a8c7c4_11ec_483c_8a39_c384bf07bffc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_57c49baa_5c8d_46cf_9b0b_0b397c934e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b0b584fc_3829_4045_a1d7_e946ee10271b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_81c807b0_d9b1_4576_8198_7daa6be373cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_65877ab1_60af_4436_8d56_2c2798f00f9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cc253d53_bcdd_48cd_9672_44649fa81488() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1d658de9_31c8_4f00_8862_d4297229d3cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_5bd0b6e3_ff80_4177_aba3_68c7ab538204() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_954b0240_cece_4cbc_9464_e5264a34b939() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_e094467c_7ff1_4762_bc86_194281345421() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_50ec7e93_5f22_4e4e_922a_4d14806d7bfe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_a9085423_ebe6_45bb_bfeb_c6e319da3c5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f6eed8b9_75db_453e_aa58_776776cf6533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_4f31dbc3_8d16_4644_9032_3e2ef1850573() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_a33c7c91_6bac_41ba_80c0_78e68954cca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_60b55890_5333_4845_8b63_abc51c86ae13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_8d27fa1e_f3e9_4056_8724_bf79358dc8a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_89b25cbf_115c_4ac3_80de_94fb5b08dc53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_6493f40a_ad90_4e32_9d59_429b77d0acef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_55c791ff_43bd_4681_81dd_474414d0907d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_2eec0a26_889f_42c8_ab3a_cf614c33eb02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_ac0a4bf0_05d1_421d_a9fa_34788c642591() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_49727e83_e170_4d2f_8744_3e33880947d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_47855f1d_5dea_4a3b_a158_50a18a59fdff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_86e91777_6292_4b6f_b875_3cd212b44283() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_018e5b2b_20bc_4228_8dd8_2e78c81fda11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f792f7f2_ec71_491f_a233_b42dc798a07c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_412ab1dc_173f_4ed5_8b65_aaf27d1b7545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_df8ce354_1273_42f6_bfa8_4ccc2bf1975e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5f70af44_0e70_455d_bc3d_23637613b7a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_852e4bfe_cdf8_4131_8287_e37177bed8c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_23f06aed_d217_4e87_8284_af2f744379b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_3c818ff9_63a4_4d1d_8625_b24e5fc79de3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_bcb19784_7424_434a_a9f2_f025dfaf8a59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_beda2c5c_bbe8_4917_9274_7d2ea50e9131() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_26896a9e_3d98_449f_bfa7_848f165a52f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c28c830c_9b19_4290_bc64_79b90c8f8ad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_290defd6_0556_42fc_b4bf_6cc8f54298c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_478addb9_1928_479a_9391_e707350c9f84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_a3f92616_88fe_459a_9939_6a4970de9921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_17145441_5706_484e_b008_8555308a3251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_0f547776_b8e7_40f2_bc55_c9d07a4df926() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_af76e576_7bb4_4a6b_ad7e_d01b150d1790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_81c807b0_d9b1_4576_8198_7daa6be373cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_639c08b6_9749_47c8_9e9e_b0120525fd5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_26896a9e_3d98_449f_bfa7_848f165a52f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_16a19495_7462_4362_b04f_fc9bde746fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6e9b267e_ae76_4480_b70d_18fbcd219893() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_6c1d9f4a_474a_4f22_a744_f328ed2a91bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_5d6eb7a5_812c_4557_80c9_1fe7e6be39a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_5412e256_0693_4601_9264_bb98a1655290() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_bc4af9d9_c08e_42fd_946a_790968ef9503() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_a79f9971_af1e_4864_b6b4_55c2a8130e58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_14568d3d_0ba2_4c59_9641_cc5afd69adcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0c831846_2911_414f_9c33_2fcdf65a8610() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_881d0442_0a4a_436a_af3d_fa6321028b8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_124eb85f_27a2_4e9e_8c80_73229a2a2e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_639c08b6_9749_47c8_9e9e_b0120525fd5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_bf097a19_5c35_4acb_ba3c_14fbd827dfc6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_31d29684_6728_45c2_8383_f046fc7646ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_240b8c2c_348c_4acc_abb0_2b2910658e5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_692bcc92_5697_49a5_8075_744188d2bf67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_e977284a_e651_4a31_815b_6f9a68cf57f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_253a383d_ee88_415a_9fc8_94156f28b54a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_843605a1_5f73_4543_b747_2a4697a28709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_84035bbc_badd_4646_a850_a1310fc3ce67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_b771b8dd_5bea_429f_b6f7_74218bb8a438() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9f8dca92_1c17_4f0b_869f_d0102f7601e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_a796700b_3101_41df_97c6_7637a9f3b3be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_966e529a_30e9_457d_8abf_901a6bfab7fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_26896a9e_3d98_449f_bfa7_848f165a52f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_a9085423_ebe6_45bb_bfeb_c6e319da3c5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_010b613c_829d_4e69_89ea_f916837e475a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5412e256_0693_4601_9264_bb98a1655290() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1d00a0fc_0eef_492a_8e95_5d194a6a72bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_99bdc146_ce24_4f1e_8986_04633a843a52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_0104c9df_377d_4aa3_b6cf_39905d261c4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_852e4bfe_cdf8_4131_8287_e37177bed8c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2bd01f7f_0632_4818_aa79_8de61c7b4e0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c28c830c_9b19_4290_bc64_79b90c8f8ad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_4602b924_803d_415a_bdfe_0de0206a7125() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_cc253d53_bcdd_48cd_9672_44649fa81488() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_7528433a_9df1_42f4_8893_1468b88288c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_b95a33f3_d95f_404a_9545_decd7aeccf8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_0873675e_9f23_4a04_840a_f1e3a4545d19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5412e256_0693_4601_9264_bb98a1655290() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_139dde5d_e1ef_4e9b_a336_a3550f786b1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_a0695789_7e86_436d_ae93_6e212b003010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c8db7701_a480_430f_a0bf_434a1680aaba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_fff880f2_d778_48ad_b7cb_16ce0573e33d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_beda2c5c_bbe8_4917_9274_7d2ea50e9131() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_59d212a1_07d3_4c4b_9dd9_2ab6494178b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7cfcbc79_7467_47e8_a02c_98ec290ea5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_4c265e4e_8008_43c4_8ba8_7671d8b00b49() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f6db28e_fba0_4b5f_bdd0_62ff634e092d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2c66fa3c_4f6b_41ff_b081_873217edc19d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9386621c_f170_4700_9b7b_35cab9f89fce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_49727e83_e170_4d2f_8744_3e33880947d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_621477ba_4954_4cd3_9812_cbd314708938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f792f7f2_ec71_491f_a233_b42dc798a07c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_5fcbf3db_a994_4263_b99d_4f3608c69312() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e0d8a05f_36d1_4de0_8df2_49c4211732b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_7c3832f1_9156_4107_8bb6_2b960599a3c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b1ca4e97_1d92_4c0d_b173_cdd438e156e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_6e0f7005_6730_462b_b1e0_225906676a16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_661bbd0e_d19e_40f1_99c0_311dd686ba06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_3cb646c5_f828_4d73_ac1c_2f1b95367e97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_e094467c_7ff1_4762_bc86_194281345421() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_8c973c8b_9e5c_4dc0_a72c_b25747f83287() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c40eeabf_3889_464c_b8ef_d286127a21fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_204702ea_441f_45ac_a1e6_d6921a5fb857() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e5c8172b_5f08_4447_aff1_2173019b0038() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_7aa3e9c6_7f2f_455c_811d_b6b3419af771() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_87fb2c6a_34ca_4714_9c71_5f4dae18e887() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_815b3a53_3155_46fe_a340_0a14e26e5ac6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_7aa3e9c6_7f2f_455c_811d_b6b3419af771() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_c5d86865_e0f2_43bd_a160_35132eb25260() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_ad461f13_726d_4c5d_9c86_df85fe03b77c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_eea54644_d489_47cd_bffa_7827ff58ebf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_0f7ada62_460a_4eb5_be82_f9797b2d7376() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_c28c830c_9b19_4290_bc64_79b90c8f8ad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_4f31dbc3_8d16_4644_9032_3e2ef1850573() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e9b26a14_c1d4_496c_8733_be4555e77294() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1bdc924b_8b14_46bd_9a28_20cbc335b68a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_feccca87_30cb_4ab9_a801_669870e57a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_884d1a62_c544_45ba_bd51_dbbedb71eeba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_15577870_b90f_4811_8690_5bd1e99c2fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d580d599_d96f_43c3_92f6_c330de837be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d812e5e1_b8fd_4eb2_8734_f923d475fc0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_3a7f54ae_685b_4b66_a4e2_095fecc1bb22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_60de6917_84b6_4306_b327_59c2729ce10f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ee18edb1_8f9e_444b_bcdd_932a7ed4677f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f7fced6e_9613_4307_9ed2_9a6d557f3840() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a26937c3_969d_4e43_91f0_c5d268ab24fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0f6db28e_fba0_4b5f_bdd0_62ff634e092d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_f792f7f2_ec71_491f_a233_b42dc798a07c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_b344a864_912f_4051_b071_e543fb9a9fba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_60b55890_5333_4845_8b63_abc51c86ae13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_81fcc6af_3413_41ad_9ea6_8fee9da8831d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b57787ee_d9f7_4b85_8734_3fb62f2615df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c8db7701_a480_430f_a0bf_434a1680aaba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4c265e4e_8008_43c4_8ba8_7671d8b00b49() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ad461f13_726d_4c5d_9c86_df85fe03b77c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_bf9a39d6_42e7_4198_baec_7fb827e74e0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_acad1ec2_69e2_4b92_a327_0aa4b5380223() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e081d3eb_760a_4b51_a089_00ddac17a548() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_966e529a_30e9_457d_8abf_901a6bfab7fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_93189ff4_374d_4093_85d7_772b1c1021b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_86e91777_6292_4b6f_b875_3cd212b44283() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_7a2068fd_8f11_42be_9d17_0a15768bdd94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_930a195a_4207_4fde_8c9d_8d4222642842() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_f560c6a7_2684_41f0_823a_9617d858de63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1d658de9_31c8_4f00_8862_d4297229d3cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6d0d17c8_2d83_49ed_932b_7008176e9c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_5bd0b6e3_ff80_4177_aba3_68c7ab538204() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_085fa809_643d_4caa_ab60_3b75ee538fc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_187fe97e_fa5e_4288_a0bc_c23248e92289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_085fa809_643d_4caa_ab60_3b75ee538fc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1ae2de34_dd11_421a_a919_1be39e9b8fcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_fb8487a0_53ef_489d_ba29_fa94cd3244cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_7b5ab684_000e_4905_972a_f90accdc1f10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_49fcd812_3a47_4e35_9964_59008040728f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d580d599_d96f_43c3_92f6_c330de837be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_b57787ee_d9f7_4b85_8734_3fb62f2615df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_bcb19784_7424_434a_a9f2_f025dfaf8a59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_67529236_e760_43a3_9ea7_51cc91ddbaa6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e6144540_b1a9_4c63_a2fe_933e40d4ee96() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_399e1ee8_b536_4b4f_acb5_606a07826bfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_bbc4f5a3_226f_4631_8632_b9b1861f5702() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_43a66a05_c2f4_42c4_933a_c01047ae123e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_40a416d3_4ef8_4b31_9a36_bfaca29ff745() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_3fe26bee_0a8e_452f_aa28_cd9c3f62216b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_a8a129a8_fac5_44a8_826b_4d803ab2e186() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_63a48ad4_634d_43f2_844a_14595f5d6e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_c3437fea_5eb6_4150_b021_6ff4da0e248c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_744738d8_6498_44bf_bd49_23e635d4afce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_954b0240_cece_4cbc_9464_e5264a34b939() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_87fb2c6a_34ca_4714_9c71_5f4dae18e887() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_5bd0b6e3_ff80_4177_aba3_68c7ab538204() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5f70af44_0e70_455d_bc3d_23637613b7a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_44833e5d_5182_4123_b653_31d031dfc8cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f309460b_7607_4043_8bcd_d1752a581989() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d9c8ab28_a340_4269_b355_9e9668d286c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_628b2219_3c61_491a_b338_374b3f81af59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_1d658de9_31c8_4f00_8862_d4297229d3cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_df8ce354_1273_42f6_bfa8_4ccc2bf1975e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_a26c4082_781d_4d49_becb_d101065b27b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_14dfeaec_5c04_4390_9167_156341020e66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_865d21f0_d80c_432f_b1b8_9874498230e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b7140928_9635_4c5d_bb8f_19ff0fba1a72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_bf133437_b611_4c2b_a637_66627aede83c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e094467c_7ff1_4762_bc86_194281345421() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b7140928_9635_4c5d_bb8f_19ff0fba1a72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8d2a7897_30cd_42b7_af8b_daee576d56f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_9e9bee03_0375_466b_9de7_d19455ebb25b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5f7ec6b5_d975_4196_8a9f_0c1e80676c25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_67529236_e760_43a3_9ea7_51cc91ddbaa6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_d30bb3ef_1754_459c_b260_c11986986123() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f3788af8_b6ba_465b_aaec_dca22d0d14f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_81c807b0_d9b1_4576_8198_7daa6be373cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_50ec7e93_5f22_4e4e_922a_4d14806d7bfe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_727c1f17_1d45_433c_b239_78e6b9f3b708() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0e3b4fd2_526f_4779_b23f_626d4575453d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_29f75f89_21e3_433c_9490_a8bb6314e6db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_30d135c3_f023_4fb1_9c3d_95305aadc243() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f327f89e_14b2_486a_94f5_3eb83d3c7e9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_acad1ec2_69e2_4b92_a327_0aa4b5380223() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5582aa71_cab7_4ceb_a4d0_d97faa536e32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_81c807b0_d9b1_4576_8198_7daa6be373cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_32909b0b_e6d3_461d_b785_4f42ace13f32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_2ad17ca3_d8ad_453b_abad_b50430af3faf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_301e8709_b555_4aee_88aa_6a813c150809() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_debc5334_c7f1_4d57_86ac_4eeedc883db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c51ab5b1_da97_47e1_ade2_4bc490e1b54c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2ad17ca3_d8ad_453b_abad_b50430af3faf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e0d8a05f_36d1_4de0_8df2_49c4211732b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_6eefd81e_cffc_43a6_b4bd_6cf357a707be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_478addb9_1928_479a_9391_e707350c9f84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_0acc6cc9_5875_44d3_bd48_b24bb91caf4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_26896a9e_3d98_449f_bfa7_848f165a52f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_4997ccc9_80de_4610_940c_a67d26fb88ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fc90cecc_03d1_468d_816b_2687e4e4040e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_51da9846_b0eb_44c7_9601_b63fef168983() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_47855f1d_5dea_4a3b_a158_50a18a59fdff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_0f956146_e376_40e9_8b33_bc916940fa38() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a00924fd_5f4e_45a4_930f_427c4b139cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_bc4af9d9_c08e_42fd_946a_790968ef9503() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cffb825a_fb1c_4337_b57a_726dc5e72074() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e259049d_672d_4d23_b3f2_5f9030585626() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_a3f92616_88fe_459a_9939_6a4970de9921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ca2be47a_b862_465c_84da_6f0c73906405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_d6e2ccf9_f72a_4e7c_b581_4c278b3dbf0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_49fcd812_3a47_4e35_9964_59008040728f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_55c791ff_43bd_4681_81dd_474414d0907d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_86e91777_6292_4b6f_b875_3cd212b44283() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f7ae070_0144_4672_852d_307ad82e59e6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_930a195a_4207_4fde_8c9d_8d4222642842() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_2920ec9d_4773_4905_bd37_c1e21eac8991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_aaaa89ba_0356_47d8_8d9c_db9a401dfac5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a6fe331e_c151_440b_9af1_269c5772617a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_998e231a_abe8_4fd1_b3a5_0db1998c29f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_639c08b6_9749_47c8_9e9e_b0120525fd5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b6523dd2_c1fc_4c15_aa02_42ad73577a8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_0acc6cc9_5875_44d3_bd48_b24bb91caf4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7ae95730_9a7d_4602_8935_e82dd1ec515b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_51da9846_b0eb_44c7_9601_b63fef168983() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_c40eeabf_3889_464c_b8ef_d286127a21fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8f7cfef4_689f_4dc3_a938_09457e58b00d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_afadcac6_e86a_4d6e_8ed9_75da8ede3579() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_9e72e08a_965a_4fee_9d5b_afde520f2300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0356bbf1_8f04_4ccd_9c4d_0ad3ce040496() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_51da9846_b0eb_44c7_9601_b63fef168983() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_124eb85f_27a2_4e9e_8c80_73229a2a2e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_9386621c_f170_4700_9b7b_35cab9f89fce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_21c5ab9d_1a4b_49fd_bc45_f93e08c14318() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ec9f71a2_4f52_4194_9df7_1704f84d7a89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_eacec2c1_23cb_4dc9_a7d9_175dfc405289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_07fd84d4_ce27_46f2_a33f_85663ced0b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_e4883c35_6136_4eac_a548_2b882630b4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_6b30a54a_39f9_4bec_a658_7951eae74aec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_3c4de698_31c8_4d76_8edd_eaebd6accce3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_412ab1dc_173f_4ed5_8b65_aaf27d1b7545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f933ae39_299b_4f3f_889a_f8edebc1e22b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_30d135c3_f023_4fb1_9c3d_95305aadc243() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_546f4587_6038_421a_89fe_ac680d01a098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_223f4ff5_efcd_47c0_a756_5a2bdd0a91d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_e9d93803_53da_4a94_a4ee_3df8a4697597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_744738d8_6498_44bf_bd49_23e635d4afce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_17f86cf2_936f_412d_a791_60d6955e061a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0b7ec334_db3b_4334_8b0d_d24e84d326c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ee18edb1_8f9e_444b_bcdd_932a7ed4677f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_db47b70c_c2f3_4ce6_a98c_5309009653cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_9e9d8312_52cc_40ae_ad0f_fb4068a21951() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_15091014_7235_4798_83e4_3a32431ef765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_587e36f5_fc86_44ef_874c_3ecc1f275fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b519ce73_e223_4230_894b_a0f291a29e69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ae1a5874_8352_4cdc_98da_99b63c9f91dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_47855f1d_5dea_4a3b_a158_50a18a59fdff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_893fb16f_1d0c_424b_beb1_53966af892a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b4c991b7_aecc_49ba_b04d_f8a9ef108a73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_a37873b0_1240_43b0_8c0c_ae0c9babbdf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_6fd1b752_2140_4c98_939f_b6d1568a0a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a6982321_bf28_49c9_a9f0_055808fc416f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_893fb16f_1d0c_424b_beb1_53966af892a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_5453c301_dfb3_404a_8d5b_0fa41044ca8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_e455eea1_ac2d_40e1_aa80_032750dd9f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_b4c991b7_aecc_49ba_b04d_f8a9ef108a73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_c2862117_dc27_49e2_9c53_b01a6e7900f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_45c7e558_4b95_40d3_858f_387d866f7db9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_7528433a_9df1_42f4_8893_1468b88288c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_9572fbd3_c8ab_415b_b7c5_7e41dd755765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_a6f5f5ca_24da_4237_8180_a8bed783f155() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_b2e5b779_cd09_4690_b83d_2c9f677ed669() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_680cc2de_892b_4467_a5aa_9c53cc9a848c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_87fb2c6a_34ca_4714_9c71_5f4dae18e887() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_f8a0a499_f3ab_4c28_ae81_95b809d50600() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_e4b8e08d_2235_493b_96ac_a446acc188fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_217175a3_7d5b_4509_9ee3_34a185512cc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_cbb85340_0e1f_4971_8cd6_c696a45d78d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_ab386b80_099c_41b3_89c9_abff850c78d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b489b129_6206_4ee3_9946_4947bb94edcf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_27720163_6824_486d_b2bf_5ac849850ec9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ab386b80_099c_41b3_89c9_abff850c78d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f63d409d_516f_4bdb_8f21_a636a37dc729() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5c6334cb_6778_46bb_a001_12f68613d405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_919df132_73e8_4e46_993d_f8fc7e1f6206() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_6e2aef7b_99c4_4873_ba12_e7944aaeb612() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_3f1d5f9f_8005_4be1_be6a_af01edd12315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_cffb825a_fb1c_4337_b57a_726dc5e72074() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_14479c31_c593_4a5e_95d7_e0bfe7a2b37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_59d212a1_07d3_4c4b_9dd9_2ab6494178b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_e1cb8491_9376_4d9a_b29b_01611ac79aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_c28b0d67_bb5c_492e_837f_94a10bb30214() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b0b584fc_3829_4045_a1d7_e946ee10271b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_21d1e7f2_b38b_4e75_abed_292e8342e81f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_96a790d7_26ac_4f81_9509_09131c31dec2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_5a040027_077a_4fd7_b6f4_a06b823b02f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_4997ccc9_80de_4610_940c_a67d26fb88ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_738dafe9_680f_4f63_89d2_62d53efa31ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f7ada62_460a_4eb5_be82_f9797b2d7376() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_ac77f7d8_2959_4839_939e_0ed05c8f2c6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_2a4aa73b_31ad_4698_b480_a31d1d0a9b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_0541aba4_113a_4970_ad62_957b10cd34d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_cb63dc2a_8d0f_45b2_8727_06a4a76404e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1e000d9a_3cce_4b07_b10c_adf10112a714() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_f3b2b915_8737_4534_9b36_303c9e97da3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1a6980fe_22e3_4505_9b1c_92b49ff231a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_acad1ec2_69e2_4b92_a327_0aa4b5380223() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_331182a0_5c89_43d5_b594_925b82c37a8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_86d2b02b_47fc_48de_acbb_cedc9ce17f95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6ca1758e_936a_485b_87ae_78bc0063b86c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ba21e9bd_459e_4afc_af0d_8651e8612e5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e977284a_e651_4a31_815b_6f9a68cf57f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8243502d_090e_4278_bb5d_52bd4d64cd7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a33c7c91_6bac_41ba_80c0_78e68954cca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d0e4caff_a013_4272_841e_97c3f7a58e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_2920ec9d_4773_4905_bd37_c1e21eac8991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_699e1ae9_3bb2_49ee_b625_80863052b62e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fee7cd71_206a_46f3_a718_65fbe855f76f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_bcd9aae5_e3f9_4475_954c_7379a20e9f00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_ba452ab9_543d_4bd9_979d_5ff0eb68d631() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_c9046a74_2019_4003_97a9_72efa7d8d8bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_5c6334cb_6778_46bb_a001_12f68613d405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_15577870_b90f_4811_8690_5bd1e99c2fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_f950064d_26cf_4c97_b52e_40f2438f246d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3dd80269_1724_42c9_beed_d9ee99f84ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_8e45db8f_6fa6_452c_86b7_c36bafd0b208() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f8a0a499_f3ab_4c28_ae81_95b809d50600() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_d9c8ab28_a340_4269_b355_9e9668d286c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_312937ae_91dd_4b39_8e0f_fcc3b09af463() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_17c68e06_ad0e_437e_9fae_ebfae3252026() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fce5d637_400f_4b9e_af63_9a618310755b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f25a10f5_3535_406f_9508_cf11fdbc55be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_6dedb913_4d05_4b8c_9499_254d2408ad58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_6b30a54a_39f9_4bec_a658_7951eae74aec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_ad461f13_726d_4c5d_9c86_df85fe03b77c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_362b3e90_20f7_46ef_a9fc_78ad143e39b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ed60d1dd_f669_4e9a_b441_1236ce649679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2bd01f7f_0632_4818_aa79_8de61c7b4e0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_05b68898_563f_4470_9864_43e99b177921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_99bdc146_ce24_4f1e_8986_04633a843a52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_4b2d63a3_fb25_441e_9ae9_8437dec23060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_a341db76_605e_4def_a222_aa05520763c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_da869c77_032d_47dc_94f2_8939e2ef1405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_59d212a1_07d3_4c4b_9dd9_2ab6494178b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b3534ed7_8c64_47e7_9cf1_36cfbb23857d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a90687c8_3c55_4822_9987_5affc74c1b2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_299e5046_040f_4267_ae4b_92a2bfca6433() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_6e92f2be_3435_47e2_824d_e569b5da23be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_6e9b267e_ae76_4480_b70d_18fbcd219893() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_49fcd812_3a47_4e35_9964_59008040728f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6ca1758e_936a_485b_87ae_78bc0063b86c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_206e870d_7dea_4043_9886_b1e0a285a0b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_c3c00751_2da2_4697_9d8d_9d698fba60d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_cf98326e_c7bf_4975_9986_4ccbd1ed2c14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_4f006df3_1986_4ab2_a21f_5eb4eef11551() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_6abea681_fb66_4df6_870e_4a2646907ca7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_598ef488_3a88_492b_9102_b1bf3fc608f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_ac4bcdec_3232_4f2b_9fbe_b10b43e04147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_1521b40a_dfeb_447b_8658_35e2b725ec25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_648387ba_c540_495a_8eaf_9927f7e56216() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_bac8f173_743f_482c_8f2c_0d6fdf4842cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_53a319a2_ba42_42b6_9f45_0d669b536029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e259049d_672d_4d23_b3f2_5f9030585626() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_694ef5e8_412c_474e_ad6c_4bc652810f1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1cb94c77_097f_4a19_8fc5_cfabc98ab74a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b95a33f3_d95f_404a_9545_decd7aeccf8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_59e84e77_e49c_4108_bf2d_5d418ba54d97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_21c5ab9d_1a4b_49fd_bc45_f93e08c14318() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_257bddba_f191_44bc_951f_827a818fd563() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_744738d8_6498_44bf_bd49_23e635d4afce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_fee7cd71_206a_46f3_a718_65fbe855f76f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_a8766ee5_c769_458a_9299_741370924d22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_ccb27a94_7e19_4ad0_be16_237b6abb53bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_84e35fcd_3beb_4251_a888_7e8564610c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1de5ab3a_ba03_49ce_8937_f4994d3eee58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_8ab70a5a_357e_433f_b32c_8a59b0a90bbd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_2eec0a26_889f_42c8_ab3a_cf614c33eb02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_e094467c_7ff1_4762_bc86_194281345421() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_865d21f0_d80c_432f_b1b8_9874498230e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_f5ebc825_17c5_4595_a54d_18324bcf89bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_396c9f07_d18e_43d4_ad0a_c97bb6b3dda0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1882af5e_fa1b_45c5_a8f1_1e74ed023662() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_a67ce80b_f225_4ba8_84b4_97d3f35951cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_8515769a_e00a_4d94_aaa5_c20c676943fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c607120f_5ef8_4f46_b0ab_de2dd693d9ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_bf3995bb_7132_4003_b1d1_b7a93df5a712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9f7c04cd_81aa_4753_ac47_8786a0898509() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_57b31777_6a47_4824_bb65_3caf12944d00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_2528cb01_e92c_46f0_abd1_5d87170ff5e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_76c1d943_1d4e_4b83_8dee_5c422214af08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_55c791ff_43bd_4681_81dd_474414d0907d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_3c9e4243_900b_41a9_be9e_4d90988988fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ab386b80_099c_41b3_89c9_abff850c78d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ee7069dc_a2a1_4943_b4e7_a48a666684cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_0b914442_fb49_4b24_b3ab_c93ce3457a01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e6203384_b4af_46d4_be30_cf95270a51b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_af76e576_7bb4_4a6b_ad7e_d01b150d1790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5453c301_dfb3_404a_8d5b_0fa41044ca8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_5bd0b6e3_ff80_4177_aba3_68c7ab538204() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3b44dd64_9235_45f5_bb03_90cb4b1fed47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_59e84e77_e49c_4108_bf2d_5d418ba54d97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_d8fe484b_7325_4bec_9d32_a31ed6afe790() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8b5c8756_c601_4a93_8e97_399236f57d4f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f63d409d_516f_4bdb_8f21_a636a37dc729() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_ac0a4bf0_05d1_421d_a9fa_34788c642591() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_00120f57_0796_4276_ae6c_c0ee5d320c1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9c682a1a_c0ef_4342_9fc5_03e06bb990e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cd695e31_c50c_40c9_ab0b_6673c1025c69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_45b385b7_5362_410a_ae36_d7f8b115eb27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_511d456e_b9de_4857_b4ae_442d9eb7247f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_d580d599_d96f_43c3_92f6_c330de837be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_fdad6029_76e6_4611_a7da_8ee43bc2e92d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_8e98956d_42df_43b8_867f_e3b0d2cd356c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_6b31b8bc_2017_4e7e_8f0e_2314d99f9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_c83950bf_289f_427e_b662_af1421ce0d53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6ca1758e_936a_485b_87ae_78bc0063b86c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_09ac1e28_914a_4466_950c_d4abc5821133() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_3fe26bee_0a8e_452f_aa28_cd9c3f62216b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_a5656e86_f78e_4284_9bfa_e018135ed6f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_0898b423_5922_4c3b_883e_4c6a1f4ea9ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_7313cd55_4357_4156_81b1_5c8176243aeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_204702ea_441f_45ac_a1e6_d6921a5fb857() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_5fea45b7_fcb2_4113_81b9_0ba04b985b65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_50c7ebde_3ffd_42f1_8f64_9328f09d581b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_50c7ebde_3ffd_42f1_8f64_9328f09d581b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_81329772_a43b_44ed_84ee_f9fea556dfb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_6abea681_fb66_4df6_870e_4a2646907ca7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_0c831846_2911_414f_9c33_2fcdf65a8610() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_37a1b3f8_4104_4078_91f8_a24830cbf364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7aa3e9c6_7f2f_455c_811d_b6b3419af771() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_155ee5e7_8caf_4b20_8edd_33bb6177c06e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b0b584fc_3829_4045_a1d7_e946ee10271b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_51da9846_b0eb_44c7_9601_b63fef168983() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_893cb7f4_fe7e_49d6_bb84_2e413fe44470() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_139dde5d_e1ef_4e9b_a336_a3550f786b1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ef08317f_36e5_4cf4_aa39_b783b0bd088e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_3a6c5564_36ed_4f65_8b87_e075768336e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_aa5fd41b_b674_4468_a415_881fbb7ff7a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2c1f1b7a_5885_49a0_b36d_43d74b596afb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_783891ee_eb84_464a_abb0_b42451fc07e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_0a2c317a_54aa_4680_ac29_b26739bbb890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_1e2b72e1_a607_4b4b_b75f_73ea29afa18e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ab47fa26_c4c0_4730_8c15_82015cd0c8b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_badd6070_be44_4de5_ab8b_3963c15fcc4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_727c1f17_1d45_433c_b239_78e6b9f3b708() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f5da14cd_0795_4470_9e6d_fb8875b2183a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_ac4bcdec_3232_4f2b_9fbe_b10b43e04147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_262dc9f6_c5df_44b8_a45b_c6675522c6e8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_8de2b119_3720_4f11_83f9_abbab6d92f23() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9542eb68_b0d3_48ab_92c1_8b1d1d7df757() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_1d00a0fc_0eef_492a_8e95_5d194a6a72bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_981a6d8c_c269_4ec6_9a15_de48f8f1b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_8c973c8b_9e5c_4dc0_a72c_b25747f83287() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_399e1ee8_b536_4b4f_acb5_606a07826bfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_15577870_b90f_4811_8690_5bd1e99c2fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_573b929a_4e80_41b9_b8d9_07a65e195c9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_92dc4688_f22a_422a_befd_1cf76c2bd886() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_fa9cc615_0099_435f_8123_e92d33aff570() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_c3725312_38cd_4315_a71d_35bd42447119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_2876aace_3ca2_4c67_bfe6_886951842b3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f1b6ad76_3ed5_4b5c_a65d_66497fd9d712() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_72049a7d_821b_4dca_9b1a_3cf104a4b67c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d61df349_2d9b_4f8b_924a_601a2f249c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_347cfa92_6690_4f4f_819b_71041f42b5da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_07fd84d4_ce27_46f2_a33f_85663ced0b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_14479c31_c593_4a5e_95d7_e0bfe7a2b37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3f6865a8_0557_4b3b_9237_d82f50dc7b74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_b4ccdf05_7a00_46a5_8e28_a7face0ccc20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f411a10c_406f_4eeb_a9e3_7f577505ef46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_587e36f5_fc86_44ef_874c_3ecc1f275fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_b044e099_f3ec_4c3d_aa67_04bb1407b5f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_3ed59702_3753_451e_84b5_8ead8d462b47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_4c265e4e_8008_43c4_8ba8_7671d8b00b49() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_966e529a_30e9_457d_8abf_901a6bfab7fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_83da11d5_813f_4428_999f_10662e24efed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_3079c506_7085_4775_91e9_458cf7b77f3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_aa6594ee_007d_4d3c_84d1_09ab0865ce9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a0695789_7e86_436d_ae93_6e212b003010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_82e83bbb_2930_474b_ad31_071881442dac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d0414a81_9d90_46f6_86ba_75884601b9cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_edd58b84_6cc6_43ad_ab4d_108c37ce59d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_316482e4_96f9_43cc_923d_dc113a87a43a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_ea685832_8829_471a_9e62_83d698a8e182() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba1524c4_be82_4cd8_bb50_92607f69bd01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_60e60c12_1e85_4b73_ae04_0e181b73b2b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_81fcc6af_3413_41ad_9ea6_8fee9da8831d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a3f92616_88fe_459a_9939_6a4970de9921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6547672e_6508_497b_80be_2d424b8b2bd2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_a895bdd1_3e53_420c_973a_c4c14915205d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_1dd38b63_2781_465f_ac64_bda68aa5ecf6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4d624990_b328_4f75_b9ad_bafd0dd0f593() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_99bdc146_ce24_4f1e_8986_04633a843a52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ba1524c4_be82_4cd8_bb50_92607f69bd01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_8013f572_6b2b_4aa7_89db_fb9d2ef2a052() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_240b8c2c_348c_4acc_abb0_2b2910658e5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_f830ea49_6118_432d_8939_3a04e0200ef5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_a3faa15e_8071_48e6_ab69_d55665e0b494() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_014d9f07_b6d9_4eb9_a50f_214c2489e706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_dbc4836f_71de_4ae4_83f0_870a7257f7b6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_cfd28e78_833e_4d0f_b036_f052369b3c09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9a8d10db_1024_43a2_979b_e19e33bd5056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5bd0b6e3_ff80_4177_aba3_68c7ab538204() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3ac4198e_932f_4069_ad4a_0a1dd00ad27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_78289ac7_dce7_493e_8cad_f265924ce7ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1b93f48d_0188_43e3_b617_43dd54da8b2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f331e4ff_1df3_407b_b957_226d753f47fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_3b6bc1fb_16bb_4383_b1f3_692949e66542() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_1eeea871_05b0_4234_a4d6_0959ddefd7bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_05519e30_c178_40ab_b6c7_9b90f2b34759() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_aa045fa2_71bf_4a24_80e2_9b11d545a5d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6ae54152_0ec4_451a_be16_b3adad86a9f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_6603bcd7_16ce_4cde_9faf_e686d7ebc334() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6b30a54a_39f9_4bec_a658_7951eae74aec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ea1c0fc_f771_44d5_a5f3_71a5386fe686() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_e62b4d84_6b02_4e51_8037_e4126f8eeac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_33b54e24_ee40_4a04_ab8d_9abbad050f17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_48aaaf3b_3868_4c41_afcf_9d9482ba2b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_1508a6cd_67ca_443c_b823_341b6cfe0d9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_55450cb0_fac1_4adf_bc31_0c932cb91f73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_5fcbf3db_a994_4263_b99d_4f3608c69312() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b0b584fc_3829_4045_a1d7_e946ee10271b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_c40eeabf_3889_464c_b8ef_d286127a21fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_cfd28e78_833e_4d0f_b036_f052369b3c09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_2fc8099c_429a_4682_ada0_ccc17ca42855() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_08a9d4d8_4b89_426f_8205_cc5b6fd6673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f3b2b915_8737_4534_9b36_303c9e97da3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_16a19495_7462_4362_b04f_fc9bde746fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_42079d60_b75a_43fe_8d2a_6d4b79eb726c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_44bdbff6_189d_432b_91ef_bb4f5ca1504c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a3c582af_2028_4dbd_ad69_ea59aeada35f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_5366314e_bffb_40b3_aee5_5449e3d04850() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_c53d6e65_7c8a_4b9f_921b_c50b805baf0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_49c31d70_6a48_4bd7_bea0_a2db62384353() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2a4aa73b_31ad_4698_b480_a31d1d0a9b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_7cfcbc79_7467_47e8_a02c_98ec290ea5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_919f2136_74af_4a64_830c_fa32249b9911() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_33b18ea9_74c6_4ebe_86f5_e9b259338f67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_c26c782b_32df_4573_b335_1a0ea181caf1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_139dde5d_e1ef_4e9b_a336_a3550f786b1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_95f5ee81_a171_4169_9413_c51a7e80cb60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_45b385b7_5362_410a_ae36_d7f8b115eb27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_96476ed6_e033_4e23_8251_0bfb2ef28e80() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_9640fc0e_4b5d_44c4_9dcd_40a96864b95b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_005ba5bc_4a1b_4ba6_bdcf_6847c9334151() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_6ca1758e_936a_485b_87ae_78bc0063b86c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ffeb5c28_74df_4d29_a614_ef237dd73aa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ad995d0e_0d9b_4e12_bae0_365219873a34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_6debecaf_8cad_4e8f_8575_b58bfcdc766b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_6dedb913_4d05_4b8c_9499_254d2408ad58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_74392cf4_f411_444b_a7a0_960be78e8a1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_5fcbf3db_a994_4263_b99d_4f3608c69312() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_cce37627_7888_4606_b921_ae0704816a8c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_fe5e697d_f613_41f3_8084_dcd0260bf789() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_b771b8dd_5bea_429f_b6f7_74218bb8a438() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f010d523_3884_4ac0_8c2a_204bd90592e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d8428c38_91b5_49cf_80bb_a2bb6e492b56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_728c0ddc_e707_47c6_88d5_b365905fc13e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_04529622_4dcc_40a7_9677_d6689276673d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_316482e4_96f9_43cc_923d_dc113a87a43a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4df07fc3_7691_46f3_b039_feb8b12c2324() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_d83761ad_2a3a_4702_971a_1aad9703e43f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_12c01e48_df87_4a12_89e1_ad88fa7a8298() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3112b335_d4f9_44c3_ace1_27d1586d910c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_82addaa1_7852_4709_8e74_080aaab81171() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_930a195a_4207_4fde_8c9d_8d4222642842() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_97265762_bdb1_4448_ba9a_3cafe4287c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_010b613c_829d_4e69_89ea_f916837e475a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_4997ccc9_80de_4610_940c_a67d26fb88ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_2ad17ca3_d8ad_453b_abad_b50430af3faf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_ee4f33bd_1e83_4be8_9953_701b4b23bc77() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9066d55a_744a_4db9_ac03_785508cabbee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_f47c8fe1_de17_4b2b_a484_4559dc07b4f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_4ea73afa_216f_43a6_b4a8_5c9e25265273() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2330fd49_5d10_4b20_9b18_e3b8d003653d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_63844c3a_cf07_4997_98bc_b07836270775() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4e824221_818f_44be_88ba_1750814e223f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_541fc626_9c91_421b_a614_ae3d2bf1a968() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_8a9c7947_0eed_497b_a853_cf81c4423a92() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_b16e8807_e5bc_4be9_9655_875c051cc49c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_fa9cc615_0099_435f_8123_e92d33aff570() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_893fb16f_1d0c_424b_beb1_53966af892a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_14e81768_7f5c_4117_a666_00ed2958d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_5a7fe767_bff0_4d2f_9aca_38e6996f45bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_3434766c_069e_4c8b_aaa0_a87707738ebf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f0c27d78_e599_4d36_8d5d_4a74de12eb76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_c0920d13_a2c9_471c_b7ce_6827a5936446() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_3c4de698_31c8_4d76_8edd_eaebd6accce3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_dd406227_2dfe_4a1e_9f73_e4d5121050c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f5544eb4_d9d4_4dbe_8c11_be85afc6211f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_21e9c93a_42a6_45df_842f_b29e52725ae3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_01a60896_de98_47e2_a199_4761c8f22a1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_ae5ed841_b15b_4f75_a8ce_52572971e03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ae06fab5_109b_482b_a8e0_eff021f10215() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b7106b93_7013_4bd5_8b7a_d73ef24eb25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fb92b579_7b8b_4ddf_8799_65006b5f3fd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0acc6cc9_5875_44d3_bd48_b24bb91caf4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_07473f90_7104_45d0_9fb8_4eeb25b6f47b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_f11585c5_00d4_4983_b968_9a7437d7261e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_4e97e821_98be_49ac_9bf8_f77b477ba0be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_15eeb84f_28ec_4d00_a48a_7b0f0c026c82() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_2c2fd39c_2181_4ab6_8920_01c78482536c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d88695fd_495d_4d5c_93c9_7d88aca8a8fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d0deb0ed_620e_4015_b3b0_b6c930503198() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_11cbe7a9_951b_419b_ad6b_497c9a804849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_503b5302_d7ee_43ce_9694_269db5994231() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e9d93803_53da_4a94_a4ee_3df8a4697597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_97ee90af_137f_4d90_9d00_d63fcd4d9191() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1d00a0fc_0eef_492a_8e95_5d194a6a72bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ae4d6461_ddf0_4bfb_9bc3_1174a17b97dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_774ce1b6_64e1_4a11_995f_96bf2a06121d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7424c47c_b8bc_4e5d_8ddc_a064512d4281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_31d29684_6728_45c2_8383_f046fc7646ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_4d8871a1_c82a_4784_b65f_1b806147aaca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ddbcf076_7847_4ceb_aad3_0c141184c008() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_7c3da8a2_341d_4837_9f23_e057a64562bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_a8766ee5_c769_458a_9299_741370924d22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_3c9e4243_900b_41a9_be9e_4d90988988fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_9efcd933_3abc_44cb_8683_6b5e5cc719f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_defff587_6f79_4a00_9080_64916909dd30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_57b1198e_ec69_480c_b310_37fa18c72408() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_eea54644_d489_47cd_bffa_7827ff58ebf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_7dee0925_89f9_4fa0_b216_aa4c008c47a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_96476ed6_e033_4e23_8251_0bfb2ef28e80() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6c1d9f4a_474a_4f22_a744_f328ed2a91bc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_71633854_5a00_4af3_8f20_050aa6f02a47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_badd6070_be44_4de5_ab8b_3963c15fcc4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e07bbf01_e571_4f93_b1b2_307f985d9a83() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_59e2c46d_45e3_4daa_a07a_a7034bed8bce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_5593b07f_ae14_4af8_8ed2_5dae074dde21() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_0958a14c_c1d3_4281_95dc_f28b249d791c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_4200ac65_3f46_4b6c_9119_6f9e79aefb84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_0abf1df0_df0d_4688_8bbc_795abef54331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_f057e0dd_5897_4972_806d_e6d83cc8f1c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ec9f71a2_4f52_4194_9df7_1704f84d7a89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_9d94c549_c5b3_495f_ba67_5dac8956fd1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_9ebd5e34_8e23_4863_9d42_835dd6ad79f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_1aacf338_6853_4d9e_854a_d6449475d70c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_6ca1758e_936a_485b_87ae_78bc0063b86c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_03b5f423_4cf6_450e_a781_6ab7bbe7696d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_1c11aea5_2426_4d5e_918f_911502043c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_b636416f_8d4d_424c_8c3c_6143581d8e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_7a2068fd_8f11_42be_9d17_0a15768bdd94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_bcfd23e9_283a_4782_87f9_93e6de85202e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_bd0cc2e6_e6ea_4cfd_9bed_646c12635946() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_23374d74_cdaa_496e_9ffd_39d08646a4d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_fc513e13_1c49_4633_918b_3bfb255a5ac4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_0bfd3531_dfbe_45c0_bae5_e5496dc1299a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_65b177fe_e68a_4bf1_9abc_3acdd73970a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_5551a862_0586_447e_8ad2_93a7f70ad572() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_8a8b7c66_78c8_458a_b168_ccf07efc7639() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_d820526c_c61e_430b_b28e_8b9e6a617abd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_49727e83_e170_4d2f_8744_3e33880947d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fee7cd71_206a_46f3_a718_65fbe855f76f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_c28c830c_9b19_4290_bc64_79b90c8f8ad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_b1a41bf9_2ae9_462f_8781_3456b04e4176() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_1d9bb977_d963_4390_b109_5d8005970905() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3d4266b8_0b02_49ca_b2b8_a379b54802f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5dee5809_1b23_4d5d_850a_3bc340ef9092() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_5be0a2de_b5f5_4f86_8eb4_734dc89c2e89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_5bbc0427_2dc5_41bd_92bf_6296bd130536() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_0aa404fb_fa36_483e_8229_150678b6e6cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_07256470_d293_4949_9f68_19be48ffac99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_881d0442_0a4a_436a_af3d_fa6321028b8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_fa663f3c_5bcc_4943_905e_3af3576f59ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_b27372b2_3346_499c_a15a_b9fbdbc102e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_736b8ee1_4b06_480b_a72a_ca2f7b8945db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_191611d2_1730_471d_bcc5_794c0aa7c004() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2920ec9d_4773_4905_bd37_c1e21eac8991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_ceaab59d_a5f8_4258_ae6d_b0af01c55466() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5e127b9_699a_4b22_9a96_2bf79fabc5aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_2dde2622_5408_4f85_9f98_a0970e7fd180() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_60547a3b_f2f3_4291_8091_6a9d7c98ed6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1c63b9e3_d8d3_4531_a74f_785ec0df6a62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_8f5f6cc7_a14b_4330_b64b_b2ed9622a938() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_50c7ebde_3ffd_42f1_8f64_9328f09d581b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_c5275a4c_542a_4ea9_a02e_07e2c2c013f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1949168b_32de_43a6_b1e8_69dca169b9db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_93346df9_e05d_4f3a_9ac7_1aec210b84ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4ae930c8_5f0e_423b_a072_00340cc18d90() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_3af5e4f6_3064_46e2_a13d_39e20c5824b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_164a09c6_03a5_45de_b5e8_f2af4e3f660b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_2fa0315b_9bc3_48d5_a401_364d6c2c5849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_2819958d_69ad_455b_8b15_ea4a699b3a11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_c41dcad2_cd26_4f9b_9f92_414ca01e217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_7b5ab684_000e_4905_972a_f90accdc1f10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_d9c7155a_7a66_46fe_949b_ddb46b02240f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_3fe26bee_0a8e_452f_aa28_cd9c3f62216b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2cb46300_b48f_4e41_a8c2_c36c34fab7ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_85255359_79a8_4700_b57f_121c79528ad7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_de76465d_8d18_48e5_9237_a4ff622ce839() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_8462938c_2183_425e_a4c0_d580162106d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_f76ab832_05d5_439e_8193_151a713ff1bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_791f79a6_ea03_4daa_9a34_8f33b351ead6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f4eedc90_55ae_4fed_991f_a679b28f1df8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_55c791ff_43bd_4681_81dd_474414d0907d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_018e5b2b_20bc_4228_8dd8_2e78c81fda11() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba6d21fc_8021_4a22_b214_83ace49fea9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2c4d4ba7_e4a2_487d_a75c_f839b4813bab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_259a0bc3_b417_4143_b4ae_db5ec8b63c78() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_7a18cc13_30db_4934_89db_a4492802861f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_519cff50_af10_4f86_8bb1_b677665dc667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a1e9e61f_ef90_4e43_9721_cdb6a538b525() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_29a67c4d_d7c0_4c93_9c57_3055255160fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_863762fb_716a_4b99_a863_0c6db1c74006() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_e7a5848f_5257_47ea_aee6_af2e4966f4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_431422d9_4276_4b7d_8102_da1f27578210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_2643a559_2018_49ff_adb2_7d8ffdfc8fe8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_f4eb5af5_3708_4de5_b2a1_9c686fe347f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e333f185_ca35_49b6_8654_cc7c3b559f71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_14479c31_c593_4a5e_95d7_e0bfe7a2b37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_aa20765f_2e2b_4649_8305_eb15d364cc8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f794eca0_f942_45ff_85f1_ece75e562a0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_218621d9_6ce9_4db4_bdf8_edf0d94b821a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_82f1155d_ae2a_40e1_91ff_04ec8d96a8d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_cc6cab06_0e3b_4cc3_a8e5_15e653db899f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_31c02e27_13bd_4d69_a985_7ab29fa279ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_92800c20_5b1f_4532_828b_351d9373199f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3b52639f_08b1_40d9_92ff_35a4dbbecd56() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_41d6de77_a044_46d4_b27e_e3ebaafe0cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_455a05f8_7fc5_43a2_a561_13ed8e76a200() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4eb8c2ba_9dc6_433a_8c10_69feb3aee74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1e78b721_6a4f_4d56_b619_d2b4480761d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_47855f1d_5dea_4a3b_a158_50a18a59fdff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_76e049a5_0333_448b_ba5a_e3b69686cd4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3dd80269_1724_42c9_beed_d9ee99f84ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_9d35b958_eff9_4260_bc51_0fdfddfce7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_0a9e4d91_5057_4b27_a84f_09ece1ee9ff5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_80b48c69_c8f5_4c20_a104_7076970c0ba8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e9ac832f_45d5_4bd7_8246_fdcbf83ed0e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_3573ae21_aba2_48ba_91cf_e3a7ea4048e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_50adf360_8a8e_4e4f_81a9_5b0f6c46395b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_104360bd_8769_4322_ae39_88256d438e1d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_852e4bfe_cdf8_4131_8287_e37177bed8c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7b816e28_ac1c_4dff_a6fb_30999b93dc30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_2f93f89b_8bb0_4c9d_a870_a96795be767b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_640717b6_9aa2_46b8_9cd9_77b836ad7706() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_60b6c9c4_6d62_4103_bb0d_da136585ee6b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_04d4b96b_8e5f_499a_ad13_de4ce9d415a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1769920a_0a14_4636_8d94_5dcf9c0e74b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_68ffb13f_a02c_4767_9171_bbd6fe496841() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_7fdfcd31_ce73_4fa8_aced_da168c555fc5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d1985ffc_cc19_4be4_a49b_169fb46a8b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_783891ee_eb84_464a_abb0_b42451fc07e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_1da8150c_e052_4519_b96b_89c47ffb4e4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ad5b03cd_df53_40e0_a401_35a92898c0b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_856e788c_5765_4f5b_9ea7_18fa6327a37f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_384b73ca_97b0_4a17_9a75_9a03608cd0f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_168fbde3_69ed_4744_8b11_8dc041cf9154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_2edb5059_523f_437e_b9e2_e7c5738130d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_2c100103_01f4_4ef2_9abf_1d53ae453cef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_161c99e1_b1c0_43cb_945c_46d7b952cc42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_852e4bfe_cdf8_4131_8287_e37177bed8c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_5642795f_9628_46f1_976c_44262f3bda16() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_a4ea542c_b9b5_4171_9c64_1cedb8d4c2ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_b710b835_7528_4c57_8274_5fae668c9331() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_cfd28e78_833e_4d0f_b036_f052369b3c09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_c8dc5352_237f_4fc9_b826_171110282aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e1abff06_6c87_4c65_a3ce_b5206a978eae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_57c49baa_5c8d_46cf_9b0b_0b397c934e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_f2adf25c_0434_4dad_b3fe_39d707390c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_dd45b251_83c2_4399_ad11_81a5f364dcee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_91037e1d_7744_45b3_aa4b_94e1c157c70f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_4a370110_9a71_48c3_baa4_db1a048dd0a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_50ec7e93_5f22_4e4e_922a_4d14806d7bfe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_57c49baa_5c8d_46cf_9b0b_0b397c934e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_9c9a80dc_4321_41f0_9537_ecbe89fe192d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_d4849c1b_a114_489a_9cc6_e694b47e3379() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_bc75a77c_3ea9_40e4_be99_4cf286267683() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_87dabe2f_e527_4420_a278_aeaf1b587005() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_78999670_5319_4069_af03_490b0f65da1f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ea1b67b7_20ee_474c_9be1_866ff0d00061() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_ac3467e6_6d9c_4012_8914_2cfdcdece568() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_86639ae9_e4c3_4149_b73f_d6829df05c61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_235f35a0_4b33_4687_bc2f_f5662c2e7fb8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_151e4d09_2f26_45a4_82ef_11a0003a1251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3b7d1298_03e5_421a_af93_9d8b4061771c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6ada4b9b_6e33_4abe_89f9_bef027c33132() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_42f6e2db_de87_4062_9e89_6389d3799210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_a0024786_a30d_42da_ac10_9c6b2f529316() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_400598da_0427_493a_8434_2feca7a51edd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_fedce1ac_5020_4821_a446_85e65924b770() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_97d8e748_5be4_4f92_800c_45f557f0d960() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_966e03bf_1342_4b27_9c3b_6e0df5a94e94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_bab7bc37_6d48_4c0c_bd41_b960270b2dc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4a2972db_bebc_4521_9806_9d21dcdce885() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_cf04e23e_33cb_457a_a7f3_5f397206e8a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_c637337c_4c3d_4d95_87a3_4a9e070a3dff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_279d2f0b_3b10_4962_8c6e_52db7017b923() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_d40371a5_ae8c_4b86_95e1_411e3012ef06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_fed2da56_1657_427e_83fe_de1f9dc12d64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_69fe4a14_81d3_4f15_96a4_3839a40d9d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_be014864_2091_4ca2_bacf_b9f7a07bcc98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_6b115241_d747_4403_875f_c0173683c785() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_59d212a1_07d3_4c4b_9dd9_2ab6494178b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_f2f5f51d_af8f_4220_b6ae_a7777249465a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_eda60543_6198_4f22_a387_048d53f1d2f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_0109dbe0_3286_446b_b69e_c3ff15862fe9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_e8f1eada_8b15_4b74_8aa8_f3644aec4c08() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_266763d0_430f_4ed6_8df4_b38c3c7fd36f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_cc5ce28b_38ac_4e69_b4aa_0a8276f69160() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_6dedb913_4d05_4b8c_9499_254d2408ad58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_6864b050_0ce2_4d97_99f7_482191403c8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_2aedd3e3_d4af_43eb_995a_5613d1f7c715() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_42af3c73_1d6a_4808_aee4_a0025c3deac7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_7903e522_1d65_4e0c_bf51_228d705a292e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_c5c83e22_4247_422d_8e3b_aadbc4d052fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_6e9ed56a_6232_4e38_9ea2_d001c01ac30a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_c1d99363_7ad1_4dee_bef6_efa13bb5eebb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_e6c45530_fc17_473c_b9b9_af71dde71c71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_f40ec618_6619_4657_bf10_8eaf23f4ad9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b2aa34f9_85cb_4304_9074_451aab74b644() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_260595f2_f407_4f30_a215_7d43b02ebc3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a640961a_f56d_4df0_8b50_80013f00f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_1e844c28_66b7_4d1c_9942_8c8749b025ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_bd95ae7a_d3d8_4355_a048_4cc2412bca66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_2157b5ca_286e_412d_91fb_dca21b9ddb43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_619af3b7_f37c_41e9_8a65_f6f3edce3b02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_e9d93803_53da_4a94_a4ee_3df8a4697597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_f6bf1569_d71f_4683_be4f_249506249619() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_8afa7986_cd04_4df0_a455_273ed556cf5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_b1ca4e97_1d92_4c0d_b173_cdd438e156e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ba60ba6b_d971_40c7_8cab_0aadda4ef64d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f4d866ec_ac2b_42f9_9960_211653bcb9ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c45a8d25_c514_42aa_99af_e47196db1e98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8bff2687_84d3_48cb_aec2_30b206d0a606() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3c9e4243_900b_41a9_be9e_4d90988988fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e8abbf07_9b69_4402_9055_b232b4a46f50() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_d3005b08_ae5c_48ee_a27a_5daf9d966bb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_8cb68017_3b96_47fa_aaeb_11b221165ec5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_c3cfd871_2e0e_4ac0_817f_63da42a54513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_22951f91_63ca_4f6b_9088_0827fcf33c42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_25eb5313_b1e9_4baf_9eee_e8945720153a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_55e1b437_6b3a_4781_86be_680fffbfdb2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_e7049dcb_9e19_44f3_982c_4e54d7beb1b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_80b4302e_9f81_4e97_a8c6_fde4574bb4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_66726b0a_21ad_4aec_99b8_a3005b8067e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_e4883c35_6136_4eac_a548_2b882630b4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_11cbe7a9_951b_419b_ad6b_497c9a804849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_85023817_0622_4a96_b8da_bc30a3df6e65() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_04447889_0e0d_4932_8122_7062b0b97fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_96dad072_31e1_4dd3_bb35_2054edf3d340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_abda6443_f84a_4b2d_91ba_c4e347812c03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_e9cda3a9_39c8_4533_8362_eba65aefcf8f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_67de9091_51cc_4f38_aa3a_012aaf63f8ae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_5f043fda_6338_4fc7_845b_6b91bc601040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a37873b0_1240_43b0_8c0c_ae0c9babbdf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a4b743ba_4455_4182_99aa_858c301d8948() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_84035bbc_badd_4646_a850_a1310fc3ce67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_16a19495_7462_4362_b04f_fc9bde746fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_940dd7be_839d_45aa_8dcc_318783954501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a0695789_7e86_436d_ae93_6e212b003010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_5f70af44_0e70_455d_bc3d_23637613b7a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_b995b6ab_1e95_4c21_b895_55ec8aeac450() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_43ca981d_ec81_413c_8360_980ecb640ed5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f309460b_7607_4043_8bcd_d1752a581989() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_59e84e77_e49c_4108_bf2d_5d418ba54d97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f8a0a499_f3ab_4c28_ae81_95b809d50600() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_2bd01f7f_0632_4818_aa79_8de61c7b4e0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_174b301f_11c1_4454_845e_d23ff137c20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_aada740f_7e3a_4788_b0bb_191aedd8bb7d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_6f5d57ef_7c88_4972_8f36_33f1992e9d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_9730a340_8a88_4a90_abff_b2ab764783de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_c59b2414_8753_4565_aea9_7c9b4b8f0fdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_60547a3b_f2f3_4291_8091_6a9d7c98ed6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3aaeb774_020b_4617_ab17_1cfddccf4f76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_4346d6ab_8dc8_42c0_bc02_b6e73395ec32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ffecad93_71ef_4e5c_b0b7_de1bb933ff35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_50863ff2_4de1_434e_8a8e_bcfcaa1a992c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_5da6fd0b_3667_418c_a7f2_2c5dad2038d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_03aeeb60_dc3f_4e3f_b828_294150ae0ae2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_63c96812_fbc7_4e68_89b0_1251deb07b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_42e689a1_7047_4755_9a24_f47af1beecc4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_0acc6cc9_5875_44d3_bd48_b24bb91caf4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f29d3acb_ce7b_445d_abf3_831b7ff67317() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_8515769a_e00a_4d94_aaa5_c20c676943fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_0f311e64_b979_45d5_91f4_7aef94347589() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_97429d4e_ec6e_4424_a5cd_f315b47b29a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6abea681_fb66_4df6_870e_4a2646907ca7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_04057992_1595_487f_94b3_bae9f4d499b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_3f1d5f9f_8005_4be1_be6a_af01edd12315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_aa1cfa02_6e79_4c1b_b01a_f174acf206d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_6f3723a2_59c1_4958_8d16_df38096720fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a194825b_6cfc_4259_bdcf_8e9c020265b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_f6eed8b9_75db_453e_aa58_776776cf6533() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_3a14a817_5141_439c_9b6c_262521835e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_eb7186e4_15d3_4a4f_a478_25cf79fc46f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_59d212a1_07d3_4c4b_9dd9_2ab6494178b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_83c615f8_4610_44f3_a0be_fb0720501d95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_e13669a3_9eec_4192_8a62_cf46fba4d24f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d12051b2_67f6_423e_a823_7025285193da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_b9991f95_0b61_46e5_becf_ffe18aca9898() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b972d821_f689_4826_ba6f_3bd0f37e9e2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_0fc68624_43f4_4eab_86b7_7e19edc5dc66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e1a8c7c4_11ec_483c_8a39_c384bf07bffc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_eff771cc_98b5_4441_a042_a6737f65bad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_048d4c6b_be1f_4dd8_a337_54c59be17f51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_97c1da57_64a0_442b_82db_f57d5728b064() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ad461f13_726d_4c5d_9c86_df85fe03b77c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9d3998ac_9529_477f_9316_c3974f6b94fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_5f326109_68b6_437f_a0f1_6f39dc122590() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_73d29f43_2147_4d43_83cd_76f89352c931() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4ecc1fa0_6c7f_4ac4_85b3_19765121b597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_173664b3_c21b_46ac_8937_238dda84eadc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f5de8e00_7231_443e_8592_9b42c1a980a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_1d69d576_60fa_4171_bbf8_3755c9778878() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9eb72a54_23d5_4627_bd0b_f99de6b26e43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b6a4801e_a839_42a1_b60d_8db996c72a18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_8cb10834_ef6f_44fe_8eaa_1da1b8418425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_b475ce83_e078_439a_8339_837f8d9fe9ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_11cbe7a9_951b_419b_ad6b_497c9a804849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_60547a3b_f2f3_4291_8091_6a9d7c98ed6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_d728f054_a4a2_4bad_b6be_944e383281fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_576e8549_d8b5_4452_b241_080adcf4f5c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_097d8a17_ddde_43d0_8135_437ccc992462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_27d4ef85_5659_47af_83f2_9b4d37d69a43() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_3aebd520_5fc1_4ad2_8303_4187aafa1e7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_31ed5b8c_4003_456b_803e_7b8f9d2689a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_dbad242a_9fd3_421c_ba9a_5cc765181b33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_d4cf3f8d_8cbb_439c_a52a_c475fef26424() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_027eb184_88c3_425c_9969_daf4f5643667() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_951f280d_ee3a_4454_b78f_7dda7a86e489() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_e9d93803_53da_4a94_a4ee_3df8a4697597() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_19699d69_1a83_4ce3_9e20_1c215626e212() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c1eef9aa_4da3_4719_b679_04537290a3fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_1da1cef4_08fb_4795_a400_37b834729628() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_b8d3cb81_6565_4714_a091_a0a34908973c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ca3a6223_79f0_473a_824d_c698c7b7d8b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_e57af75d_fd21_4cdc_8300_97458ecd57e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_ddc977b5_2b75_4e29_ab08_a448a32ab890() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_3c5909a6_788f_4966_a93c_6c0f7cff4000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_1f332146_8463_43f5_b956_af7cd3ab3039() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_30d135c3_f023_4fb1_9c3d_95305aadc243() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a8702893_3e36_4675_aa6e_2b1b66fc3350() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_9a93c12c_ce95_41c7_9ce4_3b2e68333114() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ec9f71a2_4f52_4194_9df7_1704f84d7a89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_5fe83a61_d5ea_4050_89bb_e2a06c328391() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_63794421_1d0e_4470_b4eb_9616a48eb154() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_cffb825a_fb1c_4337_b57a_726dc5e72074() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_e1f72c6f_e4f2_469a_905b_98c1968a43aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_e97a9956_ce99_4157_a710_421a85defc7e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2bdf1354_de76_475e_be15_5275ca07d202() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_f792f7f2_ec71_491f_a233_b42dc798a07c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_124eb85f_27a2_4e9e_8c80_73229a2a2e12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_e7b272ce_3940_4637_95ed_86ab1b8715d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_a2056fb1_8110_4af7_b642_4a9294e5b7d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d1c12611_54b9_41ec_a78c_a8e6fa9377d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_41ba4916_8cbb_44fa_9827_3dae8de0baca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_de370159_8920_4f03_b0d1_8c18eca7cf63() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_897f7a09_c0f9_4f05_97a9_55a63ba1be34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_5ed4914f_3464_4db7_8482_44d8ee91e819() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_661bbd0e_d19e_40f1_99c0_311dd686ba06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_769a1510_a81c_4c2a_bcfb_eb199b87dcec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_1d24e5ef_01f1_4908_aeba_28f53e311e7b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_086aabf8_7a7f_4c46_9ada_cd44dc8df1de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_6493f40a_ad90_4e32_9d59_429b77d0acef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_e089ccbf_767c_4618_9ed2_6bc08eea47ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_b024984c_0eef_4caa_8a11_ec361a6790ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_44553a22_d899_4606_ab8d_36f649952245() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_67f9ab24_e75d_4003_92cb_b4436a8cd39d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_af6ad1b3_6441_464f_bd86_71b0a9231fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_d28448ab_ed80_436f_bcf7_631c2e7a0cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_89e1a78d_bd2b_444c_ad40_f3b0d4937900() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d35a4a83_3387_4691_a6be_46cacdbf95eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_a60fa43f_e399_4865_bf8f_32da8c123c4d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_2220c8f3_b9e8_4b03_a028_83a124de5722() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d812e5e1_b8fd_4eb2_8734_f923d475fc0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_451e9b6b_0dc9_4613_99f8_feeeac29c616() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b5ed76a1_3879_4722_be90_5c6e1add5f66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_57c49baa_5c8d_46cf_9b0b_0b397c934e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_df90bfe6_9c10_4f40_a6b4_dfb4b4548041() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_ba1524c4_be82_4cd8_bb50_92607f69bd01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a33c7c91_6bac_41ba_80c0_78e68954cca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8a14f010_c469_4122_8c69_3bf72a8a72d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_eea54644_d489_47cd_bffa_7827ff58ebf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d4928801_8e3e_451c_b631_1e6b56ecff84() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_48488bf1_5c99_46e8_93b4_51055ab037d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_9347251b_15ee_4c0b_a07c_06e0958e77b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_465518e9_7b1f_41e3_b607_fae8247f8800() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_72acb516_421d_47bd_8b64_daa7e26b46e4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_857590b2_20c6_4b5f_bd06_15809eb0ea72() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_87fb2c6a_34ca_4714_9c71_5f4dae18e887() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_ebeabce1_7027_4eb7_a905_3f8c74e4b4c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_555aa5d9_d93d_4313_a133_76a92cbfcc18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_cf345aa0_2da6_487b_88f0_83696210313e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_5a2951ef_4128_4961_982f_84ceb56920a3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ee303cc0_a006_48c5_9eec_6cbceec6d33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_277e4053_cab8_42ec_8a25_5f240f9c7f2d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_17145441_5706_484e_b008_8555308a3251() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_529f7d15_687b_4434_beab_b97d9962ab89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_cb180842_91b5_448c_aa55_30be8163ffe1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_62abed60_1a2f_43bb_ab00_8c9b503e9a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_3ae92d56_5e6f_4a9c_94e2_25968df57210() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_fbda464d_36ba_4625_9382_75a1fcc22e1b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ad5b03cd_df53_40e0_a401_35a92898c0b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_852e4bfe_cdf8_4131_8287_e37177bed8c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5c6334cb_6778_46bb_a001_12f68613d405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_1983cd28_010d_48ff_a49a_c4e7aebe6a51() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_cab9aca5_c722_475d_ab42_035f1654c521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_0e2929a3_9c5b_4f3f_b9f3_a41077ed9739() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_c2591a9b_4372_46ab_8dd2_56240dea85a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_aa045fa2_71bf_4a24_80e2_9b11d545a5d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_399d8634_3025_4e4c_9e3a_81c8ed9f0d74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9fb08fdb_c03b_4811_8ed8_1cd0f054a711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_692bcc92_5697_49a5_8075_744188d2bf67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1bdc924b_8b14_46bd_9a28_20cbc335b68a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f8d94d46_23a3_4bf3_959d_831a76bf7232() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_7a2068fd_8f11_42be_9d17_0a15768bdd94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_ea369d9e_a673_403c_b2dc_94b9766b10b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_afd798b0_4de5_476c_83f7_a9a1de7848d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_24f76568_6132_4f85_8f6e_4c9170e3d4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e3180e54_d0ae_48d3_8f64_ce593d8e6d04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_777ff717_b5eb_4cf6_ae88_689c7f0b1b12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c4855916_f21a_4f72_9c0c_a5cb4b8fd767() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_6be73761_11eb_4a82_8dda_ad9a295e262b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_c4789124_1508_4309_9063_d357d7055b79() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5a7fe767_bff0_4d2f_9aca_38e6996f45bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_8515769a_e00a_4d94_aaa5_c20c676943fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_79ff93d6_16c3_4b7d_a70b_021602f83f97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_639c08b6_9749_47c8_9e9e_b0120525fd5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_845924e6_35e8_4c17_a933_7c35690dd756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_412ab1dc_173f_4ed5_8b65_aaf27d1b7545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_639c08b6_9749_47c8_9e9e_b0120525fd5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_db3ba92f_660c_4b06_baf2_78368914651f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_b5d0490a_1caa_4626_bc3d_77fa7885824d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_2fc8099c_429a_4682_ada0_ccc17ca42855() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_b218c8b4_55fa_4568_ac94_6daab1a38fc0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_8f0a13b6_039d_4837_b27c_9446f2e2c040() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_552c0649_9421_4ba1_bb4f_e3cb94528545() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_20544d7e_2ed6_4150_b886_c820ab4e7991() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_00318802_621a_45c9_847c_0d4fd3104ea3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c5d86865_e0f2_43bd_a160_35132eb25260() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e64c14f1_5d1b_4fa8_b931_5c2889db16d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_1eb4ba9c_af67_4edb_99ce_fd07756186d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_1c84092a_046b_43bd_97e0_c0f6a12a5ca1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_32ff8135_a191_4e05_a9ef_9be5604de0a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_ee90bd83_c3f2_432d_beaf_d741dd49f19e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_be497ed6_5fc8_43f5_91f9_d7e800d39a3d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4f31dbc3_8d16_4644_9032_3e2ef1850573() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_15dc3143_4476_405c_b934_727b11559acb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_bac8f173_743f_482c_8f2c_0d6fdf4842cd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_4ef8da68_fec1_4802_ac01_419eeef2e793() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_587e36f5_fc86_44ef_874c_3ecc1f275fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_bfc296d2_717f_4989_9757_abfe90b1b147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_2f7ae070_0144_4672_852d_307ad82e59e6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_67c3628d_7bcd_420b_9fe4_5aa509f2dd95() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_8e8f136c_369a_4118_842e_e4d3b80556d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_57c9490e_c8fe_4d61_99cb_b386fc861e86() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_27269b74_508a_4b37_91d0_bb83930df2f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_80f0936d_48b2_411f_ae79_bc356865c8d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_92389ec0_2d86_4d0f_8f61_9683e3df5447() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0e5f0601_e963_438f_a684_4a6694bdfcc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d51c0a63_737c_4800_a726_68aa5de67e5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_932345d5_7fa8_4538_bc14_186f5ba046f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_dbc7a47e_f2b5_47e1_8825_ceb3667786ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_61382ff3_6c19_4aad_aa79_12df95927066() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_aede6537_ae16_45a7_a4b1_12a026dd88d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_4e2e29ea_127f_4e95_818a_cb281a3c2c33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_dbad242a_9fd3_421c_ba9a_5cc765181b33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_57bafa48_005c_4578_bd93_02ce4d9a1eda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_5f950da1_25a3_4028_98c6_556fc489d94e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_01dfd34f_7baa_47fc_9575_c214c655b010() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_f69ba47d_e771_405f_ab1e_6c0256bb98d1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_56ef7302_840b_4807_b843_db9ebb8f3fab() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_b00a68f3_3b66_4be3_ace8_321eef154320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c3a09283_7c6c_45d8_812e_65bb089e22d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_99913581_d158_4a35_92ec_83b32401e1d8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_2bfffdc9_606b_4614_bfd1_a279932040b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9f7c04cd_81aa_4753_ac47_8786a0898509() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_f9bd4053_6eba_4fce_9af5_3cc7b0123f62() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_12da34a8_fdc6_43a7_a8f2_bad945e1133f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_6abea681_fb66_4df6_870e_4a2646907ca7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_0f97ea33_5029_4f81_a5bb_8ea9a45c127d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_cfb8839c_da9e_476b_9044_49c52bb9c257() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_880f8753_1431_4a20_89f3_31af492808a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_37a63172_50f4_4184_8ed8_ff34563b25c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_1521b40a_dfeb_447b_8658_35e2b725ec25() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_38f37fd7_be21_4ef2_92f3_c7f49f84f786() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e040b5d8_edfd_48af_a03e_feabb1003e8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_7a07f165_5a82_4f62_a545_c22243d40c5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_217d3f55_a499_4a86_b017_255814d2bd6e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_4a926a5f_f7d5_4621_906e_867aae273f64() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_6278e127_0a3d_4478_850e_5ed3e7773607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ac0a4bf0_05d1_421d_a9fa_34788c642591() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_dee41971_9647_4d76_b80d_f1fae048a8b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_84035bbc_badd_4646_a850_a1310fc3ce67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_82f96036_86c4_4e3e_b9a8_67829ba56eea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ec144dd1_cfae_4f12_afb2_dd2da190c4ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_6d283a53_81d1_4c98_aa4c_d69ccc4b323a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_19bfe466_79c5_46e2_ac1b_cbceb8afa556() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_70891e7e_d467_4142_b9bd_b8714d47b85d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_7d490632_672c_4d17_83ee_3afebccb3f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_96476ed6_e033_4e23_8251_0bfb2ef28e80() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_3b45a8f2_8de3_4522_aabd_80e838f1d55b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_681852e2_c73d_4e0d_a7ab_0187b2293560() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_d83ad240_be1a_48d5_8999_d4f77c997ddc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_3c51578d_2e67_4552_bd77_f81375439f6d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_fce8010d_6643_41e7_95d0_7a4ed6f8209d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_f38ff064_3025_4052_ba7d_2ba58cb28051() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_3fe26bee_0a8e_452f_aa28_cd9c3f62216b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_37ccb481_8ea5_4c72_8fcd_c91bee5603a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a79f9971_af1e_4864_b6b4_55c2a8130e58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_244c1f52_8007_41a5_af85_4d99e55da7ed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_71f1bd32_20f0_4755_bbee_d231de065521() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_df817c12_7227_4f8b_becb_6de9a82a1532() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_889889c2_397f_44b4_9dee_8f645a638895() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_fb8487a0_53ef_489d_ba29_fa94cd3244cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d0f37d70_1bab_4ae3_87f4_6606978d1fc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_013b1275_5d64_4713_97a2_b220b6c70607() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_04cde6b9_470e_4bf6_b5cd_e82209fb5638() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_f7877ff9_0fa2_49c9_86fe_ded60d744f4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_a53fb06e_1590_476c_8308_8c6cce902be9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_7093b440_805b_4b47_8a22_0d471bfe93e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1a102af6_15b5_417b_ace9_e13ae41f87b9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_b37f2dca_de62_41fb_a926_49419136d281() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_175d45ce_21ff_4519_b555_ed3de8e83a15() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fc90f597_eba6_4e12_bc7c_2db88939ecea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_0de202f6_b562_40ef_a9a8_f10033434d71() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_b7846d10_0900_4f57_91e4_3572dc6b151b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_4ab528fa_06ca_419e_8b90_84adb32dddce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5bae1c54_eac6_47fb_9688_0d2ad733dc2e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_fac98083_6af2_499d_9f6b_8daf3b8e54a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_896eb2ef_5593_48c8_b182_e86755d34eed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_285d98a4_e9f7_46b2_a58c_6634f468a187() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_5ef2884c_dd89_4f7f_b169_507993f69b97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_a60435d2_fccd_48cc_9ec9_91c71091024c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f0eb577f_7ae4_4c22_be48_5ab0a6856f3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_b6b6a37d_5700_4c52_a7cb_0b028b883b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_dcd86537_89af_461e_9b48_ab82ba343d46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_5f641194_eb8c_4a04_9b56_828df7b86922() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_932345d5_7fa8_4538_bc14_186f5ba046f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_8c973c8b_9e5c_4dc0_a72c_b25747f83287() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_ead059d0_99dc_4faf_9242_6f74c5d61492() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_7d43a4ac_febc_4e1e_97d5_b19b14fdd4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_a80dffb7_4b68_4a9f_9dd2_3a4cf0613354() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f272842c_cc6f_4617_8dfd_026b72411776() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_a66b6534_a04b_4763_a8de_9412189c361e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_88080a9c_4665_4b07_b7f1_756120fed5e9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_b0daf192_1722_4967_a707_6337233e196f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_a5ab250d_4cc8_4b94_bff6_f59e97b811f0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_5f950da1_25a3_4028_98c6_556fc489d94e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a7e16e1a_7114_4ac9_ad29_01d525a1683d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_82930748_98e2_467d_95d2_ae50556d9bd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_72049a7d_821b_4dca_9b1a_3cf104a4b67c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_df1e5fec_d6cd_45ba_bd76_5f288e498018() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_cffe725b_8073_4217_8418_fce2e01e0da1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_208e8b79_e233_4e7e_9ac6_05eda749cc3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_8e8f136c_369a_4118_842e_e4d3b80556d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_cc253d53_bcdd_48cd_9672_44649fa81488() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_81819f90_c0c5_4a48_8ab7_d619b88eb495() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_59e84e77_e49c_4108_bf2d_5d418ba54d97() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7e862c19_9e29_4a33_9f3a_168bb9d7c384() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_2fc8099c_429a_4682_ada0_ccc17ca42855() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_61321da4_eb0b_469d_8106_750e27b5ec47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e5ca1476_7c19_4ad9_a8f3_32c606e83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_74c8aaf2_4f1e_4b03_a880_d3c366ce625f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_0977a6d2_cd62_4541_a58e_9b64c3d5d288() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_971ef192_5b3a_41bf_a8a9_559d137e0679() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_00db9613_3546_4ca8_83b3_7f8da07af315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_b2e5b779_cd09_4690_b83d_2c9f677ed669() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_6d63eafb_1bec_4e09_93fb_4d215f7146a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_ee3e2014_ab74_42e8_a955_29cb1434bb85() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_42707417_ca89_4e2c_9872_e50ab68adfca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_187fe97e_fa5e_4288_a0bc_c23248e92289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4c33d300_cdbd_4962_9916_7b755758f1e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_49dc78df_0d0a_4c6d_9561_dbfa2725af81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_8bcd165a_e538_4331_b411_4202d67498ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_36f190b5_9344_4b63_bad7_cd5a524ac74b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_951041ba_c6a0_469c_816c_249e1069ae61() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_5c17ba42_9de8_4382_aa0a_0965ba557b42() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_030f0292_f20d_4b2f_819b_d0c3fee3606e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_f374d263_8d5a_493a_b263_51e2c41d3b00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_47d94e33_2f45_4c27_aa30_595aa47d4b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_be5d77d0_9bbc_4530_9e7b_febb459f9d94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_a2ffb5a5_69d6_4241_ab52_a972873d1bd0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b0a7506d_a056_429f_873d_b97450621f74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b61a11bd_6b44_41db_a7bc_75ba8f1fa108() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_f55421f4_3bf9_46e2_a8a8_21a373690513() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_4ee1a6f6_9e45_4e48_87a4_700fda0115a4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_e7fefeb9_ec91_4ff4_a59a_b4476059cb17() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_21c5ab9d_1a4b_49fd_bc45_f93e08c14318() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_4ec84300_c8b1_4e2d_a87b_f5f06e17343f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4fb33927_f462_48fb_8c1e_694a9bf111cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_0f001c54_194f_425a_86c7_ef2db7c3f888() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_3649695c_e926_455f_89e1_5910b0213e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_4a334c54_ffc2_4210_9386_f4ab73b2ebdf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_55ab3dea_2a5f_443a_8f45_07295411d2db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_d3448ba9_4955_43c8_aaf4_8b6c66e00b4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3a90a8ff_3f06_4ddb_b67b_173b580d9aed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_fcb579bd_3313_43a9_bff0_c408fe35ee8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_762af1b6_d97d_423b_b2e6_2dbb7e8c4913() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_66dee2c7_a7df_4f36_ad1a_9d435159be3f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_4bff4850_44c8_42e5_8ec9_950fe47a6335() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_0073880d_8ba7_4073_a270_2d661741bb8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bad48590_4d05_41aa_bdd2_608190457f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_eacec2c1_23cb_4dc9_a7d9_175dfc405289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_05a54ba2_3905_4a45_a235_bf09bc37b4a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_8a7a00ed_a59e_44c4_960f_a62af0d425aa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_fc81fbe9_6d08_4792_8892_079fe6a21b70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_04e1e251_0795_465a_960a_c44904285cde() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_8c802b15_3a22_4c9e_bebc_c943fad46b67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_1f4fe1cd_64be_4f07_903c_d8054e790b9c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_7556d11e_89c0_48f0_bf8d_20ff07b2b05d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_95f77aad_a410_44b3_9395_50adf4c2205e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_3c818ff9_63a4_4d1d_8625_b24e5fc79de3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_297bee23_5210_4704_a237_2d9dff097aad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d84d0a60_a276_4292_a4cd_87a20e5cd5c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_2ef19878_1696_409e_a7d6_c07af3dad4b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_f6e29352_5753_4f14_ae08_a9c3cd40396f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_5d399c82_a4a8_4b15_8ee6_77f8f4f16723() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_badd6070_be44_4de5_ab8b_3963c15fcc4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8515769a_e00a_4d94_aaa5_c20c676943fa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_881d0442_0a4a_436a_af3d_fa6321028b8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_0ad41aa7_c2a0_4089_9048_500d346fecee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_30bfe9d7_d93c_475e_af85_27629e4aed01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_04275a43_df19_4ed4_b25c_ad555d7ac2be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1a17f0bf_7632_46bf_92c6_749d7f4979f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_56d200df_3efe_4bd6_b90a_77254b44012d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_d9f4dc5b_6b28_42c8_9a86_63718eaaa504() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_0468ffea_52fd_43da_bb74_b7a2a122fb68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_bae4d55e_fe02_48fb_aff2_e94f5c6efd13() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_71295821_17f5_467c_8310_b96eabca3a03() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_327e82d1_12e2_4b6a_ac98_d44ac9bf307e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_57c49baa_5c8d_46cf_9b0b_0b397c934e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_5_5584df20_af27_4021_8ee2_d2c102ea98d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_78b3576a_5b4c_424d_a1c7_75304b4af075() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_eb5b91f3_c5b1_459e_b83d_2f3a849386c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_b0b584fc_3829_4045_a1d7_e946ee10271b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_3434766c_069e_4c8b_aaa0_a87707738ebf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b11f820b_abf0_4ad2_86ec_7fde7a9030be() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_40098bd2_f647_470f_9066_7d0d19b3de30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_55405bae_da57_4793_8999_993b7f450201() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_9e9bee03_0375_466b_9de7_d19455ebb25b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_676f8461_bb7b_4e5d_9dc3_814714aa7bc9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_7db3a8c8_5d8f_48e8_8099_00d25758a70a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_403ee8ab_176e_4a91_90a4_d7dcd613496e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_158020f2_f440_443f_bdfc_bf4bf66fe502() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_27759461_353e_4520_8148_62118dfbd567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_45ce79e4_eea0_43ee_b7a3_da200711a3a0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_f0893999_aefe_4a48_83b6_847e1efd0ba4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_a23b636b_1d1d_4429_9afd_59556b3dab46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_b19041d3_169a_440e_aa42_4c99fab8bf81() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_26880261_382b_4e86_abb1_697440f0b69d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_11b130b4_9e9b_4daa_b940_1bb9f0071084() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bcb19784_7424_434a_a9f2_f025dfaf8a59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_654670c5_371b_409e_82dc_510307733a0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_662dece2_0e82_4710_97e0_367432a81188() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_b995b6ab_1e95_4c21_b895_55ec8aeac450() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_f8e90eac_60d2_403d_8ab2_8c7c70a01de7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_096f9f7b_2d3b_4809_8b47_64e44609c899() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_94aa5580_1c1b_448c_b467_079c91041048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_190af677_cafd_4465_9120_aac6a0707bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_d1a7327c_98dd_48a2_ad84_779a5fc35b40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_6e9b267e_ae76_4480_b70d_18fbcd219893() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_3423fb22_6979_4d07_bb4a_600fcfaf10e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_e2e0c582_6902_4dec_8d62_44c01f11254c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_8f05208c_28db_45d4_a1d6_68c9bafa8dd6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_d561c209_6270_457d_9a00_01276695dd04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_5162c9c1_0baf_4017_9311_b188cf1db26c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a26c4082_781d_4d49_becb_d101065b27b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_c3f67663_fb29_4ec8_b56a_41848dd5d6cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_a794a467_b08d_40c6_aea0_05c71aa8f7e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_04447889_0e0d_4932_8122_7062b0b97fb6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_de823379_b585_4205_9feb_6582a56ab7dc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f183cef0_0063_4eab_bf49_5791e104ed36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_2ab5514d_adb5_488c_a3b4_be095b8eeccc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_1c351398_b153_4708_86a8_d67ca98edd5f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_783891ee_eb84_464a_abb0_b42451fc07e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_3206730c_2696_45d5_b3b7_1157a01d385f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_414072ab_8397_4ba0_8cdb_aeb69aa566a7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_a38baa72_7c6c_40cb_90d6_467814669ba1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_a4262f14_45ec_4636_96dc_ef43256081ca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_781834f1_addb_486b_a2b9_693fcf597709() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_a37873b0_1240_43b0_8c0c_ae0c9babbdf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_ca21e09e_5f9e_4a91_8d81_0c16e18b0676() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_353ad608_082d_4437_b5d9_b4968a0c4668() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_86e78aac_1b6c_4ba0_8581_ac52366e881c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_fa712056_3b04_4070_9114_13a9775f073d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_3a12e3fe_203a_486f_9c9c_17c35e566340() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_57c49baa_5c8d_46cf_9b0b_0b397c934e2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_dc8fae8c_6e75_4b87_9efb_46935dbfbcbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_884d1a62_c544_45ba_bd51_dbbedb71eeba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_a79bce20_ecb6_4d2e_9462_a1c34166658c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_b039404a_91d9_4bad_bc40_75ac9efe3f28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_c40eeabf_3889_464c_b8ef_d286127a21fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f84fd233_1981_48a2_b487_19cace7c9166() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_f47c8fe1_de17_4b2b_a484_4559dc07b4f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_6a4af19b_6f3d_4921_9383_ac3de526d1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1f3430c3_f718_4278_8c6f_bda925965055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_eb5edfe9_56ae_4e4c_906d_c487cd22df22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_ad726ad8_4dc6_4c94_a3c8_e492aeb01cbe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_4997ccc9_80de_4610_940c_a67d26fb88ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_60a00373_ac7f_4b69_85bf_fbecdd854ccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c6f1e231_c89b_4c69_acde_4a94de5a4b10() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_5130c146_5a1d_4d94_a1b6_96e6df3df78a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_893fb16f_1d0c_424b_beb1_53966af892a1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_05d75069_daad_43f2_a579_ad7054a6ec8e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4b1b2ac8_bcfc_4e00_ac4d_c1d1ee6dc5d4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_f77c9afb_51a7_4f90_9fab_e9a871330a36() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_413db871_33f1_439c_959f_715f0931bb1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_7791e6dd_472f_4fe0_898e_a383a97d883d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_3fe8c593_c911_4281_8ff6_fb8d1469d7db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_248569a2_3322_4596_9381_d3d1fa1faa5a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_9ba3ed76_5907_4a3a_8e99_dcdbfa51057d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_261fbf1b_360f_4c6d_9ca6_57ac36781f70() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_48dbeacb_0f3a_4772_b46f_af38ac31b320() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ed49bb6d_657b_43d2_a55b_51bc112bbfa0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_78b2111c_2271_4389_991a_c8c38e277a3b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_294f54d5_9049_45b2_8fd9_6a2926c8add3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_7_d4636b6e_0531_456b_b66e_c00734539383() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_28c21861_31d0_48a8_9390_47fae3634c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_2d40abbb_62e8_4cd6_8605_99018e3c6c52() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_b843ee77_8ee2_4da0_8539_d44c1ffeecb2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_126a283f_2443_412a_b3d8_f589765c9c45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c6dcd8ea_87b1_441b_b22a_24e2b6c65ab9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_7aa3e9c6_7f2f_455c_811d_b6b3419af771() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_807c2357_048b_4a29_9fdd_575a65b4ee67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_5cfcdd9f_d24e_41ad_9ec8_f09c572073db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_d8754c85_70a2_4e79_8131_be27c5e3d315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_96f003d0_010e_4ea2_9d6b_66a87e24300e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_a211427b_1364_4f51_b3a0_1ed021aff93a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_d9c8ab28_a340_4269_b355_9e9668d286c6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_50e2e12a_3b6f_4fb1_ab28_86fe5944cfc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_324a5a63_6c87_487e_978f_81b9267d09e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_66f5c450_89ff_4a76_ad2e_851bb3c53389() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_a8e7a2ba_9caf_401c_99b7_f22515292bda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_9d6501eb_e15c_414f_8f65_e6bb6970a691() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_31185490_d7c8_4aac_8313_ac191b8c7fb0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_b585a760_50aa_45f0_9355_d3d095204500() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_4_19df9238_7686_4d0b_b0b4_ba737ed54464() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_473679d0_6461_4f6a_b04e_97088d813af5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_9e47782f_caec_429d_b68e_779a455d21d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_60471638_ec4b_45fd_bd12_ee962379697a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_21a5057c_9234_44dd_8b3f_78fa8dfa74b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_45b385b7_5362_410a_ae36_d7f8b115eb27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d6e825c5_fd22_479f_ab3a_78db3b8fbadf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_0212eb76_4185_4ac4_9731_64927d394056() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_f428b77e_7408_47a9_9f2e_2f96b7224c99() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_c28c830c_9b19_4290_bc64_79b90c8f8ad4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_1ae2de34_dd11_421a_a919_1be39e9b8fcc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_35db6182_f047_4f6f_b78d_46de0a404791() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_ec5401d4_c800_40cd_aa59_4d3719b0752c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d333c633_d8b9_45a7_aea9_6c516e36f425() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_b0a165d6_b437_4e95_ba93_8437058c85f5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e26f1aa0_4d63_4416_be8f_54ff9d38e6e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_3aa853fd_1d22_4010_abdc_12c727670c00() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_b48cc552_37b6_47cf_9a83_9567c00d1000() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_3f1d5f9f_8005_4be1_be6a_af01edd12315() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_97e19cb9_969d_46b2_895d_9effded63d5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_81c807b0_d9b1_4576_8198_7daa6be373cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_07fd84d4_ce27_46f2_a33f_85663ced0b68() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_07199e48_ac43_4129_8fc1_6bad39151a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c7259bf8_3cb5_4b5f_833f_136d950dbf5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_d8425c65_943b_4b06_b5d0_0826a9af26dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_b5788d38_b233_4160_ac90_02872ee1cf55() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_76a6a596_1b2d_4b0c_bc15_3755d28ff399() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_139dde5d_e1ef_4e9b_a336_a3550f786b1c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_4e6da5cb_4f10_4a14_9959_c164b0a5e918() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_03bb829b_7af8_499a_b92c_7b89f3fef48b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_c505ec90_aea4_4998_9da7_6c831cac205a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_85ab0d32_5d96_4a9f_84bd_2d4712e4d567() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_368df924_44d4_4bb5_ba7c_b5611f86d1d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c7470eaf_055b_4e0c_a404_b2a55a1e8178() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_ae6bbb87_9d4a_4634_9a64_2409e998ff9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_fde9be33_a06d_468b_9df4_a1cfc42c52f7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_5c6334cb_6778_46bb_a001_12f68613d405() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_270ad58a_fdc7_45d0_8bc6_3986d18b8029() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_0fb4cbf5_16e0_464c_baa7_937302925562() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_1e4c644e_784b_4db2_ad77_87d61772a907() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_3e514e14_b387_48ab_b579_9fc427f2a0c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_a2ebcc70_a145_40b4_9cc5_6596d8eec72c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_ececc37a_cd90_48a2_a1a0_92cc173fd7b4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_1b1e7143_37ec_485a_ada9_a04f9bccd945() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_cbf390ef_421a_4acf_8918_f6668820c8c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_c5892d1d_6f6d_4a74_865c_537e06cc44a8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_1bf5baf4_6518_4146_88f6_fd98f2123cd8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_1470540a_727a_49e5_a591_e20d66d60364() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ec9f71a2_4f52_4194_9df7_1704f84d7a89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_eda17349_d5a7_4217_b2c4_44594b34b921() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_2d1e2ab8_f6c7_4427_8b01_76b120543c06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_3af1e785_7a03_4f12_bae2_809d3ec2d9b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_b5be22fc_ef31_456a_8ec7_345b377d2c88() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_ac4bcdec_3232_4f2b_9fbe_b10b43e04147() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_e6144540_b1a9_4c63_a2fe_933e40d4ee96() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_8c3d092a_052a_4249_a125_0350f0a6d06f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_51c1eca3_76e6_4443_941b_6468ac7631ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_be128124_4763_48d7_8547_23b8396276a9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_915e6ba7_730f_4f63_8101_0eb5624dcd98() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_f5e11a6c_b5b9_4a79_82a9_9b94f6534617() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_1bcdc25b_b0d2_4875_8c67_69940deb7de0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_53dd358f_f73c_4aa5_a6a8_5fefc448d7d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_645fa6ae_e93a_4881_ab20_7b8d357927f2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_a524a758_fe33_4ab9_be84_da02787a9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_d42b887a_6f86_41d1_915d_69c7783ae467() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_9b336553_9a36_4b2a_a124_f263bcb946f4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_2fbec46c_02d0_482c_8789_abea2f8471b0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_a26c4082_781d_4d49_becb_d101065b27b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_a459df7a_998b_406d_a371_60197f631e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_9_fd366014_efe8_48d3_b15f_409e0c96b529() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_d580d599_d96f_43c3_92f6_c330de837be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_cd413b1c_906e_41d8_9f9d_94d0d8bc2618() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_35d183c5_a772_4bce_8007_30ea725092b7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_42f9dd35_d6ee_4a26_9267_98b9c433cbed() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_6_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_4ea381ec_770c_42ef_aadb_073a94700262() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_32e3be6e_206a_4e63_8eb9_d4d15faa7bd3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5698b24e_d4f8_47ec_a4b9_64feadacf73e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7e9b888a_6161_4f8f_857c_bc589aeda3ba() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_663f7217_e75d_417a_bfab_c204eccd235e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_b2195933_aa7a_4cf4_aa23_374f4e8f8cf0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_14dcc00e_9b2f_4413_8970_f614929ccaa5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_01b7e467_4c11_4299_a3f3_0cd56795bae9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_3eed3b06_30d8_406f_91fc_5b0b523b0637() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_0477e1e5_846a_4359_a04a_0c6d050adc54() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_f407693e_9e13_443c_bd8b_f5934b90702f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_427bc80b_3fab_4486_9da3_033c7d21927c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_1195d254_b5f5_419c_98ff_db5de9e913db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_a6c99019_8163_4559_9da8_9eb77858845b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_e1cb8491_9376_4d9a_b29b_01611ac79aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_813c79ca_1123_460f_9663_1662963acbae() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_248d0f14_784d_4d12_bdb7_e94abbb89058() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_ed2465b8_94ce_4514_b52b_752cb5177048() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_fa9cc615_0099_435f_8123_e92d33aff570() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_d115641f_aff8_4595_9ef5_c565c37c2104() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_8_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_ae62a90b_2200_4c4d_8b4f_6903952cb1ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_cd444105_a83b_4d7b_afa4_bda143a85d4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_ffcba381_4936_478d_8eb9_5fde8f88c1d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_25203b23_4454_4d53_977f_1fb3fdb2f8d7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_5289057e_22cf_4e96_a0c9_bbd4a45dcf47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_a5efc2a5_963f_41c6_ae52_96bdbfce83b5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_7f2f01ff_b4e0_46fe_a7a9_4f2cba19ebb7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_558e2004_f9c3_415a_8c13_5dee91265aaa() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_cadebaa4_a4aa_468f_8910_d9304a70cf59() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_1c543438_11a6_48ef_a66d_e41cb6cf305e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_10_d21ca633_7161_4933_aa17_22a99fd03daf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ef2c2460_d49d_468f_ad61_92647e680328() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_ba1e2ded_36f1_460d_abbf_35d27e5e5e27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_46e5ea52_313f_475e_8fee_8f68c8eab1fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_b960507f_68a7_413b_bef9_5c783deba68d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_2c6660d3_21fa_4765_b738_3d3deee4c29f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_c87cb24f_c2fc_4ee7_a118_1748de79114c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_a6e725ce_ca26_4679_ad23_576c3b636e04() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_e0cc2b86_888b_46b7_aa68_f9c0a915474a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_ed8fa7a4_adcc_48d5_ad20_2f5011cd1e35() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_69c5e920_a2b0_41e9_933a_27e4604e4f5b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_00474971_4a61_4a2a_901a_08b3049b63b8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_e19a6ac2_e71a_44cd_9b96_821df5f77c32() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_bc989c77_188f_451c_ae40_a9e75e9fd8ee() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_c82327d4_10dc_419a_9656_325333257766() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e1cb8491_9376_4d9a_b29b_01611ac79aa4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_451e9b6b_0dc9_4613_99f8_feeeac29c616() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_c4bce134_f013_47e9_b149_831eda6ca5f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_eacec2c1_23cb_4dc9_a7d9_175dfc405289() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_996568fb_f007_4480_9379_49604355b0fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_573492f9_036c_4ee8_8e79_20550906ffd7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_5_638f0eac_bade_4319_ac99_0897319a1eca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d73af5b2_b866_4663_b836_a071fe69b598() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4834397a_c49e_4993_ad6d_d1dedc98f37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_769e9be2_ac96_4784_a29b_6c57075a4c2a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a051f500_a175_4709_8158_f96fef8d2c57() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_389fcbe8_d09e_4ad0_9fde_d6218400ff60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_51084fd7_6d8d_4296_b056_679d340ee03b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_08403272_232e_4f11_9cf5_200a50f6f57f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_306274af_f49e_4935_b341_7cdbe6b30501() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_60dc276d_703e_4688_9259_db7a397ba765() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_67124927_a2c8_4621_be29_814ea6e30d7a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_7166fc05_b420_40b5_9adc_67af4588f020() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_1ec5d5cb_de19_41c9_a2ec_dc1e348ca13d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_e2a17464_4d1f_4d53_b063_48277b95fbea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_d9ddf909_c52a_44ed_aaa3_1cfb683438d0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_3b15ec94_2b96_471f_9d92_69a4613bf40e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_899fb681_838a_4fee_aaeb_8104224668f9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_29f75f89_21e3_433c_9490_a8bb6314e6db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_8_529f7d15_687b_4434_beab_b97d9962ab89() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_8c0894aa_2e11_4cee_b62c_0c26ab4dbb9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_8c973c8b_9e5c_4dc0_a72c_b25747f83287() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_5a17b5c8_450f_4907_8791_73465de6aa9e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_d870e1a7_d133_4759_ae32_5dcf95d41118() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_2a6c3011_f85e_4ce6_a298_27a45a41d6d5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_3_1e41e079_b922_4cd7_9ef4_c86085f2f40a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_eff71699_d825_494a_8458_4fd5e9736e9b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_a64ed30a_396b_40bc_b68c_0d76bdbb0b9f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_01a16b87_64d9_47e2_aa4d_f752607cdb34() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_2012b95c_accb_48c5_a84d_2a5e19cc2144() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d228a53b_72e9_4a0d_88c4_33197bb2e01a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_7_0ba8502f_43dc_42ed_81f5_e91c8393d45d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_692bcc92_5697_49a5_8075_744188d2bf67() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_be640c64_5f0b_4db3_9088_67f0b274a33f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_b628b50b_ff6d_4a5b_b8d7_fde9bd4fa508() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_0_78cfffea_8010_4a4f_8569_be841b0d99e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_9_6dff6861_dbd4_4eb5_8a45_23f9d995d002() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_1_01b06e1d_7cf0_43e4_a082_f0dd44f5fb46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_ac7e00fa_7433_46cd_8225_2d34ddad062e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_d73bb6c3_9e68_4f42_824e_f08b9af850dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_2030fa33_45e2_46f9_b405_c936912b1965() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_8be15ed2_bdeb_4b70_8b83_d56da4cf6623() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_81ed2c5b_f8fd_461c_8331_3a66e16485c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_7409e963_a8ae_4eff_a318_b4401187cb66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_317635d7_08ac_4e79_bd3b_7c12fdf086c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_0f2a33b5_4a67_4e06_98d8_f6227a59d314() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_b6ddbcca_3e40_412f_8001_c0904105adf3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4b637853_c979_42a9_be5e_aae41bd32aca() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_278a642e_33aa_440c_8296_ac1e61fbf8dd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_a24c4681_8b7f_4c3b_a672_74eed4ea5756() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_3062f8d1_8bc7_4062_af96_2608782dfdcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_6948a4e8_f083_4972_834a_6cf3e3ec9ff2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_2f9f4d64_64db_45ae_99de_bdc7588b3333() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_24a0c794_1234_4872_83ab_d206b5062f60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_00120f57_0796_4276_ae6c_c0ee5d320c1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_a6fe331e_c151_440b_9af1_269c5772617a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_18743265_f3a0_482b_8675_c3c6ec0a0098() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_58e2277d_e8c9_452d_bf3f_ca380e23cba6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_d0f37d70_1bab_4ae3_87f4_6606978d1fc7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_f67c3a8c_9e62_4590_90e9_0317c7d836fe() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_fb49aa32_8996_434a_8794_94b2a5ffdf8d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_e26de964_3810_4f04_a187_febe4c8ea481() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ad57f780_a32d_4c84_95c9_3b5fafb7206b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_fb38f507_380e_4b7a_b060_9c31719ff9bd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_98fd3816_e58c_4911_ab82_6325e9f72e87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_827f9241_f4bb_41d3_9d9c_32fb70fd2a44() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_1d10c67d_7a91_4ec5_98ff_fffc43f91b06() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_3fca4073_e4c8_4cc9_ab71_ff9444468009() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_3_2bd01f7f_0632_4818_aa79_8de61c7b4e0d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_c10616a8_2663_451b_96d5_92d0ff3969b2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_4602b924_803d_415a_bdfe_0de0206a7125() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_00120f57_0796_4276_ae6c_c0ee5d320c1e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_92955d82_f118_4e74_b2ae_ae97b339b330() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_44aca58b_42df_4fcd_bf03_3f3acddf69c5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_1_a7e16e1a_7114_4ac9_ad29_01d525a1683d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_11b843c0_dae5_4e7a_b592_73a112896682() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_8be54682_410f_4ff7_a000_0cd61635b763() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_afe0535d_13e7_4fc8_913e_4f22ec6a0441() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_392b2c5c_a10b_4a99_8503_79a8c2e9ffc1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_c295d829_5e94_4658_bc78_551e66ce33a2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_42664c84_42cc_4948_97e3_c641c64de20e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_6dedb913_4d05_4b8c_9499_254d2408ad58() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_81c807b0_d9b1_4576_8198_7daa6be373cf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_2_47349341_ae9d_4c25_9c3a_1b70d8865e30() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_372e1d9e_ef04_4306_bd14_d23f8efa6abb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_a986814f_f7c8_40e8_ad7b_7acec2277f87() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_eb5b91f3_c5b1_459e_b83d_2f3a849386c1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_2c66fa3c_4f6b_41ff_b081_873217edc19d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_1f925600_4b93_47ab_8aff_1d62c6e609ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_1_483d837f_2fc2_4eae_9146_3b437f1a8d73() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_463b3d8f_4ae9_4df0_aca5_10b37fd9b586() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_61d095f9_958e_4d24_8332_6ae9b0ea9c18() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_10_042848d0_cc68_4028_8c5d_548a8f030c6f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_ba1524c4_be82_4cd8_bb50_92607f69bd01() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_f125b4e2_9d79_4d41_a57b_babd368bb827() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_e6e22625_c5d8_40e2_9cea_b29ba9c170df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_aeebc90b_a551_451d_a618_8573b132f31f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_5_b66578ee_7aad_4e2a_9686_f895890ee894() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_186a1daa_9e83_4f26_a234_a21838a91959() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_afca1330_ec51_4c39_b92e_72b76b4673ea() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_0_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_10_ff10aa72_c418_49de_9086_8c9ee854b27c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_81fcc6af_3413_41ad_9ea6_8fee9da8831d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_99893b99_a4ad_414b_ac62_dd9285c3a6c2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_7_98f30288_aad9_467d_b208_6b27d0cf85c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_e4883c35_6136_4eac_a548_2b882630b4da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_d0ba9659_5195_4248_8b0c_2e05248b1a20() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_d812e5e1_b8fd_4eb2_8734_f923d475fc0f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_70618fc4_d378_4ae9_9f19_174fe0274b4b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_10_615d5e91_4a68_4561_8da6_c3cf5afd5615() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_eeba0d08_7cab_44d4_b770_5fcef01ce5f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_c0736600_8931_48f7_a56a_bbdf0335f849() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_b79794c6_2cdc_45ac_acbc_6372ad0484bb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_5_39745a72_c6fb_4c17_9b15_42cfd6664388() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_420fa16b_35b2_4b1e_9984_b4fd226171ad() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_932345d5_7fa8_4538_bc14_186f5ba046f1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_671c31d8_34a4_4751_9136_eb2f50b720c7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_38014830_b40f_46b5_82e0_58e941577cda() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_0_ac0a4bf0_05d1_421d_a9fa_34788c642591() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_1_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_3_e1f72e18_68df_459d_841c_7d83def32fcd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_1_2152d62f_004f_47a6_859f_2fa7adb2bd53() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_e9511eeb_c1d1_435c_9572_6d57456515ff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_d9cd250f_daf1_4261_9554_b8709310c8ec() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_61e5e3ef_c45c_42ae_b86f_27e47bf08072() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_fa32a556_d25e_4099_b243_0a9012356f0b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_4_d2698ee2_438e_4e72_a50a_afc7dc65ec40() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_3_2577ac2b_98c0_4184_9b42_04a5bab91228() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_de0c03d5_424c_49df_a44e_71db75d9ae4c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_1_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_2_7ea156d3_fef0_47ce_a86e_cf5856d56622() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_7a7b052a_19c4_4df1_9680_f5b8f3c08119() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_3_d011636b_b6ca_4a60_9477_09e0e631aace() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_b7d06076_57c3_458d_b1be_c1e863d7df3a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_5_1ff409df_131f_4221_8e7b_9f0061046357() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_6_85cb9638_b5a4_4383_a5f9_1eba1f89e4e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_fb938ce0_0676_4fb5_a40e_f1b878aa0c12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_6ee61dce_1d15_4406_9815_6e566f344f33() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_5909a985_887a_4e9c_8174_c9a9650ee0f6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_f8b40c12_bd4a_4104_9e70_00cd8e5acd45() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_003ae497_eb2a_407c_bc09_ed4e11f382cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_d3e66556_6b1f_46c9_b711_d7b124d4165f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_7_783891ee_eb84_464a_abb0_b42451fc07e0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_0_2b216a95_867e_456a_9ae0_69716553bccf() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_7_862b75e4_58d7_428b_bf2f_adfd74083a8b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_fcd612be_b516_4eef_9491_f4768463217f() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_0_2c220259_d453_4bba_9c11_0e2827b5e355() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_6_d80dec03_f703_48d2_94da_77b95f3c32d2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_c5d86865_e0f2_43bd_a160_35132eb25260() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_e49c191c_b79b_4e44_a019_326fd28deedd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_ccbe17ac_aff4_4057_9523_0ebcdd030a27() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_45ad6447_ad65_4826_aeeb_3fa3555b9d66() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_10_75c50ee2_89a7_42e2_aca9_4beee43bfdeb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_584eb306_7cf6_49b1_9de1_fd38dd5bad07() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_4396c4bb_5888_4a90_81d2_1fce69002bc2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_6_d0fb838b_f85c_4874_b9f7_938bb0b4688c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_2_4fd491c5_6f23_46e3_8b4e_d58cf534711c() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_08cc6c2f_9223_4a1b_885a_adc4d21e2e1a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_4_25b818fe_66a7_4acf_9ef1_d14ad1b279e1() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_1_bac17ed9_253d_4881_8bb1_e08e87c4d5c4() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_2a4aa73b_31ad_4698_b480_a31d1d0a9b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_2eec0a26_889f_42c8_ab3a_cf614c33eb02() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_3_dad8f6a8_0044_444b_a3f2_738f376c788d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_0acc6cc9_5875_44d3_bd48_b24bb91caf4e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_47855f1d_5dea_4a3b_a158_50a18a59fdff() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_4_0744667c_ae6d_4968_9675_34345530a46d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_1_f9d07973_5498_4f52_b32c_3a9cb4b74be5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_9_04db44c2_7aa4_4326_b101_9ee9cf9636f3() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_7b6e1ae4_c985_48b6_82d4_c576db9363ce() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_5_608ca478_eea4_41f4_b14d_b7351d7f7de8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_2_8f253d61_36ff_4c6d_86df_fccc3f5a2a75() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_21d70dee_0972_46d8_a754_4b41223f4e46() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_8_2f8e8201_ae6e_4742_bb3d_c09cfe598da5() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_a37873b0_1240_43b0_8c0c_ae0c9babbdf2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_8_fea391b4_5501_45b7_b74e_0e2c0fb85da2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_164ca8ff_b029_4224_afd4_88fbae9924e2() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_f9401dc2_92a9_4bb5_a251_038cabd741fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_3_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_9_fbdd484f_6607_4d37_8f9d_c39dc9385934() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_9_14479c31_c593_4a5e_95d7_e0bfe7a2b37a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_6_a3f1761d_cd58_4ecd_ab00_5ae42236cde8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_7_1717731d_366c_4c90_a35a_d95e658d3700() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_2_c14e2c85_7eca_4c05_9223_1d18ca9c5e74() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_0_c33bf9de_2375_44c8_884b_11c2db60fbf7() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_2_4796f3b9_a9e2_4a3d_9e7e_555614c607d6() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_4_ccd36403_a11d_4342_b0f3_ba08604d904b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_6_92308e72_1eea_4e5c_aa00_259ffcfb2146() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_8_b7710134_108d_41f6_b1f4_21fcee28bdc8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_7_5416b249_e88f_4c16_9adb_6a2102c980da() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_166c23e2_bede_4147_b13c_a6044cfe0456() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_4_0b52b098_f429_426d_adc0_8270894e9a2b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_2_10a54894_d120_4410_8bfa_f60de69384af() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_ce7d4062_3c8a_4fbc_8d98_421aa50239ac() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_2a4aa73b_31ad_4698_b480_a31d1d0a9b60() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fff56753_44ab_4b28_a42d_8118a4d83846() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_4_9276ae60_6159_4b3a_ad79_9ad80bd3785b() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_0_b4778156_87b8_410b_bb94_44b20e737808() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

    @Test
    public void test_sumSquares_Problem_8_ce574732_f08d_4383_a68d_2094ab2a7f0e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_5_e0287535_4e79_4471_a3e4_619378507449() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_6_b7728280_777f_486e_9476_227c7fae44fb() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_4_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l))));
    assertEquals(-3, result);
}

    @Test
    public void test_sumSquares_Problem_9_fb8487a0_53ef_489d_ba29_fa94cd3244cc() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_2_608d59bd_162c_40c5_a2d7_dc6ad044d23d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList())));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_20169979_2b21_4e5c_b8c3_3133ead293df() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_6_d6b5a5de_fe94_442c_a425_c15a7ca9a25a() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l, (long)2l, (long)-1l, (long)-5l))));
    assertEquals(-126, result);
}

    @Test
    public void test_sumSquares_Problem_9_499f9550_f0f1_48ed_8540_c9a142ce8f47() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_7_3fdf955c_dd8e_4d0f_be67_7e57be347d5d() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l, (long)-99l, (long)1l, (long)0l, (long)-2l))));
    assertEquals(3030, result);
}

    @Test
    public void test_sumSquares_Problem_3_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l))));
    assertEquals(9, result);
}

    @Test
    public void test_sumSquares_Problem_10_d4680eba_651b_45f8_8afb_3426f05e6ff8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_10_09a33ed1_9ed2_4a80_8c0b_30e643495f12() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_5_69d1b1c7_d7a5_4375_9b43_5b1158a30692() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)0l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_10_fc2f9571_79c4_448a_be55_7dac91da8ea8() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l, (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l, (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))));
    assertEquals(-1448, result);
}

    @Test
    public void test_sumSquares_Problem_8_85271b5b_c530_4350_a8e0_8d4b3b190219() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_8_7d1be315_9a18_46aa_94ef_7b3fff43e696() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long)-1l))));
    assertEquals(0, result);
}

    @Test
    public void test_sumSquares_Problem_9_611a3e1c_9344_4477_9918_e869b40054db() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l, (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l, (long)-26l, (long)35l, (long)37l))));
    assertEquals(-14196, result);
}

    @Test
    public void test_sumSquares_Problem_0_eecaf400_46b7_4b66_8eac_c85a08e14055() {
    int result = sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))));
    assertEquals(6, result);
}

}
