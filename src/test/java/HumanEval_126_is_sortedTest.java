import org.junit.Test;
import static org.junit.Assert.*;

public class HumanEval_126_is_sortedTest {

    @Test
    public void test_isSorted_Problem_1_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ec543f32_f7eb_4ebb_9145_edca0fbfd79f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1415b14b_69b5_4046_87e7_c1c4d4db4552() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_add6814b_5262_422e_9bc6_8638ab7e3900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_150f6998_b1dd_43ec_94a5_3dc97818dcf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d10f114b_d414_4018_b937_d1a3750c84bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0ddc4d8d_59a0_4bd8_802e_735ba805a928() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6e27cece_d681_42ab_8c70_3e3ac2c0dc70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_fc3986f7_05a9_441f_b221_1e2ba5913498() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bea100e7_c5a1_4ec5_a029_5fdc8037f32d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9cea7118_881a_4bf8_bd8f_e0f038f14d17() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_dfc1518e_d2e9_4cb6_b0a6_6a47f89d5a9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fc3986f7_05a9_441f_b221_1e2ba5913498() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_aec17805_6061_41b8_902f_362f4ca7df66() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_02b8c3e1_e685_4826_88f0_8dda145d43e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f2c1fb15_e560_4adc_9af9_2d0bd33a8655() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_52781d91_de07_423d_beff_2b002e6d047e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_12838c1b_0743_46ac_992e_fc73a82c1d84() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_89eb3cbb_fdd2_422c_ab69_9c7702fb9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ad37f7e0_0ef4_4e9b_9449_fbf81edc7afb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_87fc51d8_b3c0_4887_adab_19ddd1c933f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_24ebf63d_ddee_4f09_9863_84a72a13ea6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7b8da7a7_75ed_492d_8d40_ca26f9b282ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_25eee561_30f9_4f93_ab15_adb2e873faee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9dcbbbab_bdfb_4177_a766_6fbe3691502b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b1023c67_4e7d_4f79_8a63_d82c8073268f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0f9585f1_08ff_4f94_945a_fe0590a4021e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_aec17805_6061_41b8_902f_362f4ca7df66() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b482b670_dbf6_40f5_b971_793a7352b3e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8d044b06_e471_4b16_ae49_85f12c5dadd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_80e20b12_24d5_42d8_9276_1705ac5b1caa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_92a0299d_a433_41b3_9130_cb778b0794d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a8b72277_0cb2_4292_81fc_a58c42a1c05e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_aec17805_6061_41b8_902f_362f4ca7df66() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7b8da7a7_75ed_492d_8d40_ca26f9b282ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2547ae5d_2a5c_4b6b_bcc5_818df37b3e6f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6af9bb68_06c0_4344_992c_93d0a0a394c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b1023c67_4e7d_4f79_8a63_d82c8073268f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b343347f_2545_468a_bf3b_d2e280b73c08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_765cf7c1_0dc7_49a5_aa33_c60d3622377e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7de9f1e7_128b_4214_9f3e_58fc94d7bbba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2547ae5d_2a5c_4b6b_bcc5_818df37b3e6f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a3abe08e_126c_47d9_8f4a_f6a08e826e69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_67a12c0b_718d_4a8c_a5e0_36cde7c55f69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6f384ab1_e63a_4fa8_9d18_2ef449b8f231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_92a0299d_a433_41b3_9130_cb778b0794d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b22b919a_0318_46be_885a_613f2c08245a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_67a12c0b_718d_4a8c_a5e0_36cde7c55f69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d10f114b_d414_4018_b937_d1a3750c84bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_06a926ff_094d_4c93_9eae_938391ab1067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f1658ff8_fe48_4503_8b1d_b422dfb4833d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ad37f7e0_0ef4_4e9b_9449_fbf81edc7afb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b343347f_2545_468a_bf3b_d2e280b73c08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bea100e7_c5a1_4ec5_a029_5fdc8037f32d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8d044b06_e471_4b16_ae49_85f12c5dadd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_079db9e6_23d8_4b1f_8610_8ef5a0f59cb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5ebe26ed_95b9_4477_9a9b_cd17e3edb050() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ec543f32_f7eb_4ebb_9145_edca0fbfd79f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_779f7fb7_3d1a_43f7_8630_60a7af9502f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_13cfed3f_208a_46f1_acc6_95c3ada2b7d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a13b06dc_c809_4195_8842_11e61f288c69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_93df2116_2187_4a6f_b2de_bfb84885eb7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_936468a5_5e8d_46fb_98a3_12536a8fb876() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c570b8e4_ed00_4fc1_bc1a_a8ee5fbf8af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9dcbbbab_bdfb_4177_a766_6fbe3691502b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_add6814b_5262_422e_9bc6_8638ab7e3900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a028aa82_7394_4acb_a6eb_b6160716ef98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_add6814b_5262_422e_9bc6_8638ab7e3900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_67ea8c79_e2b2_4377_a94c_c2091710b911() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_89eb3cbb_fdd2_422c_ab69_9c7702fb9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_80e20b12_24d5_42d8_9276_1705ac5b1caa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ad37f7e0_0ef4_4e9b_9449_fbf81edc7afb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_64f26adb_45d0_4080_88b5_d050c60d24b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_765cf7c1_0dc7_49a5_aa33_c60d3622377e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_61780ce9_fd84_4586_968e_0d16e237846f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a8b72277_0cb2_4292_81fc_a58c42a1c05e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_02b8c3e1_e685_4826_88f0_8dda145d43e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_64f26adb_45d0_4080_88b5_d050c60d24b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6f384ab1_e63a_4fa8_9d18_2ef449b8f231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_53a1d451_fb91_4256_a77c_5a2706239040() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4b7c55a0_d6ad_4961_a423_3bf13355daa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d10f114b_d414_4018_b937_d1a3750c84bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_89eb3cbb_fdd2_422c_ab69_9c7702fb9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_12838c1b_0743_46ac_992e_fc73a82c1d84() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e8ee06b3_ebf2_4595_ae3b_a1051ab4ee7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_365a5596_c738_45ae_8234_06773bef79ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bea100e7_c5a1_4ec5_a029_5fdc8037f32d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_25eee561_30f9_4f93_ab15_adb2e873faee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_13cfed3f_208a_46f1_acc6_95c3ada2b7d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5ebe26ed_95b9_4477_9a9b_cd17e3edb050() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_936468a5_5e8d_46fb_98a3_12536a8fb876() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d006e8b3_30f0_4f48_8276_76b00614eeb1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_365a5596_c738_45ae_8234_06773bef79ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b482b670_dbf6_40f5_b971_793a7352b3e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_aec17805_6061_41b8_902f_362f4ca7df66() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_93df2116_2187_4a6f_b2de_bfb84885eb7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_53a1d451_fb91_4256_a77c_5a2706239040() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_13cfed3f_208a_46f1_acc6_95c3ada2b7d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_64f26adb_45d0_4080_88b5_d050c60d24b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a16ffdf2_40e9_40fe_acb2_4a7e7ef8d9d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_150f6998_b1dd_43ec_94a5_3dc97818dcf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a4bc84ef_88f4_4ebb_acd5_fe1fb7f5caea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_08d67c32_6618_4af4_b03b_a719533c15c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6e27cece_d681_42ab_8c70_3e3ac2c0dc70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_52781d91_de07_423d_beff_2b002e6d047e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6e27cece_d681_42ab_8c70_3e3ac2c0dc70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6e27cece_d681_42ab_8c70_3e3ac2c0dc70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d006e8b3_30f0_4f48_8276_76b00614eeb1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4afbb619_406d_4aa3_83a7_92f25a018814() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a4bc84ef_88f4_4ebb_acd5_fe1fb7f5caea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2357c037_5ead_496f_a5e0_8e7252d4fc00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a16ffdf2_40e9_40fe_acb2_4a7e7ef8d9d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f1658ff8_fe48_4503_8b1d_b422dfb4833d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b1023c67_4e7d_4f79_8a63_d82c8073268f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ec543f32_f7eb_4ebb_9145_edca0fbfd79f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_53a1d451_fb91_4256_a77c_5a2706239040() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6af9bb68_06c0_4344_992c_93d0a0a394c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b1023c67_4e7d_4f79_8a63_d82c8073268f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7de9f1e7_128b_4214_9f3e_58fc94d7bbba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_dfc1518e_d2e9_4cb6_b0a6_6a47f89d5a9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_52781d91_de07_423d_beff_2b002e6d047e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2bcbea49_a979_4922_a426_bb35fbf5b424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0f9585f1_08ff_4f94_945a_fe0590a4021e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_44f3daab_2618_4f7d_a1e1_4cc4d7496943() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_078e3710_c4e4_43bc_a461_b0aff00e709a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a8b72277_0cb2_4292_81fc_a58c42a1c05e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_80e20b12_24d5_42d8_9276_1705ac5b1caa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d10f114b_d414_4018_b937_d1a3750c84bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_67a12c0b_718d_4a8c_a5e0_36cde7c55f69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8d044b06_e471_4b16_ae49_85f12c5dadd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7b8da7a7_75ed_492d_8d40_ca26f9b282ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a16ffdf2_40e9_40fe_acb2_4a7e7ef8d9d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a028aa82_7394_4acb_a6eb_b6160716ef98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_67ea8c79_e2b2_4377_a94c_c2091710b911() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ee5583ec_9835_4514_84d5_7689766f1708() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_078e3710_c4e4_43bc_a461_b0aff00e709a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c570b8e4_ed00_4fc1_bc1a_a8ee5fbf8af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2357c037_5ead_496f_a5e0_8e7252d4fc00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_fc3986f7_05a9_441f_b221_1e2ba5913498() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2357c037_5ead_496f_a5e0_8e7252d4fc00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_add6814b_5262_422e_9bc6_8638ab7e3900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2bcbea49_a979_4922_a426_bb35fbf5b424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4dace84c_030d_4cdf_9f93_0d893c20d188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_87fc51d8_b3c0_4887_adab_19ddd1c933f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_078e3710_c4e4_43bc_a461_b0aff00e709a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e8ee06b3_ebf2_4595_ae3b_a1051ab4ee7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_079db9e6_23d8_4b1f_8610_8ef5a0f59cb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d10f114b_d414_4018_b937_d1a3750c84bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7de9f1e7_128b_4214_9f3e_58fc94d7bbba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_779f7fb7_3d1a_43f7_8630_60a7af9502f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2547ae5d_2a5c_4b6b_bcc5_818df37b3e6f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c570b8e4_ed00_4fc1_bc1a_a8ee5fbf8af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_67ea8c79_e2b2_4377_a94c_c2091710b911() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_87fc51d8_b3c0_4887_adab_19ddd1c933f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_69262561_38b3_4ecc_9f76_1a317ae52be4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ecd9b907_8531_430f_9039_aa6c5f34180e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4b7c55a0_d6ad_4961_a423_3bf13355daa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_365a5596_c738_45ae_8234_06773bef79ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f1658ff8_fe48_4503_8b1d_b422dfb4833d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_61780ce9_fd84_4586_968e_0d16e237846f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8a7ef81f_e06d_4dd2_ac18_2a0c6d610596() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_365a5596_c738_45ae_8234_06773bef79ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d006e8b3_30f0_4f48_8276_76b00614eeb1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a4bc84ef_88f4_4ebb_acd5_fe1fb7f5caea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a13b06dc_c809_4195_8842_11e61f288c69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7dec762a_6d30_4cf2_94bb_85eef4d24e6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_37867166_4b34_4f19_ab6f_72b36e289887() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_87fc51d8_b3c0_4887_adab_19ddd1c933f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b482b670_dbf6_40f5_b971_793a7352b3e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1415b14b_69b5_4046_87e7_c1c4d4db4552() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6f384ab1_e63a_4fa8_9d18_2ef449b8f231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2357c037_5ead_496f_a5e0_8e7252d4fc00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ec543f32_f7eb_4ebb_9145_edca0fbfd79f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f1658ff8_fe48_4503_8b1d_b422dfb4833d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_53a1d451_fb91_4256_a77c_5a2706239040() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_779f7fb7_3d1a_43f7_8630_60a7af9502f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_779f7fb7_3d1a_43f7_8630_60a7af9502f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_765cf7c1_0dc7_49a5_aa33_c60d3622377e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4afbb619_406d_4aa3_83a7_92f25a018814() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ecd9b907_8531_430f_9039_aa6c5f34180e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_4afbb619_406d_4aa3_83a7_92f25a018814() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_150f6998_b1dd_43ec_94a5_3dc97818dcf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ad37f7e0_0ef4_4e9b_9449_fbf81edc7afb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d006e8b3_30f0_4f48_8276_76b00614eeb1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f2c1fb15_e560_4adc_9af9_2d0bd33a8655() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_08d67c32_6618_4af4_b03b_a719533c15c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_936468a5_5e8d_46fb_98a3_12536a8fb876() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_4b7c55a0_d6ad_4961_a423_3bf13355daa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_44f3daab_2618_4f7d_a1e1_4cc4d7496943() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6af9bb68_06c0_4344_992c_93d0a0a394c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0ddc4d8d_59a0_4bd8_802e_735ba805a928() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6af9bb68_06c0_4344_992c_93d0a0a394c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_add6814b_5262_422e_9bc6_8638ab7e3900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ec543f32_f7eb_4ebb_9145_edca0fbfd79f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_92a0299d_a433_41b3_9130_cb778b0794d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_079db9e6_23d8_4b1f_8610_8ef5a0f59cb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f12d7d87_3412_4805_83cd_3469c5bb112e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4b7c55a0_d6ad_4961_a423_3bf13355daa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b343347f_2545_468a_bf3b_d2e280b73c08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2bcbea49_a979_4922_a426_bb35fbf5b424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7de9f1e7_128b_4214_9f3e_58fc94d7bbba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ee5583ec_9835_4514_84d5_7689766f1708() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_dfc1518e_d2e9_4cb6_b0a6_6a47f89d5a9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_52781d91_de07_423d_beff_2b002e6d047e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_06a926ff_094d_4c93_9eae_938391ab1067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_078e3710_c4e4_43bc_a461_b0aff00e709a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4dace84c_030d_4cdf_9f93_0d893c20d188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e8ee06b3_ebf2_4595_ae3b_a1051ab4ee7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_db487a60_b633_440e_ab06_43a08addb666() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_89eb3cbb_fdd2_422c_ab69_9c7702fb9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a8b72277_0cb2_4292_81fc_a58c42a1c05e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_12838c1b_0743_46ac_992e_fc73a82c1d84() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a3abe08e_126c_47d9_8f4a_f6a08e826e69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ecd9b907_8531_430f_9039_aa6c5f34180e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ec543f32_f7eb_4ebb_9145_edca0fbfd79f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b1023c67_4e7d_4f79_8a63_d82c8073268f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2547ae5d_2a5c_4b6b_bcc5_818df37b3e6f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6e27cece_d681_42ab_8c70_3e3ac2c0dc70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b1023c67_4e7d_4f79_8a63_d82c8073268f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1415b14b_69b5_4046_87e7_c1c4d4db4552() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ab5920b7_fd18_4626_9deb_cee39fc47b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7272d946_ec2e_48a7_b252_b0f28d3f342c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ee5583ec_9835_4514_84d5_7689766f1708() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_93df2116_2187_4a6f_b2de_bfb84885eb7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_936468a5_5e8d_46fb_98a3_12536a8fb876() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8a7ef81f_e06d_4dd2_ac18_2a0c6d610596() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_12838c1b_0743_46ac_992e_fc73a82c1d84() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ee5583ec_9835_4514_84d5_7689766f1708() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_152f5c28_137d_45ec_b81b_35b3191ec1ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a4bc84ef_88f4_4ebb_acd5_fe1fb7f5caea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_25eee561_30f9_4f93_ab15_adb2e873faee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_69161122_b2cf_43f4_943f_609a3cdf8027() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0f9585f1_08ff_4f94_945a_fe0590a4021e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4afbb619_406d_4aa3_83a7_92f25a018814() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c570b8e4_ed00_4fc1_bc1a_a8ee5fbf8af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_765cf7c1_0dc7_49a5_aa33_c60d3622377e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_92a0299d_a433_41b3_9130_cb778b0794d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_02b8c3e1_e685_4826_88f0_8dda145d43e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_53a1d451_fb91_4256_a77c_5a2706239040() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_61780ce9_fd84_4586_968e_0d16e237846f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bea100e7_c5a1_4ec5_a029_5fdc8037f32d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c1779eb6_8853_4157_85c3_b6e056501021() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_67a12c0b_718d_4a8c_a5e0_36cde7c55f69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ee5583ec_9835_4514_84d5_7689766f1708() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_67a12c0b_718d_4a8c_a5e0_36cde7c55f69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a750a7c0_0a19_44bd_87a4_89e42e0b70d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a16ffdf2_40e9_40fe_acb2_4a7e7ef8d9d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_87fc51d8_b3c0_4887_adab_19ddd1c933f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_02b8c3e1_e685_4826_88f0_8dda145d43e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_028f94e9_e323_40d2_87b6_b15b9b9c4028() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2547ae5d_2a5c_4b6b_bcc5_818df37b3e6f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2d3dcd51_0e06_4bc7_85e5_e9377a81c1e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9dcbbbab_bdfb_4177_a766_6fbe3691502b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_92a0299d_a433_41b3_9130_cb778b0794d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8a38911e_ad87_43de_8a0d_92a2ce6699e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2d3dcd51_0e06_4bc7_85e5_e9377a81c1e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_779f7fb7_3d1a_43f7_8630_60a7af9502f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f6b1b8e3_c71e_403e_b819_3be4ef222d41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_079db9e6_23d8_4b1f_8610_8ef5a0f59cb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_078e3710_c4e4_43bc_a461_b0aff00e709a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_89eb3cbb_fdd2_422c_ab69_9c7702fb9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2357c037_5ead_496f_a5e0_8e7252d4fc00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5ebe26ed_95b9_4477_9a9b_cd17e3edb050() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0ddc4d8d_59a0_4bd8_802e_735ba805a928() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_821d66b9_5392_48fa_91d3_cd1b7d18d8e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_dfc1518e_d2e9_4cb6_b0a6_6a47f89d5a9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_986ca165_ec7c_4d67_aac0_d4410f48c4a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3734c845_3bdc_44ea_90e2_56f45976e486() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ab5920b7_fd18_4626_9deb_cee39fc47b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7dec762a_6d30_4cf2_94bb_85eef4d24e6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8d044b06_e471_4b16_ae49_85f12c5dadd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_50583845_1f5d_4839_937a_0bbec00b5e23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_db487a60_b633_440e_ab06_43a08addb666() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_079db9e6_23d8_4b1f_8610_8ef5a0f59cb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_079db9e6_23d8_4b1f_8610_8ef5a0f59cb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ad37f7e0_0ef4_4e9b_9449_fbf81edc7afb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2bcbea49_a979_4922_a426_bb35fbf5b424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_37867166_4b34_4f19_ab6f_72b36e289887() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a028aa82_7394_4acb_a6eb_b6160716ef98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f2c1fb15_e560_4adc_9af9_2d0bd33a8655() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d10f114b_d414_4018_b937_d1a3750c84bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4dace84c_030d_4cdf_9f93_0d893c20d188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_715f8ee2_da08_4c85_9a74_5b6f222f3ea9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_865ccb8e_fe76_4174_aa69_e08723b468eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_44f3daab_2618_4f7d_a1e1_4cc4d7496943() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e8ee06b3_ebf2_4595_ae3b_a1051ab4ee7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_08d67c32_6618_4af4_b03b_a719533c15c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0ddc4d8d_59a0_4bd8_802e_735ba805a928() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_112747b0_445d_4971_b7e0_f4c1e5ecb6a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_986ca165_ec7c_4d67_aac0_d4410f48c4a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a028aa82_7394_4acb_a6eb_b6160716ef98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_37867166_4b34_4f19_ab6f_72b36e289887() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_bbfc43d0_ccec_4e5f_af00_30ca588a349a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_08d67c32_6618_4af4_b03b_a719533c15c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_13cfed3f_208a_46f1_acc6_95c3ada2b7d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b22b919a_0318_46be_885a_613f2c08245a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2d3dcd51_0e06_4bc7_85e5_e9377a81c1e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_67ea8c79_e2b2_4377_a94c_c2091710b911() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_78131bf9_74a4_4e32_ba32_8c44366f9cdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f12d7d87_3412_4805_83cd_3469c5bb112e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1baa379c_5d2c_4666_aa24_33b1fe77dba9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a3abe08e_126c_47d9_8f4a_f6a08e826e69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_93df2116_2187_4a6f_b2de_bfb84885eb7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ad37f7e0_0ef4_4e9b_9449_fbf81edc7afb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a13b06dc_c809_4195_8842_11e61f288c69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_db487a60_b633_440e_ab06_43a08addb666() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_986ca165_ec7c_4d67_aac0_d4410f48c4a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_64f26adb_45d0_4080_88b5_d050c60d24b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0bcd1122_7e43_4f2a_90d1_acd5cc9db1a2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4dace84c_030d_4cdf_9f93_0d893c20d188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6af9bb68_06c0_4344_992c_93d0a0a394c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a3eb75e7_81d4_40f2_8812_c3ba92d15466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_53a1d451_fb91_4256_a77c_5a2706239040() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_cb961eeb_2fce_4269_8fe7_884ab96e4b47() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_add6814b_5262_422e_9bc6_8638ab7e3900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9b0e251a_457b_4feb_aa6e_c826376b326d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b22b919a_0318_46be_885a_613f2c08245a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_73467cde_7d4b_47d1_af0a_b170dcfaaaaf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b2c49153_97f4_4518_a3ca_0f6e2f9bef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d3082217_c75d_40f2_a28f_4db0d3465562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d006e8b3_30f0_4f48_8276_76b00614eeb1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2117a1ed_743b_4308_8904_406b266955d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_905ec9d7_6e12_4b12_ba54_5f38235b1327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_64f26adb_45d0_4080_88b5_d050c60d24b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9722f9c5_d3a6_4ae3_a720_c15a808289f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_779f7fb7_3d1a_43f7_8630_60a7af9502f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_cd4417f7_9346_4f66_a819_a68f9bef42e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f2c1fb15_e560_4adc_9af9_2d0bd33a8655() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b343347f_2545_468a_bf3b_d2e280b73c08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ff12f57d_e2c1_44de_9a0b_c6b350ceb916() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2bcbea49_a979_4922_a426_bb35fbf5b424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_24ebf63d_ddee_4f09_9863_84a72a13ea6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_52781d91_de07_423d_beff_2b002e6d047e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4e7a6dfd_040d_4a53_acd6_168d5ecdf516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_44f3daab_2618_4f7d_a1e1_4cc4d7496943() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ab5920b7_fd18_4626_9deb_cee39fc47b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a4bc84ef_88f4_4ebb_acd5_fe1fb7f5caea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_67ea8c79_e2b2_4377_a94c_c2091710b911() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_765cf7c1_0dc7_49a5_aa33_c60d3622377e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a09f8e62_01dc_45d0_96b3_3d4f142bd154() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1b1c8339_52eb_4700_9d6a_6d0594a3571a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_db487a60_b633_440e_ab06_43a08addb666() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_078e3710_c4e4_43bc_a461_b0aff00e709a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_02b8c3e1_e685_4826_88f0_8dda145d43e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d1ebb39f_7d23_4b18_82af_75b34c49fbeb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_43d2e887_8b93_4ec3_8021_50ac1d859840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_09698616_3c46_45b4_9eb2_7a3bc61b1431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3063fc80_bfc6_4ae6_9d42_8a66c7b29618() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a028aa82_7394_4acb_a6eb_b6160716ef98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0f9585f1_08ff_4f94_945a_fe0590a4021e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a16ffdf2_40e9_40fe_acb2_4a7e7ef8d9d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3f17e782_ee1d_4c95_8401_21e29905ba00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1664f256_e001_4ee7_aa33_dbfb898228ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_37867166_4b34_4f19_ab6f_72b36e289887() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0f9585f1_08ff_4f94_945a_fe0590a4021e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_43c1f906_13af_4885_88bd_03dbeef65030() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_25eee561_30f9_4f93_ab15_adb2e873faee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_069c9256_f167_4f60_afe5_a40076017788() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2310d35a_6c48_44c3_8ea5_f19c7adf373c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5ebe26ed_95b9_4477_9a9b_cd17e3edb050() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f415d419_c6cc_4e73_be10_dc3dc209ea55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_936d8a0c_b9c3_4c34_a18f_489f8cd9f3ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6a175809_3a70_45fc_b958_6eb33560fc19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_622a6556_85ce_40b6_8447_736d95f72212() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_44f3daab_2618_4f7d_a1e1_4cc4d7496943() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5ebe26ed_95b9_4477_9a9b_cd17e3edb050() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_74df4f35_b608_4196_8ffc_71d1b622c7ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e8753c90_81aa_4571_8146_92c085f0f095() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_97145be2_a955_4388_a47b_d678f9821e7a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_24ebf63d_ddee_4f09_9863_84a72a13ea6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_bea100e7_c5a1_4ec5_a029_5fdc8037f32d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_61d4ce3d_84fa_4bfd_abc0_569ccb2b41e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6f384ab1_e63a_4fa8_9d18_2ef449b8f231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_edbb6aa0_4421_4032_917f_d5bc7f91b5f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_08d67c32_6618_4af4_b03b_a719533c15c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b482b670_dbf6_40f5_b971_793a7352b3e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c70aa1a1_54a6_4880_a7e3_b2810768e727() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8a7ef81f_e06d_4dd2_ac18_2a0c6d610596() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_67ea8c79_e2b2_4377_a94c_c2091710b911() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c5466469_2dac_47d6_807c_7ab0cfa23845() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_84c95f06_bbab_4e74_a5e2_9a7551bbc9a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_20d73b84_8a16_4c5d_8955_9d1e1ab7a15a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9567a700_5d85_48b0_bdb3_0e8b9c1b26ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4b7c55a0_d6ad_4961_a423_3bf13355daa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e297722f_75cd_44f7_8c47_3a8c28e7d9bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e8ee06b3_ebf2_4595_ae3b_a1051ab4ee7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5e9941d6_32ce_4eff_88fe_450b50e2501c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3d005d91_30ce_468a_ac4c_0f4bcda09388() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_419d14a9_0e7e_4ef6_b3c0_edbe6804ce65() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f3bcc2a6_2278_436e_b1d6_ad60e452a344() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b9e84ae1_3d59_4011_985e_5b184a1fdd1b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d26f1010_58e2_4753_84e3_8a24da2c0c46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0ddc4d8d_59a0_4bd8_802e_735ba805a928() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_66a820df_a1df_42c5_8dc6_219686ebcf48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_24ebf63d_ddee_4f09_9863_84a72a13ea6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_12f38edb_cd3e_4b15_86a4_59434cf7378b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_db722dfd_f692_4eab_b2f0_832fb87776cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bc0565e7_93a6_46fd_a6c5_860b2b91f219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b02a7029_6bfd_4f57_8a0b_7ff772a10ac3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_029b0188_13a4_44e8_abd6_d9690f918870() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_27ef0a9c_ebdb_4860_97dd_65eba2fd2af5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7b8da7a7_75ed_492d_8d40_ca26f9b282ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7dec762a_6d30_4cf2_94bb_85eef4d24e6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2db54942_6a54_4c0d_8215_b7f32aa5d622() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a403582a_748d_48af_b378_8d5fdb8f970a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_772e65cf_88e1_4505_919e_971563223592() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cc9abce3_e9de_4c41_80b6_80e60196be41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6af9bb68_06c0_4344_992c_93d0a0a394c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a52510b2_0e7b_4767_8d51_3e9246e9c24b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d4ef84e8_883e_4321_af7b_5685b2e11114() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ac3cfe4d_cb7e_477f_976a_3045f06fb5c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c2c1f25d_f5a3_4926_8aca_90e78297ea91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_be63b61c_94b9_4d22_8cda_fe30fdd6e112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7725831f_d198_4988_b492_1b9137e8eed6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6e27cece_d681_42ab_8c70_3e3ac2c0dc70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f12d7d87_3412_4805_83cd_3469c5bb112e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_986ca165_ec7c_4d67_aac0_d4410f48c4a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0a34fb5f_df02_4649_9a4f_40ab48d41df6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_1d099e88_d921_49ac_999d_a635b35d983b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_150f6998_b1dd_43ec_94a5_3dc97818dcf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ab5920b7_fd18_4626_9deb_cee39fc47b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8d044b06_e471_4b16_ae49_85f12c5dadd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_9cea7118_881a_4bf8_bd8f_e0f038f14d17() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e4772397_730c_4726_b470_851c5de7c2bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_860a5f63_f8b3_468e_91a3_ebf73d0e67d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_48adbf6e_5056_46d3_ac51_39fa6311b6ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ab5920b7_fd18_4626_9deb_cee39fc47b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_db62b616_50b2_4a6a_9972_0710e4ccd515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6438592a_f2a2_4107_9824_83d1dddbfe6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4dace84c_030d_4cdf_9f93_0d893c20d188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4eee641b_5f8f_4610_bf19_8ada4fb0ba69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ab5920b7_fd18_4626_9deb_cee39fc47b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c24d1b2f_41bf_46f2_91da_f287634626bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7e9093b9_1788_4c19_943e_d1bf142575ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_376dc3dc_c3d8_4374_b514_314564b2815b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9cea7118_881a_4bf8_bd8f_e0f038f14d17() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_71a99ed6_aba0_457b_828a_d3477b6724c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_337ed215_f7af_40dd_a598_90398f141d71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6dc76c93_1e83_4cca_8d9e_8f940b3b1aa8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a19e91ab_b2bd_4537_b5f6_c15c99bad397() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a13b06dc_c809_4195_8842_11e61f288c69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9efc4bcb_3372_4330_82f3_95470413d85c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4f9c2654_1fde_4aa8_a62e_ba73212175a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5ac6d399_3086_42e9_8733_ba7e8aa37b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_facd3d1f_ad4b_48cc_92a8_b67248e9b52f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_543720a9_4b5a_4313_8757_06285533398f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1415b14b_69b5_4046_87e7_c1c4d4db4552() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0354eb94_b77c_4278_99c5_8b1322a53052() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bea100e7_c5a1_4ec5_a029_5fdc8037f32d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_37867166_4b34_4f19_ab6f_72b36e289887() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_80e20b12_24d5_42d8_9276_1705ac5b1caa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_2a4646bb_1a01_48ed_a570_044601857f13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a2ce63ba_5621_40d2_87a6_101fda142e0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_82e362b9_fa3a_43ca_9365_690968ba5df2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_87122e68_f1e5_42a1_89e1_f91fb69c10f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_71274137_bdac_4045_b4a0_27bbb2dc79ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_52b8ed67_e059_4f5d_a26f_f89f01f2a6d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2f2899d9_3dbf_480b_8f5c_baae1347e705() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_98cd2126_1505_418d_bf60_739b8255a416() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_792a5da9_9439_4f01_9234_95e93a6e5be9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_53a1cd5c_045c_4b68_8ce7_2f891c4fb3f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3552d1d2_8682_4ee5_87aa_1775848a6864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_882b3730_4f49_43c9_ac73_516f34601107() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4afbb619_406d_4aa3_83a7_92f25a018814() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1d9988cb_a0e2_4eb5_b4cd_28dbda9304f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_039fbd06_5d85_4c92_a269_a254f7eb5811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d6eafb94_6b6f_425a_acd3_5adc262eb039() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_98872767_074a_47e6_8d76_6cd8bf509b04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_80e20b12_24d5_42d8_9276_1705ac5b1caa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_92f8821c_853c_4d7d_87d6_18d4562ffb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8e89d5c2_59e3_4b76_ade0_4559c6e9c75f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_aa75ac61_273e_4457_b0c8_0d9fe8d81cab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f99535ad_0a14_4374_926f_306196aecdd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_697ba009_a2a2_4c14_9d4d_88ef4abfcee0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_12fe7ed0_0230_415c_a8ee_e77d5dd1f68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_365a5596_c738_45ae_8234_06773bef79ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4ad6b1c6_463b_4d86_8def_025f380dffe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_01465793_e941_4ec5_85fc_6e1a609e458a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f2d34f42_52a9_4c55_a9f2_8bcc918dc4be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8bdc4a6f_c4d5_415e_b38a_77d704510951() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_151c86b7_65da_4ef0_9546_bdbad2d3966a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ecd9b907_8531_430f_9039_aa6c5f34180e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e60b58ef_9b43_4e7b_851c_6ef42c9b39b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_22debc99_c80a_4c3e_a4e1_2ebb1de239c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_54de85cd_bdd2_4b26_a46c_d1962bd24f41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_15b55055_9c7a_438e_9804_4a19448f840a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1b0b51d2_6237_4bd5_a1da_f9bcebef212d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_936468a5_5e8d_46fb_98a3_12536a8fb876() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_83054b43_fc6d_4d16_a879_eb2298072323() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5e19b3cc_cae1_4de4_ac3f_c6c47509522f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_893711d1_4dd0_4349_bd2a_1a389fc20d69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_39f4963c_9e0f_485a_813f_d5e65be2eed1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_fcee5776_a8b3_465e_b3df_e007f57dfe64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_505a2596_7285_4587_ae3c_4557381b0b12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_730335a0_d20b_45f5_bc6e_417e4d84be3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_898001ed_a188_4973_a185_88708f798967() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_1adf779a_cf73_4e87_9576_455008a51947() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3d75777d_b375_4815_881b_41911b47d533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ae4a5a9e_8570_4f3c_9344_50616fd34b53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c370bdf2_9a18_4f12_9a04_b187c2a9d151() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b0e90681_f311_41c5_b637_513ae06e8208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_30651960_f7a9_49b3_9bd7_80b747a72e6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_65b0bb61_d9e2_42f8_9075_443900e1a2a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_598d637b_d8d4_4ea9_814c_2ff6f0197b38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b8ef597a_a879_41d9_87ee_59ed3589e2ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_66a652b8_2b9c_43a0_b477_d80e729f4560() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0100f77d_92ca_4332_a366_e6a2730e0a78() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9fa6128d_3186_4745_be10_02b09a2218f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_06a926ff_094d_4c93_9eae_938391ab1067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_52299805_1356_463b_aad6_72f2082c63eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4cbb3fe8_1be1_40a0_9008_81a1f1233324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_30e6360c_c988_4597_90ac_44055ed74841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_dfc1518e_d2e9_4cb6_b0a6_6a47f89d5a9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_463151b6_0de6_485a_a8da_4568ee8a973d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_86004e01_1a7a_4d04_974b_d2e256211442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e2268faa_ca11_4e8a_9141_0417267e1e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_303099c6_b72b_4b70_b097_1105c91c1ca6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_733bcf7b_e2d9_44d1_b5e2_d5cd62eb4c8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_344b2605_abd1_4e32_b29f_80db19bad126() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a2beba08_2821_4e43_9119_9a421e003a2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c81026df_7fb3_4625_ae5c_8774593e90fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c95fd64e_abea_42ba_9447_6aed8ab453fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_95df871a_ede8_4d6d_b243_9bfac6c43d19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6c25e631_8d02_401c_b0f1_5f15322c719c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_13cfed3f_208a_46f1_acc6_95c3ada2b7d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_80797112_717d_434a_b700_d8b42b34c799() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bdc89ea6_2375_45da_9b2e_1b2a191becdc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6da0eae5_41bc_4ad7_9582_2ff7d4aa9168() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8697e5b5_7412_42bb_8d68_7b94808ac423() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8bae0edf_b46b_4d51_9a19_0486ab631510() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f4828e4b_d40f_43a5_b9f4_71d76d9704e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d704d0c1_8043_4c72_a0cf_e5425d8c4fc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_9d328399_68b7_4f0a_bcc4_b1bb3b2be950() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0246e1cd_8d4b_449c_bb7e_1caa3510f779() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9cea7118_881a_4bf8_bd8f_e0f038f14d17() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_6f8b03ea_bda4_4362_bf71_7defa2452e73() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a6186f53_756d_4058_94c2_c69cee3425af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b4e83744_adf3_444e_b4fe_0a1620b39817() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_43f7c392_6d20_4d46_99ff_a22df7fa986c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_58a9fcb5_845f_4b00_b199_e4c05f6a322f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_65529b45_d63f_4948_b1fd_0cfac9b52528() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_583944dc_9b44_4f3d_bfd5_9672a5fe4129() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f10fcf72_577b_4d09_b091_4011ed2d3807() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_12f4a44e_78bc_4f8c_a98b_809b32622fd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_26170050_ef05_468b_a5d3_263a4b4d274c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3f0a5686_f163_4e38_ba9d_2ab00dad2d9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3f354d2b_9f85_4235_82bd_0e6addd4dec5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b22b919a_0318_46be_885a_613f2c08245a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_4298b174_d221_407e_99a5_1f84d93ef2d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_61780ce9_fd84_4586_968e_0d16e237846f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_50ebba57_74fb_4bb3_a8ba_8460c6e801ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_66722903_6870_4a75_abef_c75a57e187c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2116d4f4_c8ea_4157_88f6_91cff73e43a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4dace84c_030d_4cdf_9f93_0d893c20d188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_986ca165_ec7c_4d67_aac0_d4410f48c4a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_90f130f4_b456_42a8_b72e_8cefc1375afe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_eb9386e3_7ab0_49c4_9759_e9fd5fdd7269() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a00aec7f_8afe_4415_8357_47af0e05903f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a3abe08e_126c_47d9_8f4a_f6a08e826e69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_cdde43ff_42eb_4b51_b901_8b662a0897d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_038a71b8_1d1e_4606_965c_fa0f0e38f198() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6f7872de_f9e7_4974_809b_4772fc2fcfd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f12d7d87_3412_4805_83cd_3469c5bb112e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6318f86a_8e21_4180_97f5_d92114831971() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_61780ce9_fd84_4586_968e_0d16e237846f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c21debda_b5ef_4405_a651_ab28bbe5ad7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_fe63a9cb_4e4e_48a0_8057_9de51d8d37f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ba582715_2e14_46e6_ad1a_f021d74ec574() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8f7bcc6e_5fed_498e_b0d1_ece4165fd4d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_69262561_38b3_4ecc_9f76_1a317ae52be4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_04adb190_2354_49a7_a423_1ef3df490ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f3c299a7_fb1a_4ed9_b7fd_fec01fbf62a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bc5209f9_7f91_4267_b32c_e35ab23682f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bc433114_dd04_4803_8ab2_e5dd417518bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_31b7cdcb_e8c2_4506_9f18_a539580c330a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1415b14b_69b5_4046_87e7_c1c4d4db4552() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ec703ba3_2c39_4097_a903_9dd2421832d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_61823d44_865b_483e_891e_cc0ed0dc92d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f8ad7e39_a890_4f83_8807_8ffe037f6df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8ed56afa_fd1b_44ce_a070_680167b956f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4f46fb95_6f1c_4f09_9316_8c4ef5f0cd27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_05c7e711_5487_4bf5_a6b9_41369efe9af2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7dec762a_6d30_4cf2_94bb_85eef4d24e6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_625b8525_5929_4758_b819_915f7e3180f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7dec762a_6d30_4cf2_94bb_85eef4d24e6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b5f835e7_ffcb_4f26_ada0_f07e1c77aba7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_336fad06_e269_4d16_9d0d_4bae2feb6011() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f12d7d87_3412_4805_83cd_3469c5bb112e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c667437f_da52_42f4_adf1_dacd1c8fdf79() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e6879f8d_fc4d_4e32_9d50_9a81c8a3353e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_98d0db7a_a6aa_4997_a255_147b061eb4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_3a62da77_5ee8_4873_85a0_091b43e74d89() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_89a76ed5_ba62_4462_9cca_b3dcbb6bfc61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1ce7eb4e_4995_453d_bcc6_f2f27a709829() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_374f22a8_51b6_4812_8b78_2a3218b04274() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_aa9c5011_4a24_4d04_8d7b_bfbab28a5217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0cea0b96_c29e_460b_8604_eeefcbae41dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3ec2ec3e_e27c_4666_9ae9_072f02c05381() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b7834a7b_dc99_4653_a181_e1c8307f513a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_81b6003d_22da_426a_a0dd_f2e97112f56c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7f75eb15_2d11_48f3_9b1b_011b688f562b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_5a92d311_83fd_464d_887a_e7be610beeca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_08d67c32_6618_4af4_b03b_a719533c15c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_656feb42_156f_4c9a_bf6b_02df31243e32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ce9c4bb5_6b1b_435d_a10d_b557c60b22a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6d65f0a5_8afb_48d8_9fa3_bd79b7ee63f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ba7cdd77_5dd2_4afe_9b91_1e93a1507cb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_65069a2c_f9db_43a8_aa32_5b063aca73c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_413db8db_33f9_45fd_9f4b_1688e9b7b219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f4fa74cd_eb7c_40bf_8b88_c6cb84acbae0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a07d3a36_984d_4ed0_b449_784269e0de72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fdfd1387_817f_4052_9e94_d1e1c8c0245d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e92b90ec_aa05_4a62_a752_12b21b9099b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_fd53d581_6e13_47b9_967b_16ad532535c9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_90dc306e_79d2_4bd0_8518_3d776b0b60bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_66b91eba_5691_477a_8316_1c01a99c9008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6f384ab1_e63a_4fa8_9d18_2ef449b8f231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_df5176e0_56e4_4700_8586_8c294a272572() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_712073b4_9b65_4c61_8e2f_a07ed9fab48a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5bfc7b2c_780f_4a05_b0b7_8e1bc65926b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3a425780_a41b_4728_a10f_800ff6b8abc2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0a43ce51_0765_42ba_a1ea_50b4f005b012() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_35bafdc6_e320_44ec_a7d3_f2e5ea9f2715() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fc3986f7_05a9_441f_b221_1e2ba5913498() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7521f2b7_86f5_43d6_a243_44b74b8ad4ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_b343347f_2545_468a_bf3b_d2e280b73c08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a3d474ba_815f_4611_8b74_0cab95142426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_53750d4a_b551_49b7_b179_881236810846() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bdb1e4b2_9e20_4fc3_9910_9a6048b2eafd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_01b6434a_dfd1_4c2a_9132_094b9db1b71f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9991f2f3_8fee_4d97_b8cd_410093cf110c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0b354862_6c6f_41f1_bdf7_2271b3973888() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e0d6149b_54e4_4508_adc7_0a2964546e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0b1d6efb_9033_4b19_81b9_de23c05f37c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_9479ca46_7aba_4a4b_b1b6_05c9943e9804() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f325f2fa_68ab_4bbb_b4a6_178f739431ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d278c358_599d_4453_9159_0e97a29be44c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a8b72277_0cb2_4292_81fc_a58c42a1c05e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_61505e3c_7dd4_4a56_b860_dcfcf326867e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6b772837_1a55_462f_97bb_edfc8f9d30b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_55c74853_fd9a_42ce_9984_6908361bf87d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8a7ef81f_e06d_4dd2_ac18_2a0c6d610596() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_291daf73_6035_48c0_ac4b_9cd9c2483535() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5d2def83_8568_4d0e_97b0_6c768cc3449a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_69262561_38b3_4ecc_9f76_1a317ae52be4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_952c53bd_eeeb_4e2c_ba92_9c669a081bbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_dfc1518e_d2e9_4cb6_b0a6_6a47f89d5a9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_793164f8_f125_4348_b1a1_d429cfe47cc9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a3efcadf_a730_4c6f_894c_79b0f2528c60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2547ae5d_2a5c_4b6b_bcc5_818df37b3e6f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_54f51b33_e378_4a24_a3c7_1dd4fb8a4fd8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_44f3daab_2618_4f7d_a1e1_4cc4d7496943() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_63271a08_1f3d_402c_86b5_63b1dc4fefb8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a4bc84ef_88f4_4ebb_acd5_fe1fb7f5caea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f1658ff8_fe48_4503_8b1d_b422dfb4833d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_07c021d7_b802_4d23_aa3a_b1d16026071f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_908cda7d_f572_43b8_8676_3552f5e96140() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cb508ede_cc66_4467_b325_eddbadd476d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_20f8d656_210a_4a8f_a7f3_2630db83e048() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_acfd2077_19e0_4242_b07e_b787e90aceb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_aec17805_6061_41b8_902f_362f4ca7df66() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c570b8e4_ed00_4fc1_bc1a_a8ee5fbf8af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_26035283_814f_4024_adc9_7313c0662f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_462f9be3_8ed9_4142_90f6_5e2b4f220219() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2ec74da4_de63_4147_9ef0_619d06be54e1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_04cd21ea_7c0c_402a_901f_6dae0d05f01e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_30580838_cf25_49ff_bbf8_f23275eb7b7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7b8da7a7_75ed_492d_8d40_ca26f9b282ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_aec17805_6061_41b8_902f_362f4ca7df66() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ecd9b907_8531_430f_9039_aa6c5f34180e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1c2cfea5_847b_41d6_966d_67b0feb82d13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fc3986f7_05a9_441f_b221_1e2ba5913498() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_df07e9de_ead8_4f64_9bf9_33c25a909205() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ee0e6be0_e805_4e0c_b3b5_6a4f62ca8d8e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_55686724_dcd6_4014_9509_9e8bc361a3fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2fc5a61a_013e_4c3e_ab39_4cd2f73b53bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7272d946_ec2e_48a7_b252_b0f28d3f342c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ff71044d_8720_422a_9174_bd157deac481() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2a7c526d_13c9_4193_8325_c6eacf087c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3e43b0ac_8375_4614_8855_1f55030ea9e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ed994b00_773b_40f4_adf0_add5e2a12856() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a128aa56_9a7d_4765_8c19_dcb727c8d722() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5d6844b8_5644_481c_8e70_926b63222fe4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_afbd720c_5870_4f07_b740_2d7c59460e21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_dfba61fa_2b52_492d_94fb_90ac85015bd3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6ca214fd_6778_4a29_bd34_ef2b43df55a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ff7cdd14_cd66_46f7_9fd6_685e1f0a296d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_c73dd1da_04c8_4fa9_8d02_ac43441ac3ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_21e2e44a_f02d_4e0c_995d_e4ce3e8348f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7bbe5975_f088_4202_a250_4f68201a7b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_6d7e85b0_6d74_4d68_9688_221c7d840c97() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2a7233bd_9afe_4437_b767_264e921444ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_93c785a3_e710_4a54_bdf2_35892aacd47a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7de9f1e7_128b_4214_9f3e_58fc94d7bbba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c31d5a1b_76e4_4bb8_afc6_9a88f14aea4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_74a4ecbd_6f11_4da5_9ace_9cd9bc3e10d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e06c6902_9ec7_4b89_9cfa_ed1d579e40b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_17484ae6_0056_487c_91f9_73c0d88ad338() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_136dbcdd_3cfd_46c0_bb2f_cf3b437d7822() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f9771587_715b_40db_a0f4_ebb242a44eac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8dadc68d_75ba_4618_95df_06742f3be99a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_43197ca1_d079_4eb6_a783_b71c300d8017() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d2088995_5a93_4e76_9716_4c81205df1e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a653e7ed_8301_444e_be01_c79d452eaf13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ec168c6b_2c9f_4181_84c8_54eff9e26908() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_deedc5c4_5dad_45ae_a8f7_4d35fe7c3bc0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_13fbb865_8de6_4c0b_acf6_1d23c40813c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6d67587d_eb6e_4093_a43c_e9d4b6d953e2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f1658ceb_5b1f_4e06_a3b3_7e12ab8b870f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fac29a04_8a17_491d_a388_86e00c63263c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b62b5f97_a773_4978_b2f4_4ce6555dbc55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f9ecf679_8b06_4548_aa9c_215114dceed3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_60e435da_83af_4c99_a0f2_a66991c56ec0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0e918064_4f68_4668_b79d_7132c0c57cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7272d946_ec2e_48a7_b252_b0f28d3f342c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5a264c18_f260_4cb8_b324_c78776c84a38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f8142972_6220_417f_94a4_7d54febf534d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ca809c36_5243_40a1_80ed_762302bdd10c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a0d2d43d_d07f_43ca_9996_c704cf0bc236() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d976595b_2e40_4cde_a0c5_b9feb301a8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_eec025c9_662c_42a6_9c64_2371fcf9139b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0ee8b04b_1f4d_41b1_b24c_7e681e8723f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_9c832c15_5d8c_4f9f_8738_05c648a378e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a845010d_df25_4d78_a202_81e855b15aa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_cec251ee_15f9_4190_91fd_ead2c2529e1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_668744a4_c711_48ba_858c_ecfddeb77663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5af6ee9e_260e_4d06_a36a_beb3384b0816() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7c547ac4_12a7_47fc_9f80_20d2706e99c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d4160121_3c59_44f3_af3f_26cc6d4c689a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_94385e1a_7e70_4358_92bf_2f572029289e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_524776de_dde1_472f_abb5_24aed62c0b57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b482b670_dbf6_40f5_b971_793a7352b3e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7b8da7a7_75ed_492d_8d40_ca26f9b282ee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_8d551a39_8943_462f_ade8_75e0ab7dca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0dfb285c_45e8_4ba4_aadf_9516b7b6d333() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a94cdeb4_8f09_4779_8966_780306b472e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_df7c0a5f_011f_4fc5_9780_cc12bdc5cb58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d006e8b3_30f0_4f48_8276_76b00614eeb1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3c024930_e257_4e06_aefa_d0d234d4b939() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_31469b87_0d66_488b_bb8d_ff7a379cbee4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bb953748_f59d_463a_b756_cb6c39315170() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1e726867_d169_40ae_b323_0866a1ac395c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_06a926ff_094d_4c93_9eae_938391ab1067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_db4d2094_af60_44f1_9d66_51088c79da4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ae99ae08_c836_4d06_955b_29b0279bafb0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_f2c1fb15_e560_4adc_9af9_2d0bd33a8655() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_cde718fa_594a_4442_ac23_70dd96100a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2adf8d0c_1788_46e0_abaa_6e3e1e77410d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_c28ed349_5a16_4b05_8ffd_51a67190ab99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f2e9c1d0_5de1_4268_9ee3_fac5fed4d664() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_37d1e606_c1d0_422b_b1f2_a7afc300c192() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fa21db19_4be9_4051_922b_878f7f75a3aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_205dd65a_7c0c_40c0_89c9_64ccbaf9cfda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_44b75935_7a75_40dc_9ba2_995d4ab18c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_17c89d92_0850_4087_930c_845d3c3751c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_1dda3f4e_6229_47c1_a8cd_b822df14889e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_8e5da95d_ce62_439a_8b2c_d55c684cd35e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0c3dfcc1_17ae_4601_ae46_53aee4dde372() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fd583210_bdbc_4431_9eaa_ba705d1e5cfb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_2bd2d6fa_e245_4631_b5b3_98344b87e97f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_38a8e0a0_0f07_4310_9bea_8337e8313dec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b9ecc096_31a4_4100_ad49_196b65cacbd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_46f39d7e_179a_4442_bad3_494b1f9bd649() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5e0533ec_6f1c_4047_941a_c70b969bd18c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cdb8b3a0_84a1_44f5_b1be_7441328f7e30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_601cc59d_a296_4580_a1c7_f0c36fb65966() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_de1d9b75_e3b6_4dad_863b_54094338121b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_46715f92_6616_4020_b153_306226a1c608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_251e4d2c_cd74_472e_9f15_96ca35e42cd9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_727509e4_5882_4f6b_bba9_5ee205824c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_cb405f1c_edf4_4d38_b8dc_16e9e2ad8819() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e9364915_5492_45ab_959c_ab3fd2866426() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_627d4c9d_61da_4263_b206_70944b7e55ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_afcea089_063e_4bb2_867e_899258a7cd2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b05a530f_4730_44e7_b2f0_2252d970261f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e1acfd1d_8902_4e08_8482_a09c279ef17f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f303a09e_7ab9_4e70_9f36_0527780776a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_88bcdc85_2ef5_4f94_b3a5_c7787b155b67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_8f2b5c64_a414_4b6d_9f32_ff2dec58ee6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_125de983_589c_406c_bf82_f07f966dc94f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6f384ab1_e63a_4fa8_9d18_2ef449b8f231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_36caa30c_72d8_4e72_b83d_9ddea994f4e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_680e60e6_e446_4f99_a194_bc85e9b98a61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9cba3ab9_2d77_4b32_bae5_7a1c596efc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c4b9811a_80ed_43fa_975f_163593c2fcc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_34795fc2_0378_4b95_8bc1_9ba8d402d383() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_74e678b9_4a36_4a1e_86d8_77cb24ca219a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fc4908c6_f92f_4340_ba58_55eb9ccbe43a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e72d4a62_4476_4301_872f_e99abd42c8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2e3bd709_6d8a_4e3f_b39b_f104a8895901() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c4cfc186_9390_4631_bf82_c0f4032d0617() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_06c13fda_9fa2_4cfc_99fc_8e1ac1c9cd2a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_7f0ec25b_9d02_4347_a4ed_9225d5b184bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0d1fe8d8_b604_4e73_b627_a6af879008bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ae362238_4977_4c04_a2f7_ce62cd9fef14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_078cac8a_b906_4827_b61b_715574c110c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e5650516_e78b_4e55_b074_c786a5f34e11() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5d75f985_38dc_492a_b24e_33391248f6f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e720eb32_fa1c_4bb9_967b_f21dfc3ed7f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_8467e320_f382_4a1d_b0db_c86f1599751e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_9cea7118_881a_4bf8_bd8f_e0f038f14d17() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_832f0aa1_e27c_41d6_8d25_8b036a3742ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b22b919a_0318_46be_885a_613f2c08245a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e59b55aa_c1a8_4d72_bb43_aa102f69dc67() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a2d44fb5_a032_4e65_bd8e_dade7f53e332() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_63e08f5b_1b91_4623_917f_1b34b9e2bd56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_9bb85978_a6e1_452e_8784_11fc5c26f623() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e95096c0_0986_4a68_bbfc_c25fd7c02f3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_93df2116_2187_4a6f_b2de_bfb84885eb7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_484b4bd6_5784_4789_8bd1_11a320db5a13() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9fd0505c_030a_4b26_b3ce_e432ad0e5059() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b9804ea1_cb22_4383_bb4a_3d3abb5983ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f5773fb1_f831_4584_aeef_a398eb99252b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2b9afdf8_f464_4a53_a1b2_45843b0536a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a514b7f8_ec7c_4b2e_867a_a5b35dd76f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_1c549d92_c70b_44ed_b873_03d4051e936c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3fc9c23a_e8ed_48b2_8db9_9153cc9024be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_d3737c64_a8dc_4d6d_be2c_9cb4cf7a0ccc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4b0c71b5_c75a_42f9_8a9b_ea11fdea9563() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6503fc41_16ab_48a8_9fce_356963073526() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0f9585f1_08ff_4f94_945a_fe0590a4021e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_da011d74_de39_489b_be11_86b5ef9db2b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c36edcb1_0588_4d93_a0e2_43d740b31893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_77ea0461_105d_49f3_ac6f_f8e4372cfc0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_be263771_242d_4dc0_9eb7_6b1d8ffda142() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_00a6632a_8b22_49a4_ac18_27eca50a10ce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_99e9a100_2bf7_456b_9059_8e9ff6916d32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_82ce1033_af66_4598_a4e3_ea8c8ac35227() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_e34ebeef_76c5_4947_80a9_d4c7b98748d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ef58f25b_78ee_4193_ba14_ab08446e817f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_49a214af_ac07_4c07_ade1_8b446d76cebb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_378acd0d_daa3_418b_9493_61b1e48e0e57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_37151564_ee0b_462a_a7f5_bef6f8e7650f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_b1db7c3e_a754_4287_959f_e8fb88e22bae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8a3d82cf_0be3_4a71_875d_f6cb0ea48a0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_48ec71d4_b914_42c1_ae0d_0a5e26eeaa63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_c6ef6336_810b_4fbb_bfff_9aeed53fa796() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ba6bd0ec_310c_4efa_bf01_01b12037a53b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_98851061_6201_4b1a_9a93_ad53189e5eed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0dac3cc0_7e62_4953_bbf9_33e7d785b0ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ad9ff32d_3e81_4a54_8763_95cee5203cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d977bbf8_0f87_42b2_bbea_296fba4ee782() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_5ca1c692_ced9_4527_bbe7_ddfb3577369d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6f368102_59b0_49b7_ae6a_e6f1b5ba977b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a09ae4ce_4a59_48e4_aad1_f671ff7c0a19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_af3ee406_8d14_4cf6_b733_44c276681df5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7de26301_c70e_4203_83d9_3810810344e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_bf92c59b_e5ec_49d0_b5b0_90f0ce97e76e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8bea2a09_0954_41d7_93a0_18f424533d3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_fdab97e2_c2ae_422a_82b7_b52e008db91f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_7783f44b_1f8b_4a4f_80b8_11d6fbd45405() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_eac1de4c_283b_4c7a_96eb_75faa9673441() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_31fabc87_eaaa_48ec_8c1f_9984ec0308da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_dfb0e9b5_4a90_43c5_a47b_337ddf20510b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_1b7dfe3b_0319_41aa_b36d_a175b54af730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6702c4bd_f0ed_4443_a483_da1da9d91c03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_3a596f3e_a6f5_426e_825d_8715d1198abf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5bd04e86_aefc_4b49_beec_f8139533c96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b92d94d0_6eb3_48cc_9c60_28a0764e1767() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3d5219fe_b6de_4292_9bcc_bd5d102f866b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b35dc3c7_75c7_4db1_ad28_95d38f2c0a60() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2c8579b1_0aa9_405a_b22a_575f424fb0ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5624f5ae_dcab_47a0_80b6_dde575d7ae27() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_4a60b9f2_d8ac_41a3_b7e5_8ea351b42aba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5e43468f_7c65_49e3_9f03_e6aaa9d7e961() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_db88c518_3173_43dc_8548_14b499a2d93c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e614664c_d98f_4200_b5fa_efbf1c85e3a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b343347f_2545_468a_bf3b_d2e280b73c08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_0eda873e_3fc5_43e6_a823_5a35bdd91d81() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c6f5c2bc_e086_49b9_bf44_298959808c19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b94097dc_fb42_4f58_a6eb_f4196a0c1b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e0d954d8_2ab9_4cd0_9152_0f3c7d0d29c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_55c0065a_a4ee_44f0_aa57_443ad6624e82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0f9b9834_edf7_4b83_a757_75ef372625f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_53a63b7b_6287_4864_b081_40ddef1639a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_6f1cd5a3_fd1d_4b32_8df2_415a231dfe05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_ec6e4fdb_9d73_4063_8447_77f74dc49583() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_acb53bf3_682d_4c7d_b8d1_7a76d4cfa3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_69262561_38b3_4ecc_9f76_1a317ae52be4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6caca3c1_1e11_490d_9c8b_1fb2e73e2432() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e0bd4c9a_d73d_421c_8237_b5a88103f89f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2d404091_a13b_4dc1_8852_c09db3a04ab1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_166c534d_4c42_41bc_9192_622848ddf46c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_92a2a09d_7398_4373_9fe0_e6d2d084ae14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a1c27e57_1f26_486b_ac22_fd589fef0c6e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_71247c15_c53b_44a3_bac2_9347cb99f6fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_92a0299d_a433_41b3_9130_cb778b0794d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ef57ed82_9aa7_45cb_97f4_6ce0bec7d1c5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_53788e46_39cf_43bc_a9d9_66d65597dc99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f9c8af4d_3515_4eb3_8916_456c8f1eaa45() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_986ca165_ec7c_4d67_aac0_d4410f48c4a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9d9eeca4_4f0a_4089_9937_f92c5d94e87a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_37137055_8cfd_44e9_981d_19477f4f711e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5eb9f677_78a0_415f_adad_54ac7ad70430() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fffeed9f_b7b2_4efe_8682_59eec162b06f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_806b84ff_8d3b_45a0_bb2d_a2258eef6bba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7757da46_1ba7_4069_a717_4381b2643f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_04c5febd_a0c1_4d3f_bd09_8220ecab49f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_02019384_7c76_4980_95c4_eb5874ecd371() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_be615ea0_4d7b_4666_88b1_f152fd75fffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_32e5550e_56c2_4d3d_85d2_2cbe76670743() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_bba94aed_762a_45eb_9af6_4846089d1271() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4e06fbf6_c710_4d54_95eb_faa268d71ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c10cfd93_8465_4b3c_abc1_d89a1911941e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_445b1947_1e4a_4356_be2b_5e80fc0672a6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d813baf3_b4a6_4851_b301_90b33f44a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_f60efecc_6265_4a36_a20b_650855573eb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_6894500f_ea7e_4a55_981a_1b80046a749e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_407dc219_4a7c_4f2d_8875_57ea5b76d2c3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_6ce05de1_77b4_403f_8c64_69523bed4a63() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_908d39bd_f3c3_45f1_bf0d_0d077c5114d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_18adf341_2449_4d8f_a4ec_3064bc833d34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b563e88c_a911_4d40_9a26_e62cfc218db6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_512430c2_5fb3_4911_9902_b50bdda87c30() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_070d0b37_1627_48cd_84f6_9862f5220775() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6bdbacab_35ba_478c_9551_a2ffc4c0b74f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b2987338_4d69_4b8c_acf6_42b40b9e2a08() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_dd1adc11_e9c6_4564_954b_266caebee1da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_252a295a_73f7_4b27_97c6_35d4160d03db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_13cfed3f_208a_46f1_acc6_95c3ada2b7d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_edd88013_ec7a_4cba_9dc9_a09c456eabe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7806d606_0c3d_485c_a848_faf4366b0e55() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_21eeef45_77f0_4e8f_b3d3_cf0a8426578c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_157141bf_4d7e_4205_b9e5_04a83b7fd1ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_990d7e34_9abe_4e76_9d27_fdd5a63928f4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6ef8e6d3_a1c8_4ff1_b82e_fa736a3ad30a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_600e4b0b_4f05_4cbd_979e_601fbc326458() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bc3e2b51_10d7_4e7c_aed1_d51882bff744() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_4f13d230_f0b3_4857_8c10_87324557a701() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_dc6b85d6_5814_46d2_84cf_dd6687e13f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_87fc51d8_b3c0_4887_adab_19ddd1c933f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_40757ac0_4a1f_4aef_8a23_8a431691412d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_144ce5f8_02aa_42a9_86f2_8ad1da0f5a9b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_02639367_4142_4206_a4a0_b23f22ce074b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d18cc26c_0e09_46e4_8bc7_048b11381bb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_28871642_f772_4dbd_8463_2f1d388ee3b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_509a44d5_c91a_434a_8e54_fa70f0de6289() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e3a105cf_7a13_4fd7_886f_ab97a705ecc7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7272d946_ec2e_48a7_b252_b0f28d3f342c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_bc576b2b_4f52_4732_ad0a_dbe006e612bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_51c4fafe_986d_4d2b_85b8_ecc48bc328d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cfdc3902_2fcf_4e48_b662_15e5f758abaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_acee0ecf_cc09_44f8_8585_9d8045443d4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ad8e8d46_58ef_4320_b84d_7f0c9d65e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_caf3e822_817a_401f_bc26_855dd0ddd90b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_39d66770_9c69_4408_b757_e92e5a5fdeed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7437a4c2_70bc_4560_929d_b5a80820f619() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_480f016c_008c_4cef_bd7a_7f0fd9be8c93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_82d18a69_6415_4183_8a0a_854f0f113385() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_01cf4731_4597_4e0a_bbce_e67de8ec18ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_5ed13ff6_f637_431a_ba94_15d9421040cf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bdbd996f_8d3e_49a8_b26b_d69311c4392d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_e55e23eb_b03a_4318_a273_fc0e3d985f94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_4d1242b3_e802_4e88_b7bf_b8dff4850980() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d7eac437_eef9_4f7e_b3ff_61e1f275045f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9e339b90_a94b_410a_a21e_534289015678() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_22195067_daee_4006_9af0_559a867a2974() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_07fdb124_8733_4636_a860_a244d14e2730() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_d06e3026_207c_4865_ba12_e7b0b289f5b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_98a87302_5cba_424c_abeb_d204df631058() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_36df3ad1_bc64_4f21_a376_f6d82ec4182e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_42b9b3f4_5a99_4043_aeb8_94f1d9180b5b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cc0184d9_dc06_4fb8_887e_2ee9c4ca9cee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6f56b73a_4648_43f9_9b85_db51300fb675() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_18530fba_7319_4c3e_8034_4d543cbcc506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_491152b3_0ac9_4421_ad08_cd6c3eec2e14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a46086a3_2cd5_4bf5_8a38_1b0c3f0c9187() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_abb46f5c_bde9_4955_baff_901b4fe9e736() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_86e2540b_8ac1_41fc_bec1_a6b8e7e7248f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b7ebfcc7_a6f6_44bd_9076_f0f2826bec37() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_fc3986f7_05a9_441f_b221_1e2ba5913498() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_82cc2af2_d24f_4884_9326_9638bde77467() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_68a7d8a9_daba_4301_9226_a8baa57c0e1d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_99b84e6a_ad37_4a7b_9d20_de49303b6742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_79d543a1_0dfb_49f6_a90c_e6b1fb49662d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_270ceace_c573_47b8_9532_a46b1b8a249b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_dd62845a_ba17_4d5b_8da7_ff36d61150f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d66ec601_aea6_4ec4_a656_7391b96d2de9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_43351fdb_80d9_458c_8518_5f0d87e85864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_25eee561_30f9_4f93_ab15_adb2e873faee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1d849db0_3889_4234_948c_8bbdf9756dd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7035fccb_4cfc_4c91_81f6_d750414ebb35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5ed06818_36d5_477e_8dce_58e8ee01d33f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8af43ab9_d233_41d4_8c81_5c8481149651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_51a2a2d8_113a_4054_b9fe_a1b6e871f238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_759796cc_ffff_429a_a8a2_f4506fb0e600() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_7e19ae1c_e175_4393_a534_5c947d89b242() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_78734eb9_8bce_4bb2_8249_137f2f491df3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_6c0466f7_8496_4a9b_bff6_20f0cfe4655b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6b78c7d4_3c74_4473_bd98_47a1ac6b6cf0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_504e2286_1655_45a1_a902_08f619b4f7c6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f752c089_0aa3_42e2_a17d_0bf56f731cde() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_7eeeff32_a203_4d7b_aa93_595d5e0a9068() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8a7ef81f_e06d_4dd2_ac18_2a0c6d610596() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_585c3871_1f2a_488a_ac0d_da995eb2a443() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_a3abe08e_126c_47d9_8f4a_f6a08e826e69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a13b06dc_c809_4195_8842_11e61f288c69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_563bc404_80e1_4537_861f_3928d531fad1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_debe052f_4659_4755_9d07_d67558bc5e40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8fb14c5a_a1f5_49b8_ba34_fea0a3529bd1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_12838c1b_0743_46ac_992e_fc73a82c1d84() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4eb456ba_1273_4ee1_a24d_fe22a81a1d0e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2dd520e9_2d3d_4d9a_8a73_5f13bc971a3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_30243034_be03_4661_bfa9_7a07c6db99fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_aa5b754b_8d87_4eec_8e77_2e418ee03ed9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_77028b6d_33e8_431c_b898_e3a58513f152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b573a0dd_b8f8_43b4_ae62_3868077d57da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9c627513_3bf6_454a_b5ab_f8ae40a1a93a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_28f7f58a_bd8d_4bf8_8530_26ed7c08f41a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b4ebfbbb_95b1_4428_8d64_fbc458735d2f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e26e694c_0362_462c_b32b_ff02ca0276aa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_f1716dbe_c187_4526_8e8b_9c5119d8264a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_c826585a_ce34_4eba_8770_955948e32a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5db6c6e3_9f2d_4f01_97a7_fd740aa75c82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_27daa866_bc6f_4aaf_8d71_77849f5e7e7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f7d96d0c_933c_4c55_b68c_837321e09a09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e9f6008c_0ccc_489f_8bdf_6531aee5544a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6cd3c45c_8001_4d64_8a96_459df9c6df82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_d9332dc0_7d9a_4627_8837_5929f8ee9893() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_14f30f80_5fae_461a_bf0e_3efd247865c4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d3ff6000_c235_43cf_b6bf_9771158d9188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_55334b67_35d5_477d_82a8_3b944d627b46() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_17a365ea_326f_484c_952e_9a27c60c4886() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9b4c6188_d9f6_4231_a09a_44cd6ef31288() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_fb310075_32cb_4932_99ad_89959c7dbe2b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1073b3ef_6604_4329_82b7_580524d8199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_6a3d0cf4_370f_4626_8080_ecebd1911dcf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_914227f6_c41c_4169_b960_9240f17eb20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_ee5583ec_9835_4514_84d5_7689766f1708() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_566d9d8f_6173_43b4_85a6_1e613cc4f000() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_6a303074_3ac6_4d85_bd13_590a432a4f09() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_12246a71_50af_4032_8c29_dac0cf712369() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_1fe36974_0332_499c_b619_72f9ea7f4d02() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_851576b4_6e64_425a_92b4_046bc2ed6bb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_df8120ac_6ca7_4f85_a9e9_2eacdead199a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_097ab68a_118c_4ae6_9888_8b75f3e1c5e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e1e1961e_b127_4dbc_9ed2_ce64569a55ab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8d476287_3597_4e62_8a6b_c543dd16283a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_27cab7be_c09d_4109_b951_7362ae00091a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_83ae81e6_a8a6_4926_9ff2_aa65a6b182e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_4bf5536d_e455_4673_902e_1b7d34b08436() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_92cfbd44_4d28_4252_b1cd_694216de54ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f0118ee1_da9b_4828_a623_3cd49ff817b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_ec7a73ac_50fc_48c6_85b0_329b9c5b6781() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_834e0795_b167_4aec_9d28_58ef8f8f3b50() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_62d4d893_e1d4_4fbb_b1dd_4604b2530317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_71274137_bdac_4045_b4a0_27bbb2dc79ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_4f4f2d25_80f3_45b1_8405_a6f66df5bd20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_38127292_bfda_4183_9321_b6081371bc04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0fae436d_fbed_42f2_8f34_040b6f04ae52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_ee110789_135d_4958_a84a_6488a16aeb21() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_445716ba_f396_4400_8bb6_968a0491f375() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3d4d0b67_799d_45ec_878b_5f0696b91407() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e3d2e0f1_04a8_4f71_aafe_31f9d52132fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0f02137a_286c_4239_bfa5_62399366b2ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_f481426c_6272_43da_ada9_78c801edccd4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_bd1a867e_ca2e_4af6_b85d_3da1c057932f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_7c8232b9_c7d0_43e8_98e0_e6ae73bbe6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2d3c8e9d_2076_45e1_8f4c_6237ba4e7663() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7d4da4c8_92d4_4e13_894b_5bce746f8f49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c2245a73_8c28_455a_a99b_70d96d8c2ec6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c713337d_be97_4f25_9744_9baeabf0221e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5a6d5bfd_022e_488b_bfca_3131d186addc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_b40f2c7d_3449_4561_b82b_d7480be42d5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3661ff38_15dc_418b_9a4e_ced3ecf5d29e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ec7f20b6_2128_4910_9eb8_fcc9cbc2490f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0296e01c_5da7_49cc_a704_90da45f4af6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_77fa84cb_6b6e_49ce_8e21_9573003ab29c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0b731d5a_e1ef_40b8_a56f_37c3bfebdb0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_4afc37ef_982a_4ba7_b5dc_1e47cbce4aac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_323d1555_6ffc_4b2f_950e_bc7446c6ada9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_343d6194_b819_40e1_b119_7179d3cdc8d9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_758b4b28_903f_47b9_a8c4_614c2f925fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b3e74c71_2ba0_4c7d_a843_77a3acc05652() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_839a54ec_9982_468b_a830_a25e637f4415() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_d48436e8_02f9_40f9_a8f7_e8c60499e4b1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_f2af7157_822d_4973_8ff2_6b62297afd34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_62231bd8_3ad9_4007_863c_d96236140f68() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_75e769a6_2d8c_445c_b84d_c01a7473f2fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e294fec9_51fb_498e_bf82_7f0b7a777e5c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_5418b455_68bd_466e_a79e_3c6e599a0879() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5ebe26ed_95b9_4477_9a9b_cd17e3edb050() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a0fde311_c32c_455c_8c7c_99e5e547212f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_948888fe_527b_4dac_8eb8_1c73640ac1c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_38b756b1_c678_45a0_a074_4f486c64ec90() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_69305a13_43cd_4b98_9916_eb02362b1653() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e0afdbf4_a21e_4e3f_b703_2a217724d4ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_14b54322_b258_47e0_8c7a_40f6424c1ae3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_756ccf31_9fc3_4fb4_929c_9f95fa15520a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_839e0188_45ea_46c1_937b_311f92a461ae() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_df4c22e9_d146_4884_b6fe_c185e922a6b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_49dd2968_6d3e_4072_aa8e_f626fdb1e296() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_cc119683_6ff5_498c_b729_9712ae8fd9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_0088e82a_0412_4329_99ba_6bb9c115b08d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_06b414ab_478e_4e64_9870_a10fb7f5a20e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_12b84ec2_5c6a_4ded_9d96_2a796339a17d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2aceca58_ba39_43c8_94a2_efc85076bc0d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_40604f83_d6d8_4a2a_8001_aa6090ef9df7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_1b874780_2ab7_44a7_8a71_b7ee9f6147cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_f60205a1_4163_4692_b4c0_9e66529db60b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_fbe27fa6_2362_47e6_b9be_fee798c96fe1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_eed50691_eeda_4353_b3ee_fb764186d300() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_c30ae4d2_1c12_4611_9554_52baf979f09d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_f7063671_57b8_4423_8a1e_51fb7becef69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_01577edd_736c_4117_9e78_0b0aaaa18e8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1366c8b7_52e5_4ff1_ae20_bda40fb88208() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_0cc4e2d4_dbf4_4cd0_aa96_b40f91605499() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ae106c29_db57_4616_b879_5c26c183e41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_e72ce5bf_a4fd_4e89_a76d_ebc851b34892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_3cd5dbb2_8a91_4505_9433_8f8b380c6ae1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_07335657_6f01_44ab_b22f_8a6c587394e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ab7db8b5_7385_4be7_b27b_a3d41e6c484b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_2f3e9ee3_aed0_4bda_ae96_9c792e2f13e4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_622c5d02_484a_4b1b_b2d1_32b4a5d9403c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_8c937f71_ab2c_48d4_9120_304db204dd70() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_47236f76_7337_477e_9d73_c491fadc8c20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_4bbf32fc_3621_4ada_951b_43f5b6c282d2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_c7942536_c1be_403d_9720_db686a29accd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_75bfc95b_7a71_4c5c_ac4e_570d58948d94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_cbc2769f_b8bb_4980_ab8d_6511e64a91fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_6baa1ec4_8c1f_4465_b4da_bd2e5b3359d5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_fb001307_656a_41b5_8b8e_768e5c2dbf3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_152304a8_d022_4bd7_88f7_0ec123745f7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_25b7f80d_4432_46d9_8ff2_b838079f3322() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d84ba1f2_eebc_4bfa_8071_5c752a2dc6a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_565f9fc5_8760_4af4_bb80_b7bf086a8f00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4791fb9b_1a75_4751_b35e_5f5d9beff31f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_9496e1b3_2996_4f56_98bd_4f386b5b1b36() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7272d946_ec2e_48a7_b252_b0f28d3f342c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a768e8e7_fe26_41f8_83da_2b04bb77d25e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_ed8018fd_7748_4573_8da6_db4e23214524() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_9674389e_3df0_4e4c_9650_8192cc140651() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_ebbe8e22_7fc5_4948_83aa_a3fab53af424() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3ca6af9f_83e4_43ba_8d49_db9673c473fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_36f26d60_5246_43d5_849d_7deec4ccb350() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_668582bc_179c_40f3_8693_868e0bd68f05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_24417794_82d1_4989_bc6b_0e8e5b01b8cd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_0025178e_1895_4b96_99ec_33d4448a28b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_63fc8cae_4d01_41e6_a712_cad8b9aa5810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_28dea435_bb03_427a_ae78_f6b90941b811() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4fd403ed_589c_4a2d_822e_672599ddf2c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2357c037_5ead_496f_a5e0_8e7252d4fc00() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_31d44aff_1f33_4a9c_8097_b222a33b2eab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_b1f86cd3_dd28_4e45_8e46_cf01050c7863() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7dd8a170_6fd7_466a_8524_07e5ab9f41a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_433ce908_cd26_47eb_904a_dff8ee60efdb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_6e10f1fa_c88c_43c5_88e5_5c8214acc2e8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_26cf982b_2229_4811_ba20_7e5a2fdd42b9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_ec92b9f0_7fb9_47bf_9d68_e748150ffb82() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_25eee561_30f9_4f93_ab15_adb2e873faee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ef10527a_067f_4d1b_9444_6b231bb1fac7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5e82745a_e0db_42fc_b537_1274daaaa197() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_399927df_70a9_4719_9c27_cbc45bc786e6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_74698b37_58c2_422a_9a89_f39ae6250b34() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2552a148_ff16_40b4_bc4b_eb82cf06721e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_4aa2047c_7e7e_430a_9c59_79159c98e791() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7f971160_0d80_4862_976d_8db44c6ce222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_0aad2ee9_20e7_492c_9744_95d597fb0a92() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_0f820f5f_042a_4035_8569_09373a574732() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_96cc2d5e_4c80_48fd_97dc_7d8592450b8b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_df67688f_8053_4d1d_9072_73ea65a270e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9b9a23ff_a47f_4797_80e0_ae9508c2d62b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_09486d65_6df2_4fb2_a3ff_1545c54a96fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_b3521fd7_c358_4aba_b6a8_5c1200aee152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9ccca748_c4f6_4125_aad0_d9a1f304c14f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4e8a894f_8c1d_4bdd_9f8e_07f03d79e95a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_0ede7d05_904a_4804_a869_5789429c613f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_bdc1836b_6634_4f25_873d_183953bb1515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8e915db4_0a9c_426f_b4e7_565166228442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_fba3cb5e_0eb2_4bc8_ba41_71ecc151e184() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6378eadf_cb06_4c39_9c3f_79bd39cc5cdd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_91526a79_8a57_4fa2_8ec6_60dce01f9244() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d7a2f204_7813_4073_9afa_58568bceac03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_09d2c968_ea6c_4ab9_b181_72df333ddac6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_52781d91_de07_423d_beff_2b002e6d047e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_1cb60eb9_f15a_4c29_82f2_eaf9595c1532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3b366361_b873_49e7_8bca_df6bd3d39a5e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_057c2ebc_7be5_4b51_aad4_3d7f0544ceab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_1904d739_7f90_4e76_9faa_d69a9f42129d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_722e4075_7e49_4521_b2c6_bf6a06397f58() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_26f0411b_ac14_4f97_99c6_7383dbc294d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_06a926ff_094d_4c93_9eae_938391ab1067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_41b9696b_ca9b_488d_a18f_d186fb6310dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_248e5e5c_15fd_4f7d_ada2_5123009103f3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_12341a13_33c5_437c_895c_fab64a9c457f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cfa5023d_fbdc_4f4e_a67a_361ea320e0de() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3ee98f39_7f1f_4fa5_942e_e83eeecda6fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a3bdaa34_738b_4ca2_a974_d284282755a4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_282a8a6a_db73_49f0_a954_33e326a79e7e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_971a42b4_8fa2_44bf_ac9c_b7ca1c3a17cc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_8a63c926_5fa7_4e92_ab52_9f609f8a31dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_715c0716_4e05_45bd_8ee1_c01388b8318d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_8930d8ec_d80c_4811_808d_acd63f2ecb98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_025bee28_c0d5_4f7d_95a1_a5363c608bee() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_b957b71b_42c7_4018_b727_70e4f6dfda93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_140de755_46ad_4137_b180_9c5b209ffd38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_50fdc741_e31f_49f4_8005_5f1be4efc556() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a66a5d07_fd49_4a80_8616_58f27b03a0fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_23316b07_810e_46c5_a03c_135483cfc3a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_d0b6a621_a0f2_43ba_afaa_e12d58e046b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_ea1de3ea_f618_45fb_b2e8_1229d751b0c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bc120fa3_044c_4781_9ad9_5dfa4d496864() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e702de55_dc22_47cb_bc44_985130666d2c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3d639827_6daa_4b04_a7a4_3ae3b93bf742() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_c30bd5e3_ca9f_466a_894a_fa200e7c52e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b3fb4994_52ba_49e2_ac30_263681daf4d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e35725a8_5cbc_44e2_b52c_cb1359b85900() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5be012c5_b799_4c4c_8103_d147394b6ca7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a0ed3272_5f9b_4494_a0bd_6ee6748cd5ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_ba666ad5_dc7e_452e_b716_1b7de4177b4d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_def97360_e5c8_4a7f_a73d_833d3e463d05() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_5945190d_d137_4c89_b701_5ea0cfff4fa4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b68fb5b1_0c2c_4f63_9f03_eed72bd6bab9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_5fc2154a_ce9a_407a_84c2_12ee38cdb77a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_27e2a0ad_1325_439e_a7dd_53554ce886e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3e1fce64_8781_4603_80c0_340beb76604c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_06a926ff_094d_4c93_9eae_938391ab1067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_7c90a6a8_3ed9_479a_b0d4_ac043f960b1f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e93dd6f8_9dab_4c5b_8701_ff08c1edd8ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_142229da_4446_4346_986d_11e2ed23afa2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_882983e7_5cc4_4c3a_83eb_1ce2e4dca5af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_0a48bfc1_4588_44a2_8950_1da2e59e64d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_68832204_501b_43c4_a25f_93d93c9873ac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_c304d7f5_fbbe_4d6b_8011_a736e070a3a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a9e74543_126c_49ca_87b4_a86fd83cb217() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5a440b85_9522_475d_a655_1384716afc0c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_2f2c1d6b_a4b8_4347_b91a_a92be96c2f7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_695ba431_3b11_4c16_aa02_c839102356e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e93effca_ab1c_4ae5_b9b5_1044878e5dd6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_9f098dba_ee6b_484a_b1c1_f28ea132d70a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5aa91836_64ac_41bb_a881_e909386abba3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_9b365bc8_6264_4362_9caa_0ef5550aa27f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f7501a13_c472_4f0a_af87_08e348822d48() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_549f3af2_550f_409b_9b63_252c2eb90c38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_2a73aaf1_fec5_4a22_8f63_c33cc0a89ccf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_85416bd0_b043_40ae_b783_67e07d9c4190() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_3a54db21_8349_4147_bcbc_df7ff5c626e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_5a21e53f_5f58_405f_b82a_e37f96266404() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_aefc561c_c2c5_4a2b_ade3_bd6129d58a1c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_e68b1dda_62d8_4dfc_9a72_c478d9350aaa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7cd124d6_62bf_4c47_93bf_3bdbc100e4d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_525735e9_477b_49ba_afa9_568cc968b238() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e7e95a32_f907_4048_ac7d_61a1b893a34b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_82f0cb4a_e7e0_44db_a523_3a9edfc48324() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_e729fd45_5eb1_41e7_829b_df986e2c7a29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_30a9e1ca_08da_487a_a618_d73a53906a88() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_0ed90276_eab2_4493_8265_fd4a589cb138() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_277b3cd8_c0bf_4d0d_951d_f4687148cfb5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f90dadab_79e3_4452_8835_04853e11faa9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_4eae3e3c_d481_4b8d_a404_305db969d112() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_aeb38393_eac9_4a65_9e21_7bd44f6f17b3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_2faeb8a9_7ab7_4a30_aaad_9f00d31ced19() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2d3dcd51_0e06_4bc7_85e5_e9377a81c1e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_050b9f96_2b93_4b30_8385_92cddc6fdc38() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3d9bb7dd_99bf_4c81_876a_bd11c31a2917() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_4b517f37_993a_40e1_aeca_97627f139830() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c393b767_fc21_4432_bc89_0baac293707f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_67315911_bdf1_4b8f_9809_d9a5b3b46d99() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_741652c9_8aad_46c5_8abe_9c17bd64b359() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_6b0b0387_8a7c_43fc_b36a_827dbfce6d44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_b0951f46_6670_4393_89ab_90c5223099f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e584aedf_3b72_4aab_8067_4f345bd3344e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_345ce847_aa69_4cbb_8755_af90a5c2b516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_59431510_8799_45f8_b842_ecf7ac282075() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e7d5c615_210a_4462_bb03_24ced8d5a573() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2ca3c735_7912_4f1c_a8a1_b1ad8696085d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_418df6bd_3bed_499e_9175_6ae720153c7b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_428ba36d_8473_4bfa_a095_3db2159fbe56() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_3a718ad1_8785_4509_9109_7139b2a4e1d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_5f8cab0f_9071_484c_80d4_93ed56d6951c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_ed021e71_31a2_4433_ae0e_47e3c19940b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_d45ad3dd_60c9_40af_a306_644e5425d820() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_b24aea2b_0578_4294_9fa6_69fa3c02c506() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_321ecd78_1b49_4ace_8514_0eb6047c14c2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_89106e33_1e49_41d9_90aa_aaf2c6b3dc64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_24ebf63d_ddee_4f09_9863_84a72a13ea6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_4f59aee7_0ad8_4458_8496_6bc42b819179() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_90b202c1_7022_41ea_a3f4_9c8ac5c4e1b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_2bd77f60_f65f_4677_a475_c4be8dc92a4b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_f19c36ff_8d6d_4b84_987c_5a52f64dc47b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_44fb7bb9_58d9_425f_8346_8cf77f4f0bf4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7aa8dd2d_dac4_4ebd_a338_a4a02ac32733() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2690cd9e_94dc_45f6_af4e_a76babf0d810() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_7d3ffb40_4b91_47db_9574_e6715770ba23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_7020ba5a_0e26_433e_80f0_0c04ebf2c57e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_3d47ca07_ee08_4c46_861d_842b0d6701d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_273b81b4_f031_417e_8455_636abc496001() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_401ee46b_7af4_4c79_960f_4560f80a75b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_6b97338c_2d72_4f18_be0b_820835a8a38b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_65bf7275_9ba2_4026_8c75_fc7e37425702() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9fc70496_ff1a_43e8_a255_99d3287d37d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2c9d2a79_fe96_4370_9509_2d2e4d5f886b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7a6ac961_b0d7_4bfd_b7b7_03a61b1d0a6c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_6e55f84d_f165_4872_8190_098913908c39() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2cf2f58c_e172_4632_8a23_a6fac3a8d9be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d62687ba_b2a1_44a3_bb28_201652477997() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_60300190_9196_471a_8465_887d98f9826b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_632f6515_7d4f_487a_aeb0_c61eb19332b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_883f39fc_b802_4a4d_8380_9057a443dc03() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8bd48fa1_dc79_45db_9fdf_d4e635d59a93() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a9898f86_0345_4426_b2f5_d20427d63644() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_86ec2dba_46ca_4881_9e85_ed8f9782c71d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_635359d9_a4b4_45ec_aefb_ce766578216e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_2d3dcd51_0e06_4bc7_85e5_e9377a81c1e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_d021b1e7_9b39_451f_84a5_a217a1e6bce0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0a3ad005_60c1_4c70_b658_eaac6ccb732f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_79a6282f_f92d_43a4_b24f_41e2729e842d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6ccb6df4_d3cb_4d7b_a8fc_7a57f0c94b40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8c9c0fb9_65f0_4a98_b6fe_4095ed6883d3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_745780f7_06b1_4e6e_9e1a_232fc074e7a8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_6d805bb9_161e_40eb_a196_2f9e1027933e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f898665a_a012_4c17_9cf3_61c63aefa6ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_042639e4_8cb3_4e6a_b1b8_25cf947dc8fe() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8145ee4a_f4d5_4b18_95ac_4fd56db19516() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_12d93603_3f49_4a8f_a531_a61e0880d409() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_7f79baed_50d4_4d9d_a056_c5e83360426c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_0a93869e_1923_4fbc_8a2f_f69711df9f25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e80f511b_c924_4d5c_989b_86f472df03eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7ee0b5f1_af78_42a1_934e_b91fe6bf11fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_59fd9644_0732_4ec7_8948_cb34a7b22dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e4f19a98_8d91_4dce_bf40_b78374eadf7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_13fd7d86_a57d_455d_abbf_d5431b4396af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_04ef685c_31c7_40c2_9d0e_8231c6c9aa35() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_a447b12f_4c63_4fdd_86e6_5f142a6cea72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_831bfccd_9d48_460f_b4de_b0efa26b8d9a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_cb3a11e0_c859_49c5_be4f_723968ab2a75() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_bffadc3d_1e0f_4f96_9170_cb8aa9bb2067() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_427409fa_3a96_4580_8d88_81a2b53bb913() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_788c0dbf_fe7f_4ba9_aeec_83907062de04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_742d57c2_4bed_4b07_9d8a_d490f8d52578() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a8bae186_3a1b_4ad3_9624_a4526153b840() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_5c2051a5_718b_4b73_87a8_0da4713a9d22() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b8291933_4a43_4697_afbd_b630773bd9ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3d5a61df_797b_470f_b0ed_9a11376a5dd5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a06dc2b2_55f3_4331_bc8c_d8eb24c0f0ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e1b984c2_fa6f_42bb_9063_c6b2ce58069d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7dec762a_6d30_4cf2_94bb_85eef4d24e6d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_afe01b2f_7d09_483f_8695_7c24f6f5ca8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_1b27c0fe_3034_4047_bd24_540abd99a094() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_39d05009_c18c_4b2f_ba63_ecf6cb47b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1eefd6ae_6e47_474b_8ac4_09cc0ccac1af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_cb4b0513_98ad_4186_9316_82038a939532() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_bd58debc_ff28_4551_b446_79d125b75127() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a7994720_6a89_41b9_a66e_017f64d69628() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_3dde6a14_c407_4295_93d9_a1e6e0a4c920() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_295fdae2_1769_4aaf_84c6_885b5c0c4515() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_9cb98f1d_6795_44da_ba4f_666e5e0de96b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2de5ba4d_70a6_4c5e_9668_7fca58375fab() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_c9c9b36f_4410_4da8_a4a2_ade14b82e59c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_968a4850_0123_445b_8f55_1f5bbeafa6db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_52f6b40f_af1c_4bb0_96a4_e732fe9b1a85() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0d086e18_2170_4b43_a8f4_3fd1d251b956() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_832a4ced_4078_4390_a69a_74af9ea0372d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_b922b8a2_b014_4ae8_88bc_080c6d022e61() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_04a9624f_094e_4757_bd9a_8e590d12c66d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_bc8ea402_e680_42ea_80f3_3e14382d5686() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_c226e204_868d_419d_a432_dfc6fbe2b5f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_f6eb6a4b_13db_44ac_8863_e457f52e9c12() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_e5c9bf2a_0860_4f9a_82ea_bf4e6a96861b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_976bfd96_eaeb_4a9c_9dc0_460f4d8b9337() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_6c2eadb9_efbc_4ac8_bbbf_e21ce3f7d688() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e34aaa7c_0312_44a5_aebb_0f14f57ec70d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b0104619_2213_431a_a11d_791324773cbb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_c0621a1a_5e95_4d47_abae_c5c532207511() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_ced2fdd5_4080_402b_9a2c_e303c76aa978() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_eddfc5af_8eb7_4798_838d_60ba469eac51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_74fb26c9_3d95_4916_be92_1e55b20e2ffd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_90941bb1_2651_4b7b_ab34_28ebb0043a01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_38d2ce37_dbd3_488c_a0ef_aec600873a25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_29cca496_5037_45f1_b086_0d243f44956b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_325ab2eb_1ccf_4a2d_8c3c_68c6568ee7bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_14a5919c_a22a_4551_afd7_fc5e445e949a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_630d6695_56f3_4e05_9f86_ac337f24e3ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_f84b92cf_7dfb_4b63_86c8_2b265ac3ded3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f8ad514d_fab1_419d_939b_f7050243f7f2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_b32a1f78_e876_4ef8_8a76_e449e31d3b25() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9d60586f_6ed3_4288_9fd3_b476a49c9c7c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8317f38d_f44b_486d_9236_19c8de6fd697() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_7c619e7b_46c8_448a_b039_b314198f56f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2f7a9fe8_2fe8_4705_a2df_80dd9c69076d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_2545e52a_d4df_4ca1_9cac_1c112f3b51fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_e14f3145_092c_4da8_a1c4_fb94725f6442() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f6c93497_dd07_4ed4_b3d7_ae433ba589c1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_3b91c3f1_8404_4c17_ad86_4c7a386e966b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_1b1b8689_0f58_4048_9633_bd5030e8672b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_e22e3401_a5d3_48a4_9fe7_09ab907ace96() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_3cc85ad3_a22f_4aae_9baf_599303bf7a26() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_34036a92_9e25_4757_bd7e_41c1324eaad6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_a3abe08e_126c_47d9_8f4a_f6a08e826e69() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_d27b89cf_488f_402f_aede_8e1ec0491bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_31e68f9b_33e4_4947_bb99_0a362d1c7954() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_d5b47594_801a_4a92_ae53_76db681778b0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f2b0b8a3_63c1_4065_b040_2ddc33a26379() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_13627477_5ed2_4f80_b090_79135f419718() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_64daad4c_4fdc_40db_a06a_4dda8d37a832() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_0cfb6cdb_c61f_4b95_9fde_7fb7e5329fce() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_9f85d828_8f4c_4194_95fd_8996edd776a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_87c18d0e_bb74_4c4c_99f2_605aaa2d5310() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7a5d6667_fb12_4b0e_9f04_c5bbf8857072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_2d66a311_52f2_40ab_993b_679fff46f84a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_a1300d28_84d4_4791_8747_fab05def4bb3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_9b839112_8df5_4ca8_8444_93d502e1c34a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e41b9435_b5a9_4f8f_ae54_b8f6c1a42805() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_d04caa4e_3cc9_4ca7_b4e8_9737d5892ffa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_a5f960d5_aff2_497a_bbe1_c24c14b12b20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_eee08030_a743_403d_b27b_6c870d17bdf8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_3c50eb63_aeaa_4f13_858a_7fdf134e2c28() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_6828390d_e088_4dd5_af25_a6123952ceac() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_c69a71c3_f8b3_43e6_aa9b_f63607df5b41() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0892349d_5458_4a18_a2b1_81cf00ae28f0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5aa86882_6dcd_49a1_8222_b413c1cbe7bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_e5d29520_9b92_4e67_b0e0_a8e209091512() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_83243e94_54e5_4c48_b503_e6245160b6dd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_097fdc55_acc8_4161_b880_71eb56192a77() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_537a274f_1856_4a85_9a3d_639e4324f045() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_ad372616_c8eb_416c_a775_fb1007b1dddd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_ee642099_ebe5_4095_a385_13e6b5588de4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_70263d8f_8244_4447_bc68_a31376639072() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_d2f4ccb8_12d3_4320_a788_4ce9e1f6f4fd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_4e27756e_85d8_4634_98ff_b1d53f1b5e01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_c9ee4f2b_6099_4e3c_9a6c_c74758dfa3bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_365a5596_c738_45ae_8234_06773bef79ec() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_b820e6b3_393b_4a85_8c23_bb5182ff7201() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_06460d55_65a3_4fb4_982d_8b548d6c134f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_1c97e176_a24e_4041_8140_73ea25edd49c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_cd2fe732_ad54_4ab6_bff6_3c219793df86() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_8f8d3969_cad0_4559_b4a3_bbaf877d481f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_30021de5_9be9_4fd1_b208_e08877aee41f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b03defa2_3093_433b_ad13_bd7867461c4a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_939a1c22_ee81_46bd_8cb3_e33e1b730b07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_3cc63f4b_6ceb_4e28_862d_fd1938f2b19b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_ead62b24_bca8_4bc7_8485_83489d2197d6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_7907303b_7e7b_439f_9791_bfd443309a3e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1f18acbc_0bc2_4c2b_9ba9_2b77fea52b3a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_e19d6448_2c87_43c3_a409_d20d38d5d5f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f569a945_df00_4d07_9d04_bd86c0d5d8a5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_c650f77d_7057_4c19_b4ef_7bdd6957dd49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_f48de06b_8735_4b68_bf94_540e9f16ba4e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_25b88ccc_9e55_459c_be61_1a37b09747b6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_a5403d82_e9d6_4f68_8ade_e94adab5e109() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_d041984a_1ebe_4968_9ea8_8fee347f35f8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5567c46a_00c4_4992_b2b1_c122451e0931() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_e16a3699_423f_4fbb_bab1_2bda4c9ca4d1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_02affd85_72d0_4726_839d_d6f79baf35e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_506b524b_9af2_4629_91d5_75229db49953() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_08de0f42_728e_424d_bfc3_2f8067619533() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_b7c45b5f_159b_4aa7_b9e6_5fcaa1f2a999() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2d3dcd51_0e06_4bc7_85e5_e9377a81c1e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a1054165_df21_4bfb_ab80_811c9ecc9f0f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_95a760bc_d42b_4020_ab48_3a3b7a3f7b64() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_fa7c2140_655d_495a_a48e_9d0ef17832b7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_130f64a6_84f0_4c08_8d40_74a441576231() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3866e47b_46e6_40ac_86b1_23a46ce120ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_fec389c4_a23c_40a1_8eae_99ca189d1f71() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_99ed259b_c019_48d9_9ee3_965f92ce20ed() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_da9e2361_df90_418d_a1b5_7cd4f5eca1d4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_765cf7c1_0dc7_49a5_aa33_c60d3622377e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_2da8e335_5486_4580_ba37_11ec3bdc26db() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_ae5dde31_7a8a_4692_b2a9_1008b5136a57() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_eec82a63_f0ad_4ef6_83fe_8bc3414d353d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_4fc9a88f_9e0b_45d0_8e07_6e86065346e7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_daab16a3_63a7_4cb0_80ce_3c80f65d1ae6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7bc34204_2c2f_4f34_b2bd_6686763e1d8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_bbd14119_2dbc_41f3_9cdb_00eb21743c04() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_93df2116_2187_4a6f_b2de_bfb84885eb7d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_2fba3efc_101c_4478_b99e_44c829bf0825() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a6009818_f8dd_439a_817e_6c044b77e68d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_357c2143_fdf9_46d5_b7ca_6ce6a115b1ad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_0d78de29_afb8_4366_a1cd_42a0914aef62() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_7504d0fd_9401_4313_ba30_239ed03e0608() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_26960f43_7a32_4e6f_84d5_0f8115b30f32() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_32ad477b_c30b_4abb_a2c7_69adf2324157() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_f8533ad3_049b_464b_913d_8095aa501efa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_db776a45_24d3_4b21_bff4_0684ee83c02c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_81177b1a_cf84_46a7_8542_5a30b0eb9f9e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_8d079fd4_ac16_4a76_b093_07672cf12d2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_88d2bea9_daec_4dda_be7d_465e6046809d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_dee1f158_734a_40e0_a5a3_3e1567e5646e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_06fc115b_2adc_4247_aa72_0a7e687d5327() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_e095aa57_21c1_448f_929a_765f52ec2b0a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_bbb35f17_ea70_41f2_9d28_0302cc905d14() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_efcfc455_18aa_4001_8296_026c8a33f19c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_5964eb0b_907f_4334_950a_698c6a076008() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_988b7a9c_15a2_4ed9_8cb0_24d7c7d79872() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_db1df268_4124_4d8d_bf16_a8accf1081b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_937a2718_033d_4945_8d3a_305e6059de01() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_8fa72e3d_b408_45ac_83d8_ab42d130b808() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_d9c90d57_87f2_44ce_8faf_10a9b06e790a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_f1658ff8_fe48_4503_8b1d_b422dfb4833d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_80fae4fa_c8da_428e_9995_9ad49dd6357f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_ef199ffc_2eb1_41ee_b3fd_bb10b49c1f29() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_74cc39a4_5487_480f_a5d4_627ffa8023f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_28a94eff_3cc4_43c0_bd87_64e9de1811b4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0d6d7c15_2300_4278_8510_f40197a7dbb4() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_80e20b12_24d5_42d8_9276_1705ac5b1caa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_a306e8cf_5620_46d4_9c37_4104b3c150df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_08322eb3_db03_40d5_b0e1_617babe81562() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_5091690a_dae9_4bf8_a5e9_e81aa8f93faf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_115beae0_866d_4db5_95b7_fc778b30c3bd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_336e77f2_d6d8_40da_88dd_b7487e20a3b5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_63347a33_375b_4c14_bdcf_b42530f30f10() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_acb83324_3e86_45a7_bb10_5e303a40a9ca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_8be0c037_5ecc_486f_952a_ae52ed5fb712() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_869f6d6d_b86c_4a17_944c_146d4e2498ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_29aa8268_c15a_4487_9c43_ba1cc443ad4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_616fc046_9c6e_4806_a7ea_e6aa3d7658e3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_93283492_411c_4d6c_b2ce_b818c06b9e3b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_732ae439_81be_45be_a4c8_6f659df7f133() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_1198c1ba_72c6_4acd_ae66_fc15092d0dc8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_147d5a2c_713d_490a_a6c8_fe83884bad9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a3f77c5c_c6db_442c_a255_e0c56da9a188() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_2d282bff_7854_45e6_be71_979b442f2dca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_05d8d0e8_0cc6_4443_94d2_3e9f449e48fa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_db41db0d_fedf_41ba_aa84_2470a3f03f23() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_fae5e0db_7a75_4efe_a6dd_c026d6ab9ada() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_a1564300_0ee1_44ac_ae22_058b3adc8d07() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_017a9f70_9aed_4710_8346_697d25538bc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_883c20b5_6393_4080_aa5c_0d9e738d4a6a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_8cf1ff88_0990_4a46_8391_037b7c700a8d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_e4a1c421_0eb3_4dd2_835d_0a3e5daaf2be() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_71274137_bdac_4045_b4a0_27bbb2dc79ba() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_9cea7118_881a_4bf8_bd8f_e0f038f14d17() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_b18993f9_445c_4985_8edd_46624f0b2f8f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_03b72f21_6a67_4723_a6d8_13afe46b4a06() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_3c5acf0a_c83c_4108_a008_3d550f659358() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_0d64928b_9d54_411d_a51f_449a9a0c4662() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b858fdd3_2c11_4788_b7bb_c17b1a162f80() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e2a6f7d3_6a64_455f_9a74_61702922c580() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_dc9e817a_1e79_4761_977f_e0a251f4067d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_41f6f0e7_cffe_4545_b344_5b20e301b81b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_f2c1fb15_e560_4adc_9af9_2d0bd33a8655() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_a0899146_e487_44cd_aebf_1803c9020bd0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_dddf56f1_d463_4ea3_b113_a815592b1892() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d335806d_81cb_4fb3_b37e_45a384ddbee9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_d1db760f_effe_4050_b6c4_e5dec0e39b4c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_30d240a7_d299_4e06_ae30_dd6f7fbbecc6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_bc16629b_b44b_433b_8342_c796e9137adc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_83856ae2_2be6_43aa_bbc5_c5acb5a96fb9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_675e455b_8e03_42ac_9bfe_a559269f5307() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_a16ffdf2_40e9_40fe_acb2_4a7e7ef8d9d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_0d731c71_4a76_4d5e_b2e5_f49d6b6d8da1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_94c8532c_68c4_4209_a3a4_9eca3b729fb2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_34b7a344_f0fc_474b_90a1_ef9f782250df() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_b4a4f61a_8d6c_4036_a3d7_59c1bb7c3dda() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_4_e2109dbe_6e50_477e_9e50_dd2a387e47e0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_40cbe4db_0c53_46dc_8de6_15e050f940e9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_ec384c57_cc4c_4ac3_b8d9_289dccdec9b8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_38f12975_4b1b_4e58_b743_f03321cb66fc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_2826f2eb_9dd5_41ea_8d29_059c10bb5e94() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_b00be93c_d64e_485c_80f9_918eadfd8ce3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8710dadc_2bf6_4a53_9417_317dd5794317() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_27673cca_443a_4a91_ad6b_6d6207d7e1a3() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_17ae355b_ab79_422c_a4a4_7970e98abab5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d148716f_b6bb_4de1_bb04_4e3917ca23bc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_845ec150_3974_4224_86aa_95531de16ffb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_297a1f6b_6589_49ff_80ed_3530e099e1f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_9a4c7457_35bc_4fdd_b130_ae091f2ef8f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a4fa0135_e18a_44c1_81fa_fec2dc19fc53() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_5a0e9382_5cae_4f91_97c3_fd09dfe3c8f7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_468a593c_7d17_48f0_9e3a_7195ad626841() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_59b207ee_c8b5_49a6_9980_2ffe9153d152() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_936942ee_78f2_49f7_911b_7506ebc82cca() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_2a9fd9a4_0dbe_4783_9d69_afacc233486d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_5bf88d1d_693d_432b_bdcc_895c6366dbbd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_329add6a_1b0d_4793_beb3_20077a575356() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_012bc2bf_8bef_42cc_98b6_d6ef13135e44() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_5ab1babd_9277_488a_bdf5_45132a1262d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_4789f25c_e3c2_420a_9c57_ee4b8a88cd8a() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_b8343b01_ee01_46a2_a636_9c37781f8bad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_fa2e2e82_a518_4bb2_875b_495405066cad() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_7cb37007_653d_4363_800f_0a106373fbf9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_8f53e9b3_2073_45bd_ba4e_7b96fda769f1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_2ede0e6b_ac08_4267_9ab5_b8b06e7a6f52() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_efac7551_0894_4a15_b76f_d9f9761af71e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_16176dbe_4f5d_4bcd_bfd4_e7815ac08b91() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f3b53a53_98d6_4666_9db8_c579fca248ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_912dd4c8_cbe3_4ccd_b336_a1fbacc8a7f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_4afbb619_406d_4aa3_83a7_92f25a018814() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e21a9c87_ad69_4876_a7f9_344cfd7d6f40() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_10_a091ec0c_dfbf_44d8_97b3_8d4846370431() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_3_35e46d88_5c0d_487c_ad16_2aee86d8c7da() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_0bcaa607_96ed_47bf_84a3_eba184756251() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_0ddc4d8d_59a0_4bd8_802e_735ba805a928() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_e4974f92_60cf_44ef_b96c_0c24e2ae7c3c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_712f5d09_ae74_49b3_aace_eba3a82b40f5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_579eeea4_8698_4e7a_8883_7413d64d0b42() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6d4cc3d8_fd22_4e69_b5e2_063f86029fe8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_24594967_0c7e_4a12_b691_1ba1b6497380() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_7_fa1457a2_c221_4592_9241_1acc8c149bff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_d92ee8d1_094b_4ffd_9574_823e54b584b2() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_9_870d83d2_eff9_4d58_8732_6ccbf64a627c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_d88bf422_a600_4406_8878_34402f18c6c7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_2686a96d_635f_411a_8bdc_7de335aee778() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_e9f41782_3b2e_45c1_a670_b63920cf1a20() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_7c7d037f_cd81_422d_a749_d21196c20c72() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_d19ade81_ee40_49cb_8e35_671ac06126dc() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_86616aa6_1f8b_4922_a541_f6559ca036a9() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_996e0388_8e79_4268_a200_26500c846ccd() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_e8ee06b3_ebf2_4595_ae3b_a1051ab4ee7f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_bd2b8ad6_a0c7_4970_b188_2a42095365ff() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_0cdb6573_efcf_4492_8cf4_e0b35a8a6377() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_8d9ed0a7_0c72_4742_ad6d_5be2a4900c83() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_8dd9be9e_1d25_499c_9bc6_213692dee752() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_8f33f5f3_5210_4294_a434_913c6c03323c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_6_a9e93418_21f9_4a5a_964b_ea54fd90ebfa() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_a0091374_4a96_4a64_865d_c2579ecda4c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_043e1af5_3d27_472a_82a6_bf5ea8a19d98() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_a67bfa6f_91ab_46c7_9ca5_2ed5d61c05a1() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_b91a2952_b396_4b80_9961_92461237b9c0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_30f85541_2b7f_4b86_88ad_51dc675f605d() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_2_9a6322e4_7844_4414_900f_1601d4982087() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_0_e3ce3f77_2884_4f37_adbc_20f7e5bb43af() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_0_f0187c26_1972_4ecb_8f9f_fc41cd573f2e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)5l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_11_1d7415ff_15c1_479a_ac59_03c178516676() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_62aab602_003b_4b8c_815e_f56bc25549d0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3ef97786_f4a5_47f6_a25b_4e588ea2a9bf() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_3ab07129_415e_466f_80f7_adefdd5200bb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_3_8914944a_9be2_40f8_8554_2d140ce5846c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_ae9fbde9_08e4_4024_b97d_1d45054bc222() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_49d4da7a_f713_44d5_8a7a_383cc446658f() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_5_eaa71d0a_ff67_4ca5_b101_4f63418a6f9c() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_8_071dffed_8bc0_48dc_ab1b_a285bcfbb466() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_5_3481b833_a82f_475a_bc9b_115fe98018ea() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_1_374d0bd1_18d6_478b_85cf_f8bc2909e949() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_f72cd4c7_acb9_4bac_9bf2_9a18c8a917c8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_2_f81d37c9_8d27_448a_b146_ba20d5628753() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_6_7ddc5ac6_6bba_4616_b48d_564ad8ce9b6b() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList())));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_f01e3539_c96d_4daf_a992_2a848c646ad5() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_a2553f95_dfb8_4049_8bb5_9effa9a209f6() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_f88e71d6_ffe9_4687_9e8f_1dd768863160() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_12_019129be_c2da_4f06_b4d5_85259de8f3eb() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_277b8424_b80f_44c3_8d1d_5c55c7f12af7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_1_0509e1eb_773c_4439_8ef8_89bf36c75c49() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_10_24d51bad_0418_4075_9e84_a0afef618425() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_12_6dde0e20_fa36_45f3_afb0_64823aba4af8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_7_ae59524d_36af_4c1b_9d2a_81d000e315d8() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_1401d124_b4ef_44be_a98c_3ae101197105() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_9_00755ca0_6ec2_4501_8226_37859889894e() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)2l, (long)3l, (long)4l))));
    assertEquals(False, result);
}

    @Test
    public void test_isSorted_Problem_11_08d84c96_2cdc_44fe_b061_d776e2c59a51() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_4_f98a5ab8_3925_4210_ac68_1e68e11f78d7() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))));
    assertEquals(True, result);
}

    @Test
    public void test_isSorted_Problem_8_e675421e_c0af_4d7f_b297_a1046da3c6a0() {
    boolean result = isSorted((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l))));
    assertEquals(False, result);
}

}
