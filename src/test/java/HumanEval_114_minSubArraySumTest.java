import org.junit.Test;
import static org.junit.Assert.*;

public class HumanEval_114_minSubArraySumTest {

    @Test
    public void test_minSubArraySum_Problem_7_ac42f2b8_ff39_414c_96d3_aebeeeab1e0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_68187f42_6ba9_4e7c_b8c0_1a8dc8bfa41d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1b1a34d1_4385_4676_9335_90dc52649ba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f8f3c883_9133_493c_816e_18dd1b2d4ace() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_68187f42_6ba9_4e7c_b8c0_1a8dc8bfa41d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fe609b73_163c_4cb0_b6f0_aa018cc00987() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4a2e56ff_f54f_444c_b747_67393dc8926a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_75f7023a_0db9_4d63_a355_bf1c46ed54d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5b8bd7c4_3bb2_40f7_9b7a_34b2a66539a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cd25bae5_edfe_415d_975b_cb325be1f6c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ec965356_2494_4c29_b4d2_c0187d13b8c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0b9d849c_506a_4fdf_be6d_55375fd8c85b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1c772e9f_0125_4e78_a471_0fe117a22615() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8baf1d17_0824_40bb_b05a_b8b0faf76a04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f01f7f44_4170_42f2_977b_55cde635126a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1fdd1656_9665_443b_adcb_fdb7f3d93d2b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5b8bd7c4_3bb2_40f7_9b7a_34b2a66539a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1a259e38_58a2_43fd_893b_c29239df02cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bd7780c5_afe3_4aca_bf77_cde7695815e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_82063360_e60d_4a07_a515_eb41b6a0f706() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5b8bd7c4_3bb2_40f7_9b7a_34b2a66539a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_73f524e0_be24_4938_9e05_0fe2f7f0bfe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ef4d7f35_15dd_4c23_b20f_9083e482818f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e64b342_6e25_4159_b211_8cb91591be38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3063a798_3d53_404f_8170_50352fc73336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a5d899c5_cfa4_4219_83b2_9b939059df83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_51581e19_68ca_44fd_88b0_9cd47353fe07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_07fcc0fd_df46_4bfc_8a68_6f3b4a77bab8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_74b9f682_0bfe_42fb_bbdf_9d6c4ff5fb03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_68187f42_6ba9_4e7c_b8c0_1a8dc8bfa41d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1d449c29_660e_4203_bd61_3f05763213df() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1a6d159b_406b_41a1_9dc8_9a247b3ba4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_337463df_ee21_434a_bf4a_076a022a4446() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0db167ef_3894_444b_b1a7_579b45ffba74() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_72d74904_6e2f_481d_9a64_a6de44a7c5bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b944f5a3_cf1d_4a75_83b7_703175e29077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7214bb9e_5d2d_4806_97da_2e67d8604333() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1203dbc4_f7d1_49a9_a1aa_dffdb412564b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a6165876_67a3_48e2_8bd5_afc2a4a51149() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f4e1fde5_eec6_47b8_b72b_52bbc8296ff3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5e07fb5b_2726_4d48_94c6_f78477c6fea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6f4099a1_94d4_49f6_a995_e9ebbba423b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4e9eb1f6_73bc_41ef_92bc_1902efa2870b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_478b5f87_a177_4db3_bec2_e4c8cf808985() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f3d03205_8592_40b9_a5af_d2b0a43c551c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_68187f42_6ba9_4e7c_b8c0_1a8dc8bfa41d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ddf52d24_40d8_4dcd_bd02_546a0d51f524() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_478b5f87_a177_4db3_bec2_e4c8cf808985() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f85d3659_dcc8_4118_80ab_4907d1bb7331() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_daf949d0_3a04_4904_8028_07c2b99e0479() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c645d6a1_088b_428a_bcc9_cb86b8f335bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4378846f_3b51_4903_b376_42cc2a33ce5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2997af06_f2e2_4355_8454_ec28139a420b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_352815ac_a828_4d27_be3e_6ce8449fb8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_979acd88_05a6_4f37_86b5_670ed1e9f741() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a8706a6f_a461_4141_9c09_0ce0b8883d13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_06f8d0ed_6ad1_4a73_8509_8fe405c651e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b0bee4c7_03ea_42c4_99a8_5899e3139896() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c22feb3b_a22b_4606_9e09_a15e16ecb3ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7214bb9e_5d2d_4806_97da_2e67d8604333() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1a259e38_58a2_43fd_893b_c29239df02cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d137f5bc_54a8_446c_aaca_d827a6e77258() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_46d58a25_2ed6_4810_aca7_65d9a97645b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ce82dadf_4c53_491e_ba2d_8a7651109961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f4e1fde5_eec6_47b8_b72b_52bbc8296ff3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0cd52271_857d_4252_a15d_b28cdfae36a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d86074bc_57db_43e4_b084_209a16a47780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ff363f4f_975e_4b3a_876b_6ae613945e49() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_25f8148c_079f_414c_8617_f35444a02db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bc786e81_5ac8_4773_8738_f0d37b16c035() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f8e9511a_9825_4b81_b4c4_b2c6ef5ee55f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_587826fd_15f6_4131_bc88_8165b307bbe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1203dbc4_f7d1_49a9_a1aa_dffdb412564b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9a5c673f_3344_4188_8424_c436a94e24e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_aae256e9_24d5_4d0d_94ee_cf7e47ead4fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d35919e3_1c94_493c_ac9f_7f3971226166() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e5d2dd7e_28dd_42e2_baba_ced5bd9d162b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d116127b_8798_4d0e_8004_01f0d7bb4f9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3648021b_3a9b_409f_8d86_ec22b3ecf48a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_25f8148c_079f_414c_8617_f35444a02db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7ca97643_e3f9_4a98_a448_350f7d6007cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a348e51b_9cf0_4c59_842e_8814d0656474() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1b1a34d1_4385_4676_9335_90dc52649ba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_06f8d0ed_6ad1_4a73_8509_8fe405c651e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_75f7023a_0db9_4d63_a355_bf1c46ed54d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5a2cedd9_4511_4671_b156_675aa2c61557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_337463df_ee21_434a_bf4a_076a022a4446() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7a76fd14_45be_43ff_9662_a05586cae774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a7088fcd_c901_4a00_9cf4_a82fb6c50f43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1203dbc4_f7d1_49a9_a1aa_dffdb412564b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ac42f2b8_ff39_414c_96d3_aebeeeab1e0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0db167ef_3894_444b_b1a7_579b45ffba74() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f4e1fde5_eec6_47b8_b72b_52bbc8296ff3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_75195e87_d9db_4d02_bf76_38511d8822c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_83f0ce99_594c_4963_8cc3_434c1757670f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7b3a45f7_30e0_412e_bbdd_d2c4c51d1c17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f8f3c883_9133_493c_816e_18dd1b2d4ace() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e885cb3_99d9_4611_a4ff_c5bc9759cb29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d137f5bc_54a8_446c_aaca_d827a6e77258() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_352815ac_a828_4d27_be3e_6ce8449fb8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a5d899c5_cfa4_4219_83b2_9b939059df83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b01f03be_dcc3_4625_8f65_db905aa927ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8294ac6a_a43d_4b08_89dd_1d5710ee41ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0178b168_e24d_444d_b8c4_9ddeae144a66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6ab0b9c6_7ede_4b6c_b1d0_b6c3f602a7a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e069f3c3_e6d1_4686_81c7_7afe52a73f31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d537d9bd_7b68_4b6c_9c5d_85f4bacbea1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_34578e08_7c0c_4641_9fb4_7e7e72b7d5e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8214dce2_d281_4660_adb9_d008fade8f41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cccb5464_0e56_418f_ad78_93dd29b3ee62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f3704c1e_c7ec_4698_8e8d_6454f0847519() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cd25bae5_edfe_415d_975b_cb325be1f6c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5846d239_8028_45a9_80ce_0eb13ec62537() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5555d029_c820_4ab3_bea0_400441eb26ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a1159ae8_0e39_47fc_92a1_f6be0cabcc10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_06f8d0ed_6ad1_4a73_8509_8fe405c651e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1203dbc4_f7d1_49a9_a1aa_dffdb412564b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ef4d7f35_15dd_4c23_b20f_9083e482818f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1ccbdbb4_c304_4045_bf65_8ebfba5b80e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_43ab80d8_a777_4612_aac6_11f15fd6d931() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2df5049c_54a3_4247_bd0d_96120a8c4341() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a3b40587_49ca_4a33_a6e6_08e9a113f22e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f5695820_f6d9_46de_9e70_3f3d29ec110b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a7e4333d_a2ef_4676_9c92_186fc6ac713d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a6165876_67a3_48e2_8bd5_afc2a4a51149() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d04e8104_d028_41cf_af48_2d4b5e702cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a2d216a7_571d_4193_9db3_0ccce9ce92b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1a259e38_58a2_43fd_893b_c29239df02cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_49fc220d_7c95_4419_ab09_4f14578becc5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cbe55615_0ced_4716_be42_7220f32b5b39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ad64028d_f933_4b8c_8825_1792fd4cdc19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7c14b2af_54f0_4166_9a7a_4396d05dfa10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_83f0ce99_594c_4963_8cc3_434c1757670f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_34578e08_7c0c_4641_9fb4_7e7e72b7d5e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b944f5a3_cf1d_4a75_83b7_703175e29077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8e3a92ad_fe12_4175_bf8a_1118b489a64f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2df5049c_54a3_4247_bd0d_96120a8c4341() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6ab0b9c6_7ede_4b6c_b1d0_b6c3f602a7a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_221d9631_feb1_4bed_ac4c_5226c117685b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e7f042ce_a6da_4ed5_9df8_4579eafdd855() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e5d2dd7e_28dd_42e2_baba_ced5bd9d162b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e895ae7a_6a5b_4cdb_a79f_6f2df8b92989() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f3830faf_4270_4128_ad38_8afa70694443() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0f24174b_da2d_4c55_a35d_3616d07c2509() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f3d03205_8592_40b9_a5af_d2b0a43c551c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_73f524e0_be24_4938_9e05_0fe2f7f0bfe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_46d58a25_2ed6_4810_aca7_65d9a97645b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_337463df_ee21_434a_bf4a_076a022a4446() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5846d239_8028_45a9_80ce_0eb13ec62537() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f01f7f44_4170_42f2_977b_55cde635126a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cef30cdc_ecb8_401b_bc37_f8e60788a955() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e895ae7a_6a5b_4cdb_a79f_6f2df8b92989() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2997af06_f2e2_4355_8454_ec28139a420b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f85d3659_dcc8_4118_80ab_4907d1bb7331() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_25f8148c_079f_414c_8617_f35444a02db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bad7969f_be3d_4f53_a33d_004bceb25c0b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a348e51b_9cf0_4c59_842e_8814d0656474() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_779207c2_4818_4a43_a66b_3dc95aa3a8a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_779207c2_4818_4a43_a66b_3dc95aa3a8a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ec965356_2494_4c29_b4d2_c0187d13b8c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4a2e56ff_f54f_444c_b747_67393dc8926a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d35919e3_1c94_493c_ac9f_7f3971226166() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f8e9511a_9825_4b81_b4c4_b2c6ef5ee55f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a7e4333d_a2ef_4676_9c92_186fc6ac713d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1fdd1656_9665_443b_adcb_fdb7f3d93d2b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_95224528_2981_447c_b1c9_59e592874ffc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_89ebb099_f71d_4852_af47_87d77351f02c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3806fe6c_ea5b_454d_9e9f_b6cece52bfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d86074bc_57db_43e4_b084_209a16a47780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c91b74b9_7f40_43d1_874a_93156010b1f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_404b6194_c784_407b_9a89_f947266db418() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5b8bd7c4_3bb2_40f7_9b7a_34b2a66539a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4e9eb1f6_73bc_41ef_92bc_1902efa2870b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0178b168_e24d_444d_b8c4_9ddeae144a66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_db4be044_a392_4e2b_81fb_b35f30852ddb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5a2cedd9_4511_4671_b156_675aa2c61557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_63a8a0c2_df4a_4614_a650_e46225da042c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2df5049c_54a3_4247_bd0d_96120a8c4341() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8e3a92ad_fe12_4175_bf8a_1118b489a64f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4b69020a_704a_4f1c_951b_23e38d73a191() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d01d0266_66b9_4052_9617_4aead119fbe5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_09ca16bf_1e09_4b1b_9aab_70aacfb8f7a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ce18882e_d645_4851_861f_b3254ded8ad5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4378846f_3b51_4903_b376_42cc2a33ce5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e069f3c3_e6d1_4686_81c7_7afe52a73f31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e3a92ad_fe12_4175_bf8a_1118b489a64f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a1e6a542_b7d3_4bd6_a1b0_b85e565213ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ec965356_2494_4c29_b4d2_c0187d13b8c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8de69452_1f11_4684_8ece_1457b71381b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_72d74904_6e2f_481d_9a64_a6de44a7c5bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4b69020a_704a_4f1c_951b_23e38d73a191() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_07fcc0fd_df46_4bfc_8a68_6f3b4a77bab8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_74b9f682_0bfe_42fb_bbdf_9d6c4ff5fb03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7c14b2af_54f0_4166_9a7a_4396d05dfa10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_daf949d0_3a04_4904_8028_07c2b99e0479() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ecf499e5_517c_451b_9624_42f173e1fb77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d04e8104_d028_41cf_af48_2d4b5e702cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d01d0266_66b9_4052_9617_4aead119fbe5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ebb3a8bb_6447_4bee_846b_5b329d379e23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_51581e19_68ca_44fd_88b0_9cd47353fe07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_89ebb099_f71d_4852_af47_87d77351f02c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1fdd1656_9665_443b_adcb_fdb7f3d93d2b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e9eb1f6_73bc_41ef_92bc_1902efa2870b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_82063360_e60d_4a07_a515_eb41b6a0f706() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c22feb3b_a22b_4606_9e09_a15e16ecb3ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1d449c29_660e_4203_bd61_3f05763213df() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ce18882e_d645_4851_861f_b3254ded8ad5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5e07fb5b_2726_4d48_94c6_f78477c6fea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d537d9bd_7b68_4b6c_9c5d_85f4bacbea1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9a5c673f_3344_4188_8424_c436a94e24e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4e64b342_6e25_4159_b211_8cb91591be38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_09ca16bf_1e09_4b1b_9aab_70aacfb8f7a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8e11ba2b_2a41_4272_b83e_61627a8e367a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7c14b2af_54f0_4166_9a7a_4396d05dfa10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ef4d7f35_15dd_4c23_b20f_9083e482818f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c22feb3b_a22b_4606_9e09_a15e16ecb3ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_abe05bb7_4a32_428d_9186_a1047690312c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cb69f42c_112d_4cdb_9cb4_5e44cd2d6e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7ca97643_e3f9_4a98_a448_350f7d6007cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_51581e19_68ca_44fd_88b0_9cd47353fe07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_979acd88_05a6_4f37_86b5_670ed1e9f741() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2df5049c_54a3_4247_bd0d_96120a8c4341() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f01f7f44_4170_42f2_977b_55cde635126a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_779207c2_4818_4a43_a66b_3dc95aa3a8a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_af61d619_7f2a_4c9b_a6b4_af1c0f0163ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4ed0c563_0aff_439a_883a_3f00526e6d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0cd52271_857d_4252_a15d_b28cdfae36a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_abe05bb7_4a32_428d_9186_a1047690312c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7214bb9e_5d2d_4806_97da_2e67d8604333() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_74b9f682_0bfe_42fb_bbdf_9d6c4ff5fb03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_43ab80d8_a777_4612_aac6_11f15fd6d931() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6ab0b9c6_7ede_4b6c_b1d0_b6c3f602a7a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cbe55615_0ced_4716_be42_7220f32b5b39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fe609b73_163c_4cb0_b6f0_aa018cc00987() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_337463df_ee21_434a_bf4a_076a022a4446() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cd25bae5_edfe_415d_975b_cb325be1f6c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a7088fcd_c901_4a00_9cf4_a82fb6c50f43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ce82dadf_4c53_491e_ba2d_8a7651109961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_34f1d022_e285_4993_becf_c4050d6e4996() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b01f03be_dcc3_4625_8f65_db905aa927ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_546b54ce_96b0_4777_b5fc_1bddd4566d93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a1e6a542_b7d3_4bd6_a1b0_b85e565213ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7b3a45f7_30e0_412e_bbdd_d2c4c51d1c17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0db167ef_3894_444b_b1a7_579b45ffba74() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_73d7b713_6820_4f36_8ecb_743f987b13db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c63454e8_8812_462b_b98d_744420105b2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_587826fd_15f6_4131_bc88_8165b307bbe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_46d58a25_2ed6_4810_aca7_65d9a97645b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5555d029_c820_4ab3_bea0_400441eb26ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1d449c29_660e_4203_bd61_3f05763213df() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8214dce2_d281_4660_adb9_d008fade8f41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d137f5bc_54a8_446c_aaca_d827a6e77258() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cb69f42c_112d_4cdb_9cb4_5e44cd2d6e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7ca97643_e3f9_4a98_a448_350f7d6007cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7c14b2af_54f0_4166_9a7a_4396d05dfa10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cbe55615_0ced_4716_be42_7220f32b5b39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_817425db_f3f2_49a1_95ad_2f252e33ba5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0f24174b_da2d_4c55_a35d_3616d07c2509() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f8f3c883_9133_493c_816e_18dd1b2d4ace() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5555d029_c820_4ab3_bea0_400441eb26ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a348e51b_9cf0_4c59_842e_8814d0656474() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3b5a966a_14bb_476b_8dca_2b3cf8f8bcdb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_888b6463_e8c3_4a84_870c_43a85fa19308() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_49c834a2_0ff4_41d7_8087_5eac29276bee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a1e6a542_b7d3_4bd6_a1b0_b85e565213ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f8e9511a_9825_4b81_b4c4_b2c6ef5ee55f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_82760ac2_0e67_479e_b4ef_7ce5bcacb3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6ab0b9c6_7ede_4b6c_b1d0_b6c3f602a7a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ddf52d24_40d8_4dcd_bd02_546a0d51f524() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_92922df6_594c_41d7_9dc9_40e861c1d4cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7b3a45f7_30e0_412e_bbdd_d2c4c51d1c17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_83f0ce99_594c_4963_8cc3_434c1757670f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ff363f4f_975e_4b3a_876b_6ae613945e49() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d116127b_8798_4d0e_8004_01f0d7bb4f9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cbe55615_0ced_4716_be42_7220f32b5b39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1e2c60c8_f3d9_4f0b_be72_29278abf4723() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0b9d849c_506a_4fdf_be6d_55375fd8c85b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_579befe0_6e3a_475d_9014_f16925079ee9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_75d0e2f8_34ec_426a_a07c_d6bd5198dba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7397cac2_d361_446c_9568_e1c6a0e3816e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5b8bd7c4_3bb2_40f7_9b7a_34b2a66539a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_49fc220d_7c95_4419_ab09_4f14578becc5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ebb3a8bb_6447_4bee_846b_5b329d379e23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ddf52d24_40d8_4dcd_bd02_546a0d51f524() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5e07fb5b_2726_4d48_94c6_f78477c6fea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4ed0c563_0aff_439a_883a_3f00526e6d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2997af06_f2e2_4355_8454_ec28139a420b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a7088fcd_c901_4a00_9cf4_a82fb6c50f43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a5d899c5_cfa4_4219_83b2_9b939059df83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_55c2e890_e112_4cb3_9b37_ed656f3d7b21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_95224528_2981_447c_b1c9_59e592874ffc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3329e05b_7212_4726_9cd3_3f36f7085993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ddf52d24_40d8_4dcd_bd02_546a0d51f524() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ebb3a8bb_6447_4bee_846b_5b329d379e23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f4e1fde5_eec6_47b8_b72b_52bbc8296ff3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_af61d619_7f2a_4c9b_a6b4_af1c0f0163ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cef30cdc_ecb8_401b_bc37_f8e60788a955() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_82063360_e60d_4a07_a515_eb41b6a0f706() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f85d3659_dcc8_4118_80ab_4907d1bb7331() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4378846f_3b51_4903_b376_42cc2a33ce5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d86074bc_57db_43e4_b084_209a16a47780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f25d3e54_8b00_4690_8ed9_d5692f13550b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d116127b_8798_4d0e_8004_01f0d7bb4f9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7214bb9e_5d2d_4806_97da_2e67d8604333() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a2d216a7_571d_4193_9db3_0ccce9ce92b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a6165876_67a3_48e2_8bd5_afc2a4a51149() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c63454e8_8812_462b_b98d_744420105b2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4d87cce5_9679_4539_8a5e_fe173888665c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2997af06_f2e2_4355_8454_ec28139a420b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_20feefad_fde5_44fd_8408_4986cffe5528() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_75f7023a_0db9_4d63_a355_bf1c46ed54d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cd6aa086_9cd1_40f8_9d66_3f28aa104da6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0f24174b_da2d_4c55_a35d_3616d07c2509() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e11ba2b_2a41_4272_b83e_61627a8e367a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4a2e56ff_f54f_444c_b747_67393dc8926a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3063a798_3d53_404f_8170_50352fc73336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_06f8d0ed_6ad1_4a73_8509_8fe405c651e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a1159ae8_0e39_47fc_92a1_f6be0cabcc10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0e2430ac_7252_4173_99d2_468d653fa146() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5e07fb5b_2726_4d48_94c6_f78477c6fea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_abe05bb7_4a32_428d_9186_a1047690312c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_523d6fc0_ce20_4374_8642_efbee1f9eb0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_92922df6_594c_41d7_9dc9_40e861c1d4cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cd6aa086_9cd1_40f8_9d66_3f28aa104da6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7397cac2_d361_446c_9568_e1c6a0e3816e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7a76fd14_45be_43ff_9662_a05586cae774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_49e214ed_ff84_4f82_9adb_e55fbea32fdc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_75195e87_d9db_4d02_bf76_38511d8822c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e5d2dd7e_28dd_42e2_baba_ced5bd9d162b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3b5a966a_14bb_476b_8dca_2b3cf8f8bcdb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dc17be99_3990_4d68_af22_debdaaa670d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_63a8a0c2_df4a_4614_a650_e46225da042c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_51cc7a34_603e_4d3c_a48a_2f4481772e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e7f042ce_a6da_4ed5_9df8_4579eafdd855() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f4d75c78_aba8_4f00_ac04_25226ebc7d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cccb5464_0e56_418f_ad78_93dd29b3ee62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dc17be99_3990_4d68_af22_debdaaa670d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ebb3a8bb_6447_4bee_846b_5b329d379e23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_80ae6c97_f669_4566_9e80_59642bc0cc2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4a2e56ff_f54f_444c_b747_67393dc8926a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4b69020a_704a_4f1c_951b_23e38d73a191() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_06a22206_ce30_44bc_b58e_da3805b883e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_34f1d022_e285_4993_becf_c4050d6e4996() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_629747ba_4d4c_4f5b_bd2b_a14d971bd093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_629747ba_4d4c_4f5b_bd2b_a14d971bd093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cef30cdc_ecb8_401b_bc37_f8e60788a955() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_75d0e2f8_34ec_426a_a07c_d6bd5198dba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1e2c60c8_f3d9_4f0b_be72_29278abf4723() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_95224528_2981_447c_b1c9_59e592874ffc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a1159ae8_0e39_47fc_92a1_f6be0cabcc10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7b3a45f7_30e0_412e_bbdd_d2c4c51d1c17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_979acd88_05a6_4f37_86b5_670ed1e9f741() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f5695820_f6d9_46de_9e70_3f3d29ec110b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e5d2dd7e_28dd_42e2_baba_ced5bd9d162b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_404b6194_c784_407b_9a89_f947266db418() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_73f524e0_be24_4938_9e05_0fe2f7f0bfe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_49e214ed_ff84_4f82_9adb_e55fbea32fdc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ac42f2b8_ff39_414c_96d3_aebeeeab1e0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_20feefad_fde5_44fd_8408_4986cffe5528() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_75195e87_d9db_4d02_bf76_38511d8822c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_779207c2_4818_4a43_a66b_3dc95aa3a8a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ef4d7f35_15dd_4c23_b20f_9083e482818f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3648021b_3a9b_409f_8d86_ec22b3ecf48a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_34f1d022_e285_4993_becf_c4050d6e4996() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f2991c5f_3515_494d_9576_1f59b279167b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3648021b_3a9b_409f_8d86_ec22b3ecf48a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5a2cedd9_4511_4671_b156_675aa2c61557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_72d74904_6e2f_481d_9a64_a6de44a7c5bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ff363f4f_975e_4b3a_876b_6ae613945e49() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2df5049c_54a3_4247_bd0d_96120a8c4341() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4ed0c563_0aff_439a_883a_3f00526e6d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0e2430ac_7252_4173_99d2_468d653fa146() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a2d216a7_571d_4193_9db3_0ccce9ce92b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e64b342_6e25_4159_b211_8cb91591be38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ddf52d24_40d8_4dcd_bd02_546a0d51f524() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_72d74904_6e2f_481d_9a64_a6de44a7c5bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cbe55615_0ced_4716_be42_7220f32b5b39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5a2cedd9_4511_4671_b156_675aa2c61557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3806fe6c_ea5b_454d_9e9f_b6cece52bfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bad7969f_be3d_4f53_a33d_004bceb25c0b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_55c2e890_e112_4cb3_9b37_ed656f3d7b21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ff363f4f_975e_4b3a_876b_6ae613945e49() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0cd52271_857d_4252_a15d_b28cdfae36a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c91b74b9_7f40_43d1_874a_93156010b1f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1a6d159b_406b_41a1_9dc8_9a247b3ba4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1c772e9f_0125_4e78_a471_0fe117a22615() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f3d03205_8592_40b9_a5af_d2b0a43c551c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_db4be044_a392_4e2b_81fb_b35f30852ddb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fe609b73_163c_4cb0_b6f0_aa018cc00987() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4e885cb3_99d9_4611_a4ff_c5bc9759cb29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1ccbdbb4_c304_4045_bf65_8ebfba5b80e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c91b74b9_7f40_43d1_874a_93156010b1f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b9d849c_506a_4fdf_be6d_55375fd8c85b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ecf499e5_517c_451b_9624_42f173e1fb77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6f4099a1_94d4_49f6_a995_e9ebbba423b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f5695820_f6d9_46de_9e70_3f3d29ec110b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3329e05b_7212_4726_9cd3_3f36f7085993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8294ac6a_a43d_4b08_89dd_1d5710ee41ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_eccc65d3_f950_4154_a439_43a7312c2c95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d35919e3_1c94_493c_ac9f_7f3971226166() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_546b54ce_96b0_4777_b5fc_1bddd4566d93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e885cb3_99d9_4611_a4ff_c5bc9759cb29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d35919e3_1c94_493c_ac9f_7f3971226166() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4378846f_3b51_4903_b376_42cc2a33ce5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_478b5f87_a177_4db3_bec2_e4c8cf808985() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a1e6a542_b7d3_4bd6_a1b0_b85e565213ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_aae256e9_24d5_4d0d_94ee_cf7e47ead4fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bd7780c5_afe3_4aca_bf77_cde7695815e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1c772e9f_0125_4e78_a471_0fe117a22615() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_221d9631_feb1_4bed_ac4c_5226c117685b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3329e05b_7212_4726_9cd3_3f36f7085993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d35919e3_1c94_493c_ac9f_7f3971226166() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f3704c1e_c7ec_4698_8e8d_6454f0847519() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a348e51b_9cf0_4c59_842e_8814d0656474() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b01f03be_dcc3_4625_8f65_db905aa927ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5846d239_8028_45a9_80ce_0eb13ec62537() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_124599eb_ff1d_4ae8_ab9f_80f45dbeee54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_83f0ce99_594c_4963_8cc3_434c1757670f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d116127b_8798_4d0e_8004_01f0d7bb4f9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_83f0ce99_594c_4963_8cc3_434c1757670f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_629747ba_4d4c_4f5b_bd2b_a14d971bd093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_49fc220d_7c95_4419_ab09_4f14578becc5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d537d9bd_7b68_4b6c_9c5d_85f4bacbea1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fe609b73_163c_4cb0_b6f0_aa018cc00987() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7214bb9e_5d2d_4806_97da_2e67d8604333() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9a5c673f_3344_4188_8424_c436a94e24e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1e2c60c8_f3d9_4f0b_be72_29278abf4723() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_89ebb099_f71d_4852_af47_87d77351f02c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8de69452_1f11_4684_8ece_1457b71381b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_75f7023a_0db9_4d63_a355_bf1c46ed54d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b0bee4c7_03ea_42c4_99a8_5899e3139896() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6f961bdb_07f2_4a16_918e_21602337aee5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8214dce2_d281_4660_adb9_d008fade8f41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_db4be044_a392_4e2b_81fb_b35f30852ddb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cccb5464_0e56_418f_ad78_93dd29b3ee62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c9f4c599_8957_48eb_b08c_e352aefef173() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f85d3659_dcc8_4118_80ab_4907d1bb7331() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_92922df6_594c_41d7_9dc9_40e861c1d4cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dc17be99_3990_4d68_af22_debdaaa670d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_daf949d0_3a04_4904_8028_07c2b99e0479() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c492b77b_184d_439d_b300_d626bb7f945f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1ccbdbb4_c304_4045_bf65_8ebfba5b80e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_49fc220d_7c95_4419_ab09_4f14578becc5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_74b9f682_0bfe_42fb_bbdf_9d6c4ff5fb03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_34578e08_7c0c_4641_9fb4_7e7e72b7d5e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cb69f42c_112d_4cdb_9cb4_5e44cd2d6e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dc17be99_3990_4d68_af22_debdaaa670d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_eccc65d3_f950_4154_a439_43a7312c2c95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_337463df_ee21_434a_bf4a_076a022a4446() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3b5a966a_14bb_476b_8dca_2b3cf8f8bcdb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_579befe0_6e3a_475d_9014_f16925079ee9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3329e05b_7212_4726_9cd3_3f36f7085993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a6165876_67a3_48e2_8bd5_afc2a4a51149() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2997af06_f2e2_4355_8454_ec28139a420b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3b5a966a_14bb_476b_8dca_2b3cf8f8bcdb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_83f0ce99_594c_4963_8cc3_434c1757670f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_689e1d48_efcf_4e2c_ab1e_019062150e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1a259e38_58a2_43fd_893b_c29239df02cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f25d3e54_8b00_4690_8ed9_d5692f13550b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5555d029_c820_4ab3_bea0_400441eb26ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a2d216a7_571d_4193_9db3_0ccce9ce92b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2ee67deb_7f60_47b5_8acf_c830020dce75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_80ae6c97_f669_4566_9e80_59642bc0cc2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a552347e_965e_44c2_bf19_56bd61d14798() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d537d9bd_7b68_4b6c_9c5d_85f4bacbea1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_eccc65d3_f950_4154_a439_43a7312c2c95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_49c834a2_0ff4_41d7_8087_5eac29276bee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1203dbc4_f7d1_49a9_a1aa_dffdb412564b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6b982d58_ec77_4e86_9e0d_d3cfe39ca884() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_daf949d0_3a04_4904_8028_07c2b99e0479() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_89ebb099_f71d_4852_af47_87d77351f02c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_59eae9f4_c57a_4929_8a66_be7c6b4b8a32() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3329e05b_7212_4726_9cd3_3f36f7085993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a7e4333d_a2ef_4676_9c92_186fc6ac713d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5b8bd7c4_3bb2_40f7_9b7a_34b2a66539a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0cd52271_857d_4252_a15d_b28cdfae36a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3b5a966a_14bb_476b_8dca_2b3cf8f8bcdb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3063a798_3d53_404f_8170_50352fc73336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_221d9631_feb1_4bed_ac4c_5226c117685b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_49c834a2_0ff4_41d7_8087_5eac29276bee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_abe05bb7_4a32_428d_9186_a1047690312c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0cd52271_857d_4252_a15d_b28cdfae36a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_75d0e2f8_34ec_426a_a07c_d6bd5198dba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_817425db_f3f2_49a1_95ad_2f252e33ba5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d01d0266_66b9_4052_9617_4aead119fbe5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_aae256e9_24d5_4d0d_94ee_cf7e47ead4fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7aad4e2e_6b63_48e6_9f4b_c76ebfc352bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1c772e9f_0125_4e78_a471_0fe117a22615() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b0bee4c7_03ea_42c4_99a8_5899e3139896() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9a5c673f_3344_4188_8424_c436a94e24e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7c14b2af_54f0_4166_9a7a_4396d05dfa10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_218bb133_b594_4044_b0c0_58e7cf7a4d1c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_af61d619_7f2a_4c9b_a6b4_af1c0f0163ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_124599eb_ff1d_4ae8_ab9f_80f45dbeee54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_20feefad_fde5_44fd_8408_4986cffe5528() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_75195e87_d9db_4d02_bf76_38511d8822c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_aae256e9_24d5_4d0d_94ee_cf7e47ead4fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3476c798_0b2a_4806_87c0_0edfc9e15c03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_09ca16bf_1e09_4b1b_9aab_70aacfb8f7a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7a76fd14_45be_43ff_9662_a05586cae774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e069f3c3_e6d1_4686_81c7_7afe52a73f31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a8706a6f_a461_4141_9c09_0ce0b8883d13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1b1a34d1_4385_4676_9335_90dc52649ba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a3b40587_49ca_4a33_a6e6_08e9a113f22e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1203dbc4_f7d1_49a9_a1aa_dffdb412564b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3648021b_3a9b_409f_8d86_ec22b3ecf48a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_aae256e9_24d5_4d0d_94ee_cf7e47ead4fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bad7969f_be3d_4f53_a33d_004bceb25c0b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f85d3659_dcc8_4118_80ab_4907d1bb7331() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e895ae7a_6a5b_4cdb_a79f_6f2df8b92989() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_73d7b713_6820_4f36_8ecb_743f987b13db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_878b3515_9ec1_4150_99ec_12927cfe43b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4d87cce5_9679_4539_8a5e_fe173888665c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1b1a34d1_4385_4676_9335_90dc52649ba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_888b6463_e8c3_4a84_870c_43a85fa19308() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_84cbdbbe_4bb8_47e4_8b6d_f83f401dac9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_89ebb099_f71d_4852_af47_87d77351f02c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6f4099a1_94d4_49f6_a995_e9ebbba423b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1ff72c3c_01fe_439a_a292_2f50064a0dc7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_51cc7a34_603e_4d3c_a48a_2f4481772e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_63a8a0c2_df4a_4614_a650_e46225da042c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3b5a966a_14bb_476b_8dca_2b3cf8f8bcdb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6f961bdb_07f2_4a16_918e_21602337aee5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f3d03205_8592_40b9_a5af_d2b0a43c551c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f8f3c883_9133_493c_816e_18dd1b2d4ace() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1fdd1656_9665_443b_adcb_fdb7f3d93d2b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f3830faf_4270_4128_ad38_8afa70694443() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9b4d895e_1046_4bc5_8af9_679f197f58ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4d87cce5_9679_4539_8a5e_fe173888665c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c63454e8_8812_462b_b98d_744420105b2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fe609b73_163c_4cb0_b6f0_aa018cc00987() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_36442c6b_a1ac_41cb_a9a2_e4e5600007f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c492b77b_184d_439d_b300_d626bb7f945f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0f24174b_da2d_4c55_a35d_3616d07c2509() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0b9d849c_506a_4fdf_be6d_55375fd8c85b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_06a22206_ce30_44bc_b58e_da3805b883e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1c772e9f_0125_4e78_a471_0fe117a22615() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d01d0266_66b9_4052_9617_4aead119fbe5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a3b40587_49ca_4a33_a6e6_08e9a113f22e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b944f5a3_cf1d_4a75_83b7_703175e29077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7ca97643_e3f9_4a98_a448_350f7d6007cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ce18882e_d645_4851_861f_b3254ded8ad5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_88b5976a_7e60_4392_a66e_d5dc32b8c791() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_51581e19_68ca_44fd_88b0_9cd47353fe07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3806fe6c_ea5b_454d_9e9f_b6cece52bfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5846d239_8028_45a9_80ce_0eb13ec62537() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_07fcc0fd_df46_4bfc_8a68_6f3b4a77bab8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4d87cce5_9679_4539_8a5e_fe173888665c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8de69452_1f11_4684_8ece_1457b71381b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cef30cdc_ecb8_401b_bc37_f8e60788a955() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_75195e87_d9db_4d02_bf76_38511d8822c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f3d03205_8592_40b9_a5af_d2b0a43c551c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_82063360_e60d_4a07_a515_eb41b6a0f706() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4e885cb3_99d9_4611_a4ff_c5bc9759cb29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f8e9511a_9825_4b81_b4c4_b2c6ef5ee55f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_82760ac2_0e67_479e_b4ef_7ce5bcacb3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ff363f4f_975e_4b3a_876b_6ae613945e49() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c645d6a1_088b_428a_bcc9_cb86b8f335bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ad64028d_f933_4b8c_8825_1792fd4cdc19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f3704c1e_c7ec_4698_8e8d_6454f0847519() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c645d6a1_088b_428a_bcc9_cb86b8f335bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f25d3e54_8b00_4690_8ed9_d5692f13550b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_af61d619_7f2a_4c9b_a6b4_af1c0f0163ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bad7969f_be3d_4f53_a33d_004bceb25c0b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_63a8a0c2_df4a_4614_a650_e46225da042c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c492b77b_184d_439d_b300_d626bb7f945f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_49e214ed_ff84_4f82_9adb_e55fbea32fdc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_baba31de_6179_4140_afc8_376fa40ca06c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a6165876_67a3_48e2_8bd5_afc2a4a51149() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ef4d7f35_15dd_4c23_b20f_9083e482818f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8baf1d17_0824_40bb_b05a_b8b0faf76a04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e7f042ce_a6da_4ed5_9df8_4579eafdd855() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b01f03be_dcc3_4625_8f65_db905aa927ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4e64b342_6e25_4159_b211_8cb91591be38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cd6aa086_9cd1_40f8_9d66_3f28aa104da6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4ed0c563_0aff_439a_883a_3f00526e6d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8baf1d17_0824_40bb_b05a_b8b0faf76a04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_25f8148c_079f_414c_8617_f35444a02db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f01f7f44_4170_42f2_977b_55cde635126a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ebb3a8bb_6447_4bee_846b_5b329d379e23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_08517831_6302_4d8e_abd6_174513ab5391() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e5d2dd7e_28dd_42e2_baba_ced5bd9d162b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1ccbdbb4_c304_4045_bf65_8ebfba5b80e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c91b74b9_7f40_43d1_874a_93156010b1f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c22feb3b_a22b_4606_9e09_a15e16ecb3ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1fdd1656_9665_443b_adcb_fdb7f3d93d2b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4e885cb3_99d9_4611_a4ff_c5bc9759cb29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_817425db_f3f2_49a1_95ad_2f252e33ba5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a6165876_67a3_48e2_8bd5_afc2a4a51149() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0b9d849c_506a_4fdf_be6d_55375fd8c85b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f85d3659_dcc8_4118_80ab_4907d1bb7331() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8294ac6a_a43d_4b08_89dd_1d5710ee41ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a8706a6f_a461_4141_9c09_0ce0b8883d13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bc786e81_5ac8_4773_8738_f0d37b16c035() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ec6263e0_c551_4a78_b6f3_47d28c0878dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_75d0e2f8_34ec_426a_a07c_d6bd5198dba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7397cac2_d361_446c_9568_e1c6a0e3816e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f30f5e21_014f_4854_8458_1b12ce00e2f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_34578e08_7c0c_4641_9fb4_7e7e72b7d5e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_579befe0_6e3a_475d_9014_f16925079ee9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_49fc220d_7c95_4419_ab09_4f14578becc5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_20feefad_fde5_44fd_8408_4986cffe5528() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_75d0e2f8_34ec_426a_a07c_d6bd5198dba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d04e8104_d028_41cf_af48_2d4b5e702cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d537d9bd_7b68_4b6c_9c5d_85f4bacbea1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dc17be99_3990_4d68_af22_debdaaa670d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f01f7f44_4170_42f2_977b_55cde635126a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8294ac6a_a43d_4b08_89dd_1d5710ee41ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b15b943e_83e7_444a_a139_a4a666ebb1cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0e2430ac_7252_4173_99d2_468d653fa146() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_82063360_e60d_4a07_a515_eb41b6a0f706() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f5695820_f6d9_46de_9e70_3f3d29ec110b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3648021b_3a9b_409f_8d86_ec22b3ecf48a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8bff9fd1_df16_4dc2_b8a5_6dabb734f656() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_221d9631_feb1_4bed_ac4c_5226c117685b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7b3a45f7_30e0_412e_bbdd_d2c4c51d1c17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0f24174b_da2d_4c55_a35d_3616d07c2509() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6f961bdb_07f2_4a16_918e_21602337aee5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c9f4c599_8957_48eb_b08c_e352aefef173() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a1159ae8_0e39_47fc_92a1_f6be0cabcc10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6f961bdb_07f2_4a16_918e_21602337aee5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7214bb9e_5d2d_4806_97da_2e67d8604333() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b17b8622_735d_4926_871c_eacc5a0da09a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a2d216a7_571d_4193_9db3_0ccce9ce92b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cd25bae5_edfe_415d_975b_cb325be1f6c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_92922df6_594c_41d7_9dc9_40e861c1d4cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cbe55615_0ced_4716_be42_7220f32b5b39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e7f042ce_a6da_4ed5_9df8_4579eafdd855() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d229e090_f1e3_4356_83d8_5e1f3c5149c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_49c834a2_0ff4_41d7_8087_5eac29276bee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3063a798_3d53_404f_8170_50352fc73336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8baf1d17_0824_40bb_b05a_b8b0faf76a04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_46d58a25_2ed6_4810_aca7_65d9a97645b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8b69e804_4194_4dd2_bd30_09bf549e99fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_db4be044_a392_4e2b_81fb_b35f30852ddb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a1e6a542_b7d3_4bd6_a1b0_b85e565213ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8e3a92ad_fe12_4175_bf8a_1118b489a64f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_979acd88_05a6_4f37_86b5_670ed1e9f741() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_78701030_37a9_4fce_9169_70075687ce21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6f961bdb_07f2_4a16_918e_21602337aee5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8520cb21_027a_4f87_b6e8_1861640e40a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ecf499e5_517c_451b_9624_42f173e1fb77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cd25bae5_edfe_415d_975b_cb325be1f6c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f3d03205_8592_40b9_a5af_d2b0a43c551c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_db4be044_a392_4e2b_81fb_b35f30852ddb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d35cd525_8965_4f15_8846_8ae620c5130a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d116127b_8798_4d0e_8004_01f0d7bb4f9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ac42f2b8_ff39_414c_96d3_aebeeeab1e0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_393f3274_56bf_4ccd_ba52_5ef048e9cf80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1fdd1656_9665_443b_adcb_fdb7f3d93d2b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d137f5bc_54a8_446c_aaca_d827a6e77258() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_352815ac_a828_4d27_be3e_6ce8449fb8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_51581e19_68ca_44fd_88b0_9cd47353fe07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_37f4a10c_c7f1_444e_98f6_c4658f6911f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8214dce2_d281_4660_adb9_d008fade8f41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_194444fc_a87f_4bee_aa59_98250ea63c43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_124599eb_ff1d_4ae8_ab9f_80f45dbeee54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4b69020a_704a_4f1c_951b_23e38d73a191() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ca2f9399_b7d1_43cb_a893_f5ce96cf7103() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_637588d3_fc51_42a6_a100_2aee9a67ddd6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ad64028d_f933_4b8c_8825_1792fd4cdc19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1a259e38_58a2_43fd_893b_c29239df02cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8df2bc30_2d5d_4f8d_97ad_84d092ee41c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec965356_2494_4c29_b4d2_c0187d13b8c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bb85e879_a5a1_401c_80ac_f8ba3e9e50b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_80ae6c97_f669_4566_9e80_59642bc0cc2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3329e05b_7212_4726_9cd3_3f36f7085993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3a7775de_76e5_429f_ac34_825a8b29b8c2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a3b40587_49ca_4a33_a6e6_08e9a113f22e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a8706a6f_a461_4141_9c09_0ce0b8883d13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_33cbff94_9134_4893_8cbc_0c94de7bf5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7ca97643_e3f9_4a98_a448_350f7d6007cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9524ba24_b840_43d9_b55c_1a250f8f6f62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c7104efc_1f5b_424d_a8bb_7f96afe681b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_82760ac2_0e67_479e_b4ef_7ce5bcacb3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1b896fc8_14bb_4496_8b16_c97c968f313d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f1f1c950_aebb_4979_9696_e78157e9d31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_89ebb099_f71d_4852_af47_87d77351f02c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d35919e3_1c94_493c_ac9f_7f3971226166() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6f4099a1_94d4_49f6_a995_e9ebbba423b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_92922df6_594c_41d7_9dc9_40e861c1d4cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c63454e8_8812_462b_b98d_744420105b2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cd6aa086_9cd1_40f8_9d66_3f28aa104da6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cef30cdc_ecb8_401b_bc37_f8e60788a955() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_09ca16bf_1e09_4b1b_9aab_70aacfb8f7a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c4a4a108_81ec_4e73_9524_6161930bcccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f01f7f44_4170_42f2_977b_55cde635126a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ad64028d_f933_4b8c_8825_1792fd4cdc19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7f78ce42_9d67_4e67_beb4_b30e9d944517() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f6eb3ac2_964b_4d58_9c8f_a9991d207983() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a3b40587_49ca_4a33_a6e6_08e9a113f22e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ad64028d_f933_4b8c_8825_1792fd4cdc19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c22bc6a7_9123_4bd6_baab_b4e34afa98b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c79d4522_7691_45ec_a3fc_0c4e031924f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c18b3252_9653_4e90_9ba1_4907da741c67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f8e9511a_9825_4b81_b4c4_b2c6ef5ee55f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c5c63d65_8cb1_494f_976a_309e4bd1f340() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3bc0fb69_e90e_474d_b452_912e748690d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6f4099a1_94d4_49f6_a995_e9ebbba423b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_83633015_edbe_4891_b27d_fd2736f8185a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dc17be99_3990_4d68_af22_debdaaa670d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37214d5b_f95a_4d9f_b55f_c01db6ef8fc8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_72d74904_6e2f_481d_9a64_a6de44a7c5bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b0bee4c7_03ea_42c4_99a8_5899e3139896() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a348e51b_9cf0_4c59_842e_8814d0656474() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8214dce2_d281_4660_adb9_d008fade8f41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b9789a4b_65a4_4927_98fb_89fe6ea67a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2d4eb2d4_3f65_4db5_b538_0777511540f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ecf499e5_517c_451b_9624_42f173e1fb77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_34f1d022_e285_4993_becf_c4050d6e4996() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4e9eb1f6_73bc_41ef_92bc_1902efa2870b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e9f13230_4f71_4759_81f8_48fd08aa8b06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_95224528_2981_447c_b1c9_59e592874ffc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4d3036d3_e20d_4541_aa07_f67e0c7d2e89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_72f1091c_2026_4048_9180_ebd1f184e96f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1d05bc5a_d351_4ad6_a17a_cfd45ea3fcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f4e1fde5_eec6_47b8_b72b_52bbc8296ff3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_18819150_dadf_4308_8b94_7c2d7c990e39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_06f8d0ed_6ad1_4a73_8509_8fe405c651e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fa1556f4_58d5_4ff2_9a14_8f3ad5174207() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3063a798_3d53_404f_8170_50352fc73336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_587826fd_15f6_4131_bc88_8165b307bbe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ce9c31cf_6589_4d4b_b56d_55911ef7a531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_82063360_e60d_4a07_a515_eb41b6a0f706() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7b3a45f7_30e0_412e_bbdd_d2c4c51d1c17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e2ac9b67_ffe6_49d9_87c4_f97ee9eebfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9a5c673f_3344_4188_8424_c436a94e24e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_29a676be_44b9_4400_8bff_9ea04ba6f922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cf754c5f_01d3_4bfd_8826_7cdf399fe1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5846d239_8028_45a9_80ce_0eb13ec62537() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_95224528_2981_447c_b1c9_59e592874ffc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a345c7a7_1518_4b95_8c5a_55b5ad996b67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5e07fb5b_2726_4d48_94c6_f78477c6fea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a6cf4163_296a_400c_b226_879982e71f60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_880c9bf3_0250_470a_a3af_e72fe5382ebe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a2b20caa_4eef_4759_ac27_2d2c21a4fc1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fe3b45f7_8a2f_4ede_a679_53b5ddbbf1b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_43ab80d8_a777_4612_aac6_11f15fd6d931() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1a6d159b_406b_41a1_9dc8_9a247b3ba4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_478b5f87_a177_4db3_bec2_e4c8cf808985() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8e11ba2b_2a41_4272_b83e_61627a8e367a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0178b168_e24d_444d_b8c4_9ddeae144a66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_46348675_3e2b_4ee7_8ce3_ddbf182fac97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fe609b73_163c_4cb0_b6f0_aa018cc00987() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e895ae7a_6a5b_4cdb_a79f_6f2df8b92989() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ccefbad7_0e0b_4b82_a65d_1e0a333253c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_579befe0_6e3a_475d_9014_f16925079ee9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a219a66a_2ede_4eff_9663_6dd31f5804a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c117d86b_67af_4be2_95a2_73e1ba3042b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_579befe0_6e3a_475d_9014_f16925079ee9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_546b54ce_96b0_4777_b5fc_1bddd4566d93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_445052e3_63cf_42c2_bce4_8891b4a67772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a026f79d_d4b5_4eb2_95ca_f0ed4e6aaf16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bd7780c5_afe3_4aca_bf77_cde7695815e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bad7969f_be3d_4f53_a33d_004bceb25c0b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6c43bf9d_d69b_4352_ae20_3d9cdb991552() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_41a4a274_7238_421d_81b4_7d1c5c4386f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cf195f82_0ab1_4f13_a45f_f26f2994cb3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c63454e8_8812_462b_b98d_744420105b2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8e2c4b1a_ea1f_4295_bdf6_fe67d86e5a35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ef4d7f35_15dd_4c23_b20f_9083e482818f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_92ed15a8_fa60_43d0_a57b_59918b95625b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_46d58a25_2ed6_4810_aca7_65d9a97645b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_332627c7_dbd2_4a36_a26a_18f7e353d337() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c91b74b9_7f40_43d1_874a_93156010b1f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1fb8a26b_7323_48a7_b873_11cf8bac1aed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bbf218ed_24ef_4dce_a1bb_76f3f2fb4005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9ce6b70e_3ae6_407b_b71d_be73260b442b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_221d9631_feb1_4bed_ac4c_5226c117685b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b944f5a3_cf1d_4a75_83b7_703175e29077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1d449c29_660e_4203_bd61_3f05763213df() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2348ad24_7210_4f9b_9ede_cdeec0d97dcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_28c41fa4_16b3_4014_8a42_53428383abd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e7ce7dd9_5470_4db3_9406_2cce5733514d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_587826fd_15f6_4131_bc88_8165b307bbe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_64cf3d21_9753_44f4_8a94_74084f7601db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_388080e9_e434_4d40_bda5_58075a2212fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_28af2a67_0e9a_4b78_beeb_a603925536a8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d3113a60_9984_4fac_aee0_a3f8cdea287c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54a8b442_1de8_4d10_b21d_d0d47be78cd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_db4be044_a392_4e2b_81fb_b35f30852ddb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9baa1bb0_a0f8_4be1_ac88_c1cd16cb0cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dea5980d_21d7_4ff7_9ad8_1c505dd07b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ce82dadf_4c53_491e_ba2d_8a7651109961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_aa3e3d2b_48f0_4473_895e_a1a7638f6ae7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fa025e7d_1696_49b1_a62a_bfff5c9ced65() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cda19775_8703_4d02_af4c_4e38be3f558a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1e2c60c8_f3d9_4f0b_be72_29278abf4723() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7397cac2_d361_446c_9568_e1c6a0e3816e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8f1ee181_ee40_47e7_91be_a1168be67900() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ac42f2b8_ff39_414c_96d3_aebeeeab1e0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_88aabf15_0b61_471b_a73a_e9875484bf94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_659e817f_77e0_44ca_a298_6701a7e5a96c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3fdd9013_b9a7_4761_b3f7_b27182aa4ff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_beaa266a_2695_4586_a4ed_262dcf6b1baf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_587826fd_15f6_4131_bc88_8165b307bbe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_546b54ce_96b0_4777_b5fc_1bddd4566d93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8e3a92ad_fe12_4175_bf8a_1118b489a64f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bd7780c5_afe3_4aca_bf77_cde7695815e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_49c834a2_0ff4_41d7_8087_5eac29276bee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cb69f42c_112d_4cdb_9cb4_5e44cd2d6e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1a6d159b_406b_41a1_9dc8_9a247b3ba4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ef034c5d_0433_471a_a064_5e87e7b7968f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_124599eb_ff1d_4ae8_ab9f_80f45dbeee54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_404b6194_c784_407b_9a89_f947266db418() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e8359054_2345_4975_8f7f_a987c6797588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0e2430ac_7252_4173_99d2_468d653fa146() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b0bee4c7_03ea_42c4_99a8_5899e3139896() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_629747ba_4d4c_4f5b_bd2b_a14d971bd093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_352815ac_a828_4d27_be3e_6ce8449fb8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6347f98f_5794_4647_9c68_0c43ac97327b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2057acf3_c759_4f5a_b1ae_05a76009e92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bd7780c5_afe3_4aca_bf77_cde7695815e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d04e8104_d028_41cf_af48_2d4b5e702cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_49e214ed_ff84_4f82_9adb_e55fbea32fdc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4e789a5a_7aff_4ad0_b2f4_e6ec39a56ea8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c6d81aaf_6e7a_4267_9c5f_88205156044a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3806fe6c_ea5b_454d_9e9f_b6cece52bfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f3830faf_4270_4128_ad38_8afa70694443() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e59c6b42_2eda_41fe_aed2_9428583fc68b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b0d0fb2e_1d5a_4013_ab83_fc3e9429f546() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6b70dd9d_b12d_49f8_81ab_cd9c01d73ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5a2cedd9_4511_4671_b156_675aa2c61557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f87f998d_4853_4140_912f_a12d98060ad7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_75436f17_bcfc_4395_b2aa_6d543d3fec0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_25973ef1_12c5_4ee2_bd0f_b9606d5326c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b1682b07_b963_4830_affb_4acbeb51916b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ec965356_2494_4c29_b4d2_c0187d13b8c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0a29f56e_e058_4efb_bae2_a5a9c358cf1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8294ac6a_a43d_4b08_89dd_1d5710ee41ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f3704c1e_c7ec_4698_8e8d_6454f0847519() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_75d0e2f8_34ec_426a_a07c_d6bd5198dba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_696219f1_313c_490c_a205_56abbcb94789() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cccb5464_0e56_418f_ad78_93dd29b3ee62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f537a68d_33e4_4c1a_846f_93543e8d5e19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4e087585_043e_4c75_8c72_8ec6eca34d4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_eccc65d3_f950_4154_a439_43a7312c2c95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_858d6f28_b11b_452f_b968_6819c50a8851() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_72c9bca9_bc8a_462f_99ac_1622738b9531() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_73f524e0_be24_4938_9e05_0fe2f7f0bfe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bfa6a11b_2473_43bc_bb4a_f7e1143a0d02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_74b9f682_0bfe_42fb_bbdf_9d6c4ff5fb03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1e30c49b_4fe7_4bb2_9778_5e510222afd9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d137f5bc_54a8_446c_aaca_d827a6e77258() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_74b9f682_0bfe_42fb_bbdf_9d6c4ff5fb03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4b69020a_704a_4f1c_951b_23e38d73a191() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_20feefad_fde5_44fd_8408_4986cffe5528() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d4aa7d7d_826a_41cf_aada_86fd1eaec16b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f4e1fde5_eec6_47b8_b72b_52bbc8296ff3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f4172199_ed26_4263_898f_717276da5efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7b5c1610_dca6_4d88_99ec_f73603a7de20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_06d102b4_57c0_4c2a_a853_c7f9035cf5be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_34578e08_7c0c_4641_9fb4_7e7e72b7d5e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0e773253_1252_4dfb_8f3e_17ede0840b8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_51cc7a34_603e_4d3c_a48a_2f4481772e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f3830faf_4270_4128_ad38_8afa70694443() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1b80622d_f527_4904_9b3a_7f17322ce8d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fc5c9045_b0ae_4e4a_b69e_e171905c8470() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_06aa57d8_3957_426a_91f6_31b4a874bb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a7088fcd_c901_4a00_9cf4_a82fb6c50f43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d50ac48c_0590_4ff7_81fa_4ccdea6c39ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0e2fe17d_9f18_4e8c_a974_439a36b4d0f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_03d16ed6_8d83_4a22_8894_02e58e6c473e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8f38a885_fbf9_4654_9cf0_86fd209b772b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5e07fb5b_2726_4d48_94c6_f78477c6fea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b944f5a3_cf1d_4a75_83b7_703175e29077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_77a76e53_72f8_4522_86ae_bc8746d553de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7a76fd14_45be_43ff_9662_a05586cae774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6d42aa4f_fa4b_4ef7_851f_6456c1b3d53e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2aa13120_edd9_426c_84ae_a393e0b22a68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0fa8764c_4fcd_42b2_b993_7b9b197bb334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a3b40587_49ca_4a33_a6e6_08e9a113f22e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_99889346_ca3a_4c04_b8c1_4a0ff9576dfc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3a1d840a_6a64_4cb6_8aea_ab10a529b0b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_87f2f19b_9669_42b1_8664_eb20a7b288ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1e2c60c8_f3d9_4f0b_be72_29278abf4723() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_66baa1d3_54a2_4d3c_97ee_52d95de822f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fe6ea092_019e_48a8_9824_ab0e094acc5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_75f7023a_0db9_4d63_a355_bf1c46ed54d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_617bcf14_d1d5_4a0e_94ca_f4a4baf3edc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d4b0212f_fa17_4d9a_990f_dd94b6f62f5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_846099e0_68a5_4a18_9c20_0c4fa10465bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c645d6a1_088b_428a_bcc9_cb86b8f335bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e11ba2b_2a41_4272_b83e_61627a8e367a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1a6d159b_406b_41a1_9dc8_9a247b3ba4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_919aed5d_4cf4_42d4_85a0_cbf7e4a1d0e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4f1a4717_8d20_47b5_a522_99b6c08f98ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d01d0266_66b9_4052_9617_4aead119fbe5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ce18882e_d645_4851_861f_b3254ded8ad5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_731ce84e_04ec_43b2_a47c_1f3a1f97ae13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_adad7367_b8fa_4d1d_be19_3a004ec5c6f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ce65a7e4_1671_4966_99cd_f56025c262cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7d2bf47f_826a_4faa_9ef8_63f56b7bb941() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a715d631_9e97_42cc_89e6_0f57fbfe6a5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_93e40737_96fa_4a0a_bd48_956e34890417() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7ca97643_e3f9_4a98_a448_350f7d6007cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0178b168_e24d_444d_b8c4_9ddeae144a66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5214098d_8bea_480f_8d30_2e7daad9dbce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7af62452_4dc8_4c97_97d1_63c405058c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4acb728b_2ebc_4cd2_8ce3_bc066a2255b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4a2e56ff_f54f_444c_b747_67393dc8926a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_72d74904_6e2f_481d_9a64_a6de44a7c5bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_519c8d3d_5a67_4127_b12d_1a4d86802b20() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c645d6a1_088b_428a_bcc9_cb86b8f335bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a7088fcd_c901_4a00_9cf4_a82fb6c50f43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6892af28_4ae7_4320_a4b9_4346de302efb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5555d029_c820_4ab3_bea0_400441eb26ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_34215723_7dc7_428c_bc02_c2a03a4e5e1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_31ec3c20_2fae_462a_8f46_4c827bb681d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_19a96e47_b988_458e_86b7_f7f3a8a922fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5ddddf10_8c1f_4c7a_9576_0abde6c9c05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ff363f4f_975e_4b3a_876b_6ae613945e49() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0229b62f_abd4_4a3b_8e83_56aa735faacc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_65782ce3_7d61_4576_86da_5e3042d44060() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6601a3c5_c682_460a_bd7e_17c6d2e63185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ab53b5a8_fb75_4365_b9d8_d1f9ecbc5112() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e895ae7a_6a5b_4cdb_a79f_6f2df8b92989() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0e2430ac_7252_4173_99d2_468d653fa146() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_abe05bb7_4a32_428d_9186_a1047690312c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_404b6194_c784_407b_9a89_f947266db418() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_de729c1f_5d22_42d2_944f_8cb9c0c88dd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5fc1f982_b607_484f_92ec_255137dd7ee4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4a11ded8_25fa_4c74_8bd4_4234d8724b61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7b7a098f_8d79_4b35_b54e_f8a8cc8027b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f8f3c883_9133_493c_816e_18dd1b2d4ace() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a92dfbc8_2f66_4627_9f44_93e58b84726b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a5d899c5_cfa4_4219_83b2_9b939059df83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_478b5f87_a177_4db3_bec2_e4c8cf808985() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cb69f42c_112d_4cdb_9cb4_5e44cd2d6e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_36f7889f_88d9_4bcf_aaf0_2dada7b300a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b944f5a3_cf1d_4a75_83b7_703175e29077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e327ff3a_83e5_412b_9c4a_e730b5f4403c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_160780c7_1492_4d9a_8b6a_0826d9a8813d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_82760ac2_0e67_479e_b4ef_7ce5bcacb3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_103abde9_dfac_4f6f_a5a9_376b0c7e4e22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_94bd60ef_ed53_427e_af53_0674cf301309() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_099cb3d5_a59a_4046_b7c0_c0408fd1da0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_842279c5_974c_4d6c_a8cd_7d340f855b23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d5899599_d8b1_41f9_8582_7241206ab28a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1a259e38_58a2_43fd_893b_c29239df02cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_743149e0_edc2_4f66_989e_a1555c3b7cb3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c61f109f_96b2_4b72_8442_a0e84704d422() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e61dc8e0_e3a9_4395_9a22_2e889b1bf1ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_96477cec_6eea_43f8_ab9b_6479b6a9cbbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1df18f04_a659_4cb8_8c99_86a3650c6116() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_16ac54f8_9566_4065_ac6e_8188f364508c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5d2fa135_5ba9_48ca_9d56_0e52e94214fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4378846f_3b51_4903_b376_42cc2a33ce5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_55022616_19fd_43e2_a286_bb0b7bdadb40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4e9eb1f6_73bc_41ef_92bc_1902efa2870b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f74a60d2_86e4_4de7_9081_f3ca87170178() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cef30cdc_ecb8_401b_bc37_f8e60788a955() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bba9b66f_b39e_4c6f_a6b4_aa726aa4dd54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_32b614f2_ff88_4fda_9d03_6942de2d1a40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_124599eb_ff1d_4ae8_ab9f_80f45dbeee54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_dee4de7e_44fc_4a90_ab13_16d12dbd468f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ab4e77ee_1802_4895_ae24_644426e1802d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d86074bc_57db_43e4_b084_209a16a47780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2f54d490_9871_4835_9875_ee0d46ed9f5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6d155204_4f69_47cb_be39_9ff39387e87b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_87234826_ee0e_4505_9ecd_30e3b79246af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3aa6e886_edec_43e0_b244_e30213937497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3063a798_3d53_404f_8170_50352fc73336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3a6a06f9_3cbe_43e5_b652_46e597335ec4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_779207c2_4818_4a43_a66b_3dc95aa3a8a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cccb5464_0e56_418f_ad78_93dd29b3ee62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_554535aa_45c9_441c_ab4e_023e1917ef70() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_55c2e890_e112_4cb3_9b37_ed656f3d7b21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a964f3c6_091e_440c_8ee5_7db9918d826f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8dbb6f10_eac5_4b63_822a_112d6e6577b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a11c543a_0a73_4551_835f_d1c5670ca17c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bfc67c89_b2fe_48f8_a840_6258439889e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a21a4571_5b88_4eea_9a3f_f5736d1e7bcf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5bdbcf8c_7b1e_4d0d_bf9b_49f0d8de0e61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_61bbc283_3380_4aaa_a43a_86e420118fd8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_796c7d14_de13_4c5f_bd8f_1c5245415c35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c4419835_809f_4c8e_899e_d68e6fcf6f8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3a41a5c5_8060_4e1b_8880_c9a7e262ee44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a18a1754_c5f8_4696_b52d_394c87d353a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8bbfe3a8_b23c_4ceb_8208_68bb341a3204() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d1e015ae_753d_4df5_a965_535a632505ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_579befe0_6e3a_475d_9014_f16925079ee9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_15511cad_f011_4ca4_90b9_f5a39f713a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_23edc9eb_7929_4638_a2be_372f5786f787() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_86200944_0695_4be7_b848_d8ca0f3815db() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f3704c1e_c7ec_4698_8e8d_6454f0847519() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1936be7a_254a_4e6b_bc78_42d4103106e3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_121e9aa9_7114_42dc_bbbc_d5df8309b8cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a07d87fc_a89e_46a0_86bb_beb819073250() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_86538ef7_ef88_45fc_a8f2_a737d9a0a107() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6f961bdb_07f2_4a16_918e_21602337aee5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0db167ef_3894_444b_b1a7_579b45ffba74() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_26098614_bb8b_4978_8a0c_dc3f5e71a23f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ecf499e5_517c_451b_9624_42f173e1fb77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f36640db_9192_42dd_98ff_f5a5ef4eb281() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8cfb5139_184a_4b6d_9906_a5773b8918e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_34f1d022_e285_4993_becf_c4050d6e4996() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_85d96c8d_de4e_44b7_b7f8_1e517d7c7137() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fa747761_32f7_4de7_ad9b_f66db7a7a95a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a7934b96_fa76_4390_a3bc_85e257109266() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b43b012e_5011_4190_8997_32024e766677() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_03c32eed_e761_4af6_aa64_7949829acdf1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4e6d0523_d877_46b9_af0e_361e189b5739() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ad22cf2a_a13e_4f29_95c0_cc17c7c0da45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_06a22206_ce30_44bc_b58e_da3805b883e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7498ef8d_da5c_4d5a_9ec4_b9d179339189() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_972b4cea_b1a0_47d7_b353_5ecbc1739cdd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_768c8067_97dc_4486_aafe_233ca737fd1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_404b6194_c784_407b_9a89_f947266db418() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dd4003ea_9fb8_40d1_92b9_5da0d49bd0ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bdf4b26b_4317_4c91_b22c_e0d0ad4a8540() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1d449c29_660e_4203_bd61_3f05763213df() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ddc3fac8_6b91_4d7b_bf8b_ea08e9ab433e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e58dff22_ab09_4707_9a4f_a6a92bfcd342() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c4f4d24e_5979_431b_bf63_9b3d97c09efe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7ab76a75_1309_4871_8d8b_e261bc65992f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b0125b7b_a89f_4a4b_8aae_643fd114f4a0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dcf66833_8d62_43b4_b2f1_c506e992249c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4e64b342_6e25_4159_b211_8cb91591be38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f4d75c78_aba8_4f00_ac04_25226ebc7d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f8f3c883_9133_493c_816e_18dd1b2d4ace() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9d9a17f2_e41c_479b_b15a_594ef122fb56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_93e474f0_0878_49cc_b2dd_0858ae26f596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c289a754_7044_497b_b45f_10828ff832f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_04d3b298_dda6_46e0_bb9c_abf742c37f2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_41b8dd60_5a4b_49c6_b3d9_749708b0073e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5a104993_1b70_4ee9_bf80_f49496aa6077() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8d5a2934_1025_4bcc_a779_3144ebad869c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_629747ba_4d4c_4f5b_bd2b_a14d971bd093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1a6d159b_406b_41a1_9dc8_9a247b3ba4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8e2a2f3c_faa5_4e07_9651_18772e4d2c3b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ad94070b_5148_4754_9f7c_211e673b2f03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_eccc65d3_f950_4154_a439_43a7312c2c95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f806ab1a_6b93_4e81_b6a3_81ded46d9e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d3a0188f_7a37_4fa8_8b48_be7331b6eda3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_55c2e890_e112_4cb3_9b37_ed656f3d7b21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5555d029_c820_4ab3_bea0_400441eb26ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dd4541ee_f197_4a53_b1b3_b60191f01ff1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fa855118_d31d_418d_aa76_eca1600935dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_07fcc0fd_df46_4bfc_8a68_6f3b4a77bab8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3c0347ec_9dc1_47bb_91e5_c822b921250f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_eccc65d3_f950_4154_a439_43a7312c2c95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6e6f81e8_8181_46d8_ab30_8b9494c1935f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_95224528_2981_447c_b1c9_59e592874ffc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8e8ca9ab_7111_432b_b076_b8ad5b6c279a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6e6f15a9_1663_4231_bb63_32639758d663() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c257c4d7_e1b8_4aca_8f5c_f5be8d69c9de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_cccb5464_0e56_418f_ad78_93dd29b3ee62() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3cc46ec7_a15a_4e9d_9a2e_71e8ac2789ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_86ef80ed_ebde_4ac4_b1ca_a8d0dfad196c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ee000353_2a86_4ce7_9cfc_57f662ccb5aa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bc786e81_5ac8_4773_8738_f0d37b16c035() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37601683_3c6b_4d7a_98f6_a291f2e9c1bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_57e129fb_8e05_4979_8298_0463665cd5d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_55c2e890_e112_4cb3_9b37_ed656f3d7b21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c7212ddc_bec0_4951_9ae2_b76b8a67a466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ec446ab2_92a9_402d_9921_3592a8b8c3de() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0cea8f54_d033_4110_a9f6_76364ebd7eb1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_931efab5_f3f7_45b0_924b_8feba7b0afe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f65409a3_eb3f_4e48_a64e_648e273d30d7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1c772e9f_0125_4e78_a471_0fe117a22615() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_af61d619_7f2a_4c9b_a6b4_af1c0f0163ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4a2c713d_c73d_4929_a0ed_e814957cb34c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_97cec59a_ba53_42f9_b087_0395503919f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b67e06ee_baf6_4bfe_b3df_85a77cb09ce1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6dadb59a_a3fe_4633_9fe6_8954c8dacea2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1ccbdbb4_c304_4045_bf65_8ebfba5b80e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_29b4f091_ba14_44a8_9f9f_f45a84fd11fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c9915a27_1158_4407_a792_a83c19aed43b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a8d3777a_a12a_43f9_97a3_10f2ca8d37a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d537d9bd_7b68_4b6c_9c5d_85f4bacbea1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6dea4eed_0dc7_4448_be14_972b6cc7de00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7aad4e2e_6b63_48e6_9f4b_c76ebfc352bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_25f8148c_079f_414c_8617_f35444a02db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fa5e5243_1177_4b02_8239_af095869a334() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ac865d51_73de_4673_9b07_693c6c60fdfd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1f82a3c0_5b3f_40eb_816e_c17c6003476a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e0c8da85_54ec_4c88_be48_dcf173f105fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9831b5ec_adf8_4167_ac17_a655ce67adee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_49e418c8_934f_4049_87f8_b6f7178459dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a342569d_6279_4acd_994d_617646e69df8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c0ad8e4c_1f4c_497d_a90c_7df418d3162a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_be01fa4c_4617_4a06_9a04_cd1027c4719d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f01364df_6821_4951_92d8_0bc3b019fa05() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8cb150be_4152_4f67_92b8_8e5bccd30c77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a5d899c5_cfa4_4219_83b2_9b939059df83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d2935da9_2de3_45f5_8d8a_7eb38a81b1d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e32923a7_15b1_4967_814f_d1076f9f8af4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b6b831d6_8df6_4731_aab7_1fc538aff10a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_817425db_f3f2_49a1_95ad_2f252e33ba5c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3fa6c318_3cff_4f49_9090_2b89dc38ed4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3b3872c9_ec53_4c03_88c7_042d4d65fd7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_618a1e56_3487_4066_b623_94bbcf0c84ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a71f7fba_c484_4607_bb54_de3ea39d5584() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9ca78e86_75e3_4759_b2df_70fc32733777() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_13fb3c3a_0cf9_4c31_a97d_8854448b4993() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_115aaf45_ebb9_4b36_904e_5718ac1b7e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_149c10b1_36e0_4ad0_8abe_0cf6f6f89345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b22f3a69_b80b_4f1f_9404_aef45d28ca63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_904fbbef_adc5_4da8_af33_bc1c81ea0c5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_095b9136_da73_4154_8210_b8f7fb98a089() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9ba2a993_72d7_4be7_949d_f3b1bf49c88e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6d34669d_321d_42f3_aa5f_9da7a79c0c2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7c14b2af_54f0_4166_9a7a_4396d05dfa10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_17418be8_b2fd_4701_a5fc_1abb6fa4db48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_352815ac_a828_4d27_be3e_6ce8449fb8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3cb428e1_b696_4e9c_b1c5_88c6e5c6d39b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ce18882e_d645_4851_861f_b3254ded8ad5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1d7ee5ed_d752_4487_929c_4f0ee3e1d844() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cd122a20_b314_4e8f_8a22_d41b0f1b2add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_57cd266e_0a04_41bd_8b0b_db7b8c2090b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2a14f8e0_4b35_443e_ae90_014dd6cb34f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_702f09b6_c760_4951_8615_1f38980be51f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4378846f_3b51_4903_b376_42cc2a33ce5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_75da431e_3372_4169_bd92_3b68405a8e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c91b74b9_7f40_43d1_874a_93156010b1f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_29755ca9_5685_42f0_8029_cd028df5094a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b1bf5d8a_d8e8_4f5e_9255_318742b3ab63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_07fcc0fd_df46_4bfc_8a68_6f3b4a77bab8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_90692d26_0a4e_4b42_9ed5_9579ddf4db23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_84e2a8a0_bbb9_4cea_84a7_e636a644a0f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_587f9bf5_98b1_469e_a6fd_dd9c1506e559() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_806bc0e2_b523_4c53_83c3_3bd6d78b06e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4a2e56ff_f54f_444c_b747_67393dc8926a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0b1b94de_d923_4956_9b76_6885312f9115() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f6cd469c_a106_4905_877f_1f9915c5c898() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e195d01c_0498_4519_b244_231fe70ed172() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_46a0c917_0b46_433f_a29f_67546ee60352() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e3e4183b_58c5_4b26_aec2_4ac1789b2f69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c492b77b_184d_439d_b300_d626bb7f945f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_998a9c94_54fb_4343_93a0_85cf8ea1f58b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_58f12f63_383c_4322_bf7a_9d94d9d731ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e2eff02e_360d_446c_8fb9_ff6519f0d5f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4d87cce5_9679_4539_8a5e_fe173888665c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ec58713c_a5a7_4f7a_b510_ce89c663bbcb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f3a4f77d_dc19_4c29_9e94_d2db69a7fbe3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4e885cb3_99d9_4611_a4ff_c5bc9759cb29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_73f524e0_be24_4938_9e05_0fe2f7f0bfe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ce18882e_d645_4851_861f_b3254ded8ad5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0f057e16_e43d_4a42_9850_b815059dc196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_83264073_9be0_46f6_9c5c_05e92772188f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_00f33c09_3b9c_4c56_b7c1_e6404bb82535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4b22807e_3a19_4de5_92c8_929c186fedf2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0f14c8f7_8b87_4007_8c2e_4e2a3c7a4109() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_02a0e0ab_786f_4c06_9cb2_49c70db4da89() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ea05c880_3f3f_4a6a_b8c9_ac707d26d4ae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_979acd88_05a6_4f37_86b5_670ed1e9f741() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_afd8da6e_4b14_4422_91ea_3ad833b1e572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9176cdb7_b78b_49d3_82b1_99cbbae83aad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fb99b0cb_abef_47c9_955d_3220ae3bfa72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1808cbe9_b973_48e9_bb98_920f9d689241() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e9522eb8_3462_4323_a2a7_d6240780125a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_46d58a25_2ed6_4810_aca7_65d9a97645b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_239796d0_493b_4238_8534_29cffd1d732d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_180a39c0_fc75_4a46_aae5_5ac31aaa54bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c703bb7a_0fac_4cfa_a193_7cb35bdb6f17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f599a970_a645_4794_94d4_e9e0860c9df4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d86074bc_57db_43e4_b084_209a16a47780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_587826fd_15f6_4131_bc88_8165b307bbe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a348e51b_9cf0_4c59_842e_8814d0656474() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3c7dbf10_3da1_40ae_9edd_a9f439f4df68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bc786e81_5ac8_4773_8738_f0d37b16c035() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_405539d2_61e4_4957_9e9c_94933a5e2b87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_509d807a_63c0_4d6f_9085_9d792a95cb35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5b83849b_a298_4519_b134_a848800b88cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_afae9665_35b5_4e51_9bc0_6bc015db4c69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_19614f6f_bb80_4f9a_a422_46071663c18d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5c6b5a39_67c9_4b24_aa51_c2e8ba28b32c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f013e677_8115_492d_97ef_c4cc8a013d9d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f3830faf_4270_4128_ad38_8afa70694443() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6ab0b9c6_7ede_4b6c_b1d0_b6c3f602a7a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cb69f42c_112d_4cdb_9cb4_5e44cd2d6e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_73b17fad_f727_4db4_8a9d_2fd04478604a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_cfd9e86b_cbb1_4ced_af1d_4936b2b0fc0f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9f9fa1c3_6fa3_41d5_9fb9_436153a25f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b1790980_57f8_41a9_b9db_6acc33032773() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_de4fb95a_5519_4e17_adcc_b3af4ecc775a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_31030122_0dff_4e07_9422_494b56618b86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4b69020a_704a_4f1c_951b_23e38d73a191() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_bfefe15a_2b32_4e10_99ab_a8aab6b81d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c77311a8_9fba_4fe3_b857_e2d54ba3b92d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5208255b_041e_45d3_b267_13647fa6a6fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2442869d_f542_4efa_97f2_6bc6eec4fb68() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4bce40ee_d677_4b87_b7de_e06c5a93addd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ddf22030_d77a_45d6_997e_cd6a31595c47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_22969f4d_b2dc_4de4_877e_0c67de7f2290() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f6d56d9c_dd99_475f_80f2_9dc9427027f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_73aca5da_e929_4e2b_a304_bd2647f8a005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c4cc0ffb_c347_494b_877e_bd264ca58ed4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1b1a34d1_4385_4676_9335_90dc52649ba9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_902b3832_416e_467f_99df_0bb5cdb5285b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c121937e_c63b_4139_b413_2f99040dc362() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6b569df2_9c79_4280_b662_64ec923d2625() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5fdc18c8_25eb_462e_8870_8d6ae855944c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5dc2efc8_70d5_477e_b025_5804d9674e33() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b2cd9ff6_f739_4db4_9e16_0f68745be70c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8e6f1b9c_f740_4d37_9f16_55d2733a05ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cd6aa086_9cd1_40f8_9d66_3f28aa104da6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9fc36127_6e71_4986_90e9_d94422b60322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e5946686_7749_49bf_8663_ffd8523c7319() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0b3524be_b54b_4a20_8474_456b05efb1c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_be05c3fe_18aa_4b71_9843_dd3b8beee9be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_af61d619_7f2a_4c9b_a6b4_af1c0f0163ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_997d1c3d_284f_47d9_bbee_ec3dd28ad27a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e565eb5e_3a88_4186_b758_5caec511964d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a2d216a7_571d_4193_9db3_0ccce9ce92b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3806fe6c_ea5b_454d_9e9f_b6cece52bfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_180fcc85_ca04_438e_9b8f_4b2f8cac9e5d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_58d30e32_3a26_4dd3_af5e_89c50ab00e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_34578e08_7c0c_4641_9fb4_7e7e72b7d5e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6f6a89e8_e8c3_4e38_8c8a_411de3a2070f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_965ff86d_c0de_493b_b2d2_362c0409fefb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5c05db48_933c_4378_9875_561c628e7dfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4b44e3a6_ef51_4cc8_bdab_99dd94398a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3b5b1f9a_bff2_4000_9555_2d939b05500a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ebb3a8bb_6447_4bee_846b_5b329d379e23() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_94583714_dba6_47b2_9632_0b6b65da1b8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_888b6463_e8c3_4a84_870c_43a85fa19308() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_07fcc0fd_df46_4bfc_8a68_6f3b4a77bab8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d8cdc602_f13a_4849_9909_a79dfe72ac09() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3f785bde_e416_48f2_aeb1_3294b1211d2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_084541c1_41e5_411b_a697_da1607166659() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8aab176c_4531_45c5_807c_c9a2421097c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4f4c6d15_8e41_494e_bc6e_59a0c4e0e18c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_405f33d1_ca3c_491b_824e_d35b484bea7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cc7e3550_2bf9_44de_9770_57b124686ed0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_90381858_e122_4d79_b242_fb57c02f771e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5a2cedd9_4511_4671_b156_675aa2c61557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_058e6931_da78_4200_980a_b561bee3f588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_050f9a30_578e_4dd3_a5a1_8d0a64e50895() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cc7826d0_4ae6_459a_a47b_370ad30345a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f5c7bf2b_2d7d_4391_9c84_9df2384061a2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_37182a0a_bf2b_4ae2_9a16_be2ba8e36d87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0bec3ab4_6e02_4ee1_98df_0c800faca7b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c9f4c599_8957_48eb_b08c_e352aefef173() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d04e8104_d028_41cf_af48_2d4b5e702cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ba38dc6e_f19a_4b38_be4b_86bbf335f2a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5047d83a_b60f_4dc9_82e8_4664edfb8d2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c8ee8091_248c_463c_9f9c_e2e5a2bb9b75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f3830faf_4270_4128_ad38_8afa70694443() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c492b77b_184d_439d_b300_d626bb7f945f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_956c5c3d_33d5_4198_9004_16b60d4c4b44() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_02caca37_5759_4f74_a631_3ba528cd65a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f7363960_d697_4aea_a2ec_67f346df63d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1a3f2aa9_b28b_4c96_94ce_c10bc79f2bf6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_db83d700_a2b2_4da7_9832_86e482688074() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_aae256e9_24d5_4d0d_94ee_cf7e47ead4fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a1159ae8_0e39_47fc_92a1_f6be0cabcc10() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c0302d4f_394b_4bc8_b143_da479a7a2f3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3460f017_6938_4cce_85d4_492d2848f853() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3dce73cb_5f41_46ed_8126_405d5f0996d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2e4cf681_a29e_462d_87c8_364cde36d478() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b0bee4c7_03ea_42c4_99a8_5899e3139896() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b2bd862e_9c6a_441a_b7f1_6571f026923d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_862d82e8_c7c1_46c4_b67d_e88f54c3e3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5f9042c2_2d2f_4583_9623_37810967ee19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e9d1b88a_7a55_4628_ae87_5d75b4425059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3362607a_2300_4770_9333_01e58022da54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0943dd0b_c61d_46a6_bd18_daabc031d946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9c9a2a29_ee92_4307_a7d7_412d69d6de9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2f4c1204_4198_4709_add7_f87f6ec175f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_66a57e63_b647_47e2_8cbe_39de833201a7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8944773e_ab74_4b05_a9a8_aebc0a2b3283() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_aa02fa5b_d3eb_4498_8ddd_4054ffeba6c4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_18efa996_4557_4282_975b_0ade164499b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_93c09216_2573_40c9_8cc6_ff85e8a3dfd7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_50143b0b_98f5_48e7_88e2_52d5a2a60e29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1e2c60c8_f3d9_4f0b_be72_29278abf4723() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ff509636_ff56_4e46_a156_bd9c7def9946() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4f4af2e1_3266_43c0_b331_46ba8adb469f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_91538869_33f8_4182_9790_8936515779fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_717994d3_dc65_410d_84e5_f4bbafc5b17e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_52da66ad_b3f4_46ea_92f6_3dde4e5d4f6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4429d076_339f_46ed_a789_c6feaf314621() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0db167ef_3894_444b_b1a7_579b45ffba74() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a84d21c6_e875_4582_acd8_f60d0e4833f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_151b252c_88ad_499f_8d03_0fa87eb78ea4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8214dce2_d281_4660_adb9_d008fade8f41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9ef26bf3_a5a8_4fee_b3a7_58c3d4d36ad9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d1a61b5a_8dbf_44d3_8b0d_8288390ed020() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7397cac2_d361_446c_9568_e1c6a0e3816e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8f4bd655_ef3e_46a7_84de_2387f84424e8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c7e9e050_4e1a_4098_a4d2_c43edd1b7064() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54f1e9b4_0021_4b4f_88d1_e010a88a53c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_da7250dc_8def_49af_9b7d_114358a46320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c71d84df_796a_4643_b403_227704a58ab6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_323fcefc_3906_4623_b118_6f124eb71db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0cd52271_857d_4252_a15d_b28cdfae36a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2318f37e_2685_4816_ad3f_d1e994970674() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f7b2253a_3785_4f8e_90b9_aefb44b0a89b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4ed0c563_0aff_439a_883a_3f00526e6d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_11a778b4_e804_4743_ac84_c63947c96f7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bbebf302_6c85_462f_8e2f_c40b34617c1d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6cdf5c0b_02f6_4270_9de1_bbff9398165c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_abe05bb7_4a32_428d_9186_a1047690312c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e20e3252_1d55_411e_b1f8_eeb0cb4c2bf0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_090c22fd_ed4b_4d1d_9712_06303882aa8d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6b92c927_86f2_41a7_9f25_6086e18145ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b2b506cd_78f6_4f93_8d7e_42a6eca9db55() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4d7241de_a879_415c_bd45_5d0994500f4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7ea9d526_f88e_46b2_a3f3_ba0e46ad2292() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f1cfb45c_bc40_4ac8_bf57_301fedc44d90() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4c88f0d5_ed86_42be_9f4c_e15fa8f58497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cbbdbcef_45ca_4969_b8a8_7b28775e10c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bf4d9c27_ed37_4eb5_97fe_2b4c8e8d6961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c0eb32a0_1392_4dd5_9e0f_bf331d954e79() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_26fd5dc2_eccf_4cec_95f4_b67405a4cf22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_39273f70_2ced_48d3_b683_bd75ecc9b05b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a9c8d5cb_85fb_47d2_8f83_3fc5555d4815() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9b00e1c0_b311_4dbd_83ee_60c640a39be3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_169c1c13_1261_423c_bea5_7cbc901aa96a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b128e009_2ecc_472b_8a53_77623560bd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8b5d09b9_d953_4116_b699_5adb0ea740ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e564c3a7_cc1e_4701_8a28_1df2d64f9a43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bec83808_3b22_4aab_a2c8_8a873af72b48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_56832860_8da8_4176_b78b_1dda48a231f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_d21515df_49d9_42fc_a811_478eef066dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_19c5d714_7a7b_48e4_9b59_723247636473() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b4555ddb_cd38_4f6b_9973_d560a100c9c7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7ddd0b3d_3a24_44c5_99b7_f98283da3a30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_05895d17_368f_4e8d_813c_24c15e59d4a9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_90a818ae_2269_4152_88c9_5b80a5754a7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e61711d4_9b28_4493_9645_fc9a29871093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f5695820_f6d9_46de_9e70_3f3d29ec110b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f898ddb3_08f5_4c7b_9745_6b2b04a44a18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f105dd5e_78f0_42fa_a9e9_f392c3ed122f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4d72a40d_95dd_48b7_aef9_f73d76dcf8ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e9ad0f05_82c4_4c88_9c60_f69078f97ba7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_845057eb_dc18_44bd_9841_5c07cf1b1b29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_124599eb_ff1d_4ae8_ab9f_80f45dbeee54() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ccb44867_8e8a_4347_8cd5_6014d7f47062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b42ce849_bc88_4826_97e0_6033640a4b81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dec92ab4_5451_4330_aa55_cfae9d7fc514() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_80ae6c97_f669_4566_9e80_59642bc0cc2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bd3e8acc_10e6_4817_8250_8b851b73da75() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f1e72cb8_3078_452f_ae1e_53f26c0f1d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e649b607_90a7_447d_b75a_c248d52810ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4e744357_50c5_4daf_8fa7_2e2368d0e318() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f067f55e_01d8_4390_8909_c4b8ef93f7ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c9f4c599_8957_48eb_b08c_e352aefef173() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_998af924_bdfb_42dc_92f8_fe2f9067c433() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_714513e3_69d9_4486_8636_2d7478a97368() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8294ac6a_a43d_4b08_89dd_1d5710ee41ff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_42ca1025_b986_4501_af04_f51493e85421() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_54d725cd_bfe5_4e20_8a9b_181fce6bdd99() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2df5049c_54a3_4247_bd0d_96120a8c4341() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0ecb43d3_213d_4f5e_becf_9d7743828872() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0e2430ac_7252_4173_99d2_468d653fa146() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_28ab926b_8f6a_480b_b7f4_ad26bcdf0a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_82760ac2_0e67_479e_b4ef_7ce5bcacb3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e1759a3c_cc16_4067_b873_71d57aea3c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_acbffa58_007b_46ba_a4ef_2ffd2ed44daf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c78a9f91_e144_410a_851f_fb5f25b7b382() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_bb10151c_d912_4ff3_917b_a8306efde2cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_72c3d57b_d7b4_4e8c_9c22_620b59a41a39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_19c7d9a7_8964_4860_821b_e3bb51fa21e9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8b9cf0f0_70ae_4fd7_b514_5963bfe66220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5ddc425e_148f_4129_b61b_2ae906bce780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d6796c8e_10f4_4eeb_8b08_b058b8431521() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_71fc020d_b30a_443f_95ec_34fa17fd1511() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cd25bae5_edfe_415d_975b_cb325be1f6c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c1c58dd9_23f2_4c19_b863_167f06dc19dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_27fbd226_43c3_412b_9ae8_65751b8c48d5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_560e9c0f_200e_434b_8ac1_dd196ed92dc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_92922df6_594c_41d7_9dc9_40e861c1d4cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_59cacdf3_df36_406e_9d78_e56a5ef77714() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_55ed5d68_4c0f_4d0a_8444_b170a603697d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e1676687_f914_42a9_a389_655b40e6e378() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5f4817e7_13ee_42b6_85a0_2f2211668e8a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9fd16dd4_b4c7_4f2d_9f50_9a5cc3380f83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_50268740_79da_40cd_8cb7_4347e929e183() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6a2d18ab_4fa6_4e41_a7a1_91408b16bee0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2aae32bf_9a7b_43b6_80d5_12274618aff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1c1bf9e5_8e34_44a8_aadf_38017e5ea66f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_80ae6c97_f669_4566_9e80_59642bc0cc2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7278b9ff_dd3d_42d0_a549_993e9abd1a48() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b9a6e992_80af_4c5b_9d2e_bedcd1d4e4b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_c597133c_7d55_407a_aeb1_51df7cf85557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_48d2c55a_484f_49d1_8fc4_f985595dc587() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_aea5d5e0_c855_4f45_b40f_b60fc319641a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d33f0950_7e37_4a4d_af27_a1474789faab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c948a5a5_7dee_48d9_b272_ed80c795f29d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1e373746_ca82_4a0b_b0bb_4c3abe3dbd35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_69340b5c_297b_49bb_849c_9c0f791ba7b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fc1f3196_343a_47cc_bd74_7111606fcf18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cc81e8f9_1df5_44eb_9f8d_db85e3a94a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_042efe25_3130_4b2c_a5e8_bf27e09d8de3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b9e6d994_57cb_412c_9e42_fa37fe215e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_c8e3df8a_a9fc_4c7c_85c4_c9f07ce04ba1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c9db230f_6406_4424_9582_2d002530aede() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3806fe6c_ea5b_454d_9e9f_b6cece52bfa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_63a6ffcd_28ad_4de4_97e0_4efc0c7c1c34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dd7cf94a_0c34_4ed5_a7ac_3a43abbee604() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b3f23008_ceeb_4266_804a_d5d609ea6530() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_b3787d4d_8c66_44e5_856b_a633d5f8183b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_039cfa51_5e84_4dcb_afc1_373823578cbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_23d9b485_da53_4b86_a2ed_35ed9ee66f2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c22feb3b_a22b_4606_9e09_a15e16ecb3ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4b239907_e587_4b01_8405_98934a23f512() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_992ca0ec_f966_499e_9a69_5a58cd4cff60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6d4a6314_1bcf_41d5_883b_aa1428b1cc39() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0da58b37_00da_46a4_ae62_ae94c6eb7f30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_da79ab55_448d_44b1_86ec_87af8637eaa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_311d1c9e_d16e_4031_9904_4c98d5d2f6b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_31a4eeb0_a87a_48e9_9dbd_a408e4fc5ff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_afd1cbf3_f0af_46db_b17a_e29174a8f03f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5840e7e6_cb35_428f_88e1_8a87492b9de0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8e77d905_7ed9_45ec_8eed_f08337b95fd0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_2700d0e1_c7e3_435a_9dcd_790eac958964() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3a36e43b_b67a_4ba3_a43d_65863295e551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7bab3998_9cd4_4928_9e41_97b11bc906cc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_394d9bce_d44b_4ed1_b849_15e84de9a66d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a092cb1b_35db_4d80_a23f_1e59c3fe3770() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54a0701b_0437_4c91_96a7_a9dbd1e8ed59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37a0175a_e556_479c_bbbe_bf3dc2d79504() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cb9327e4_102a_47ce_8c27_06ecc2b4a71f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_de1fac0a_8044_493d_adaa_132f26e71dd2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_aae7b108_9a91_4da3_a513_910b6651565a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_29491931_14cd_462a_9396_578a470d4a1f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1218c4db_8f32_4634_9f22_99dd0091bd4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_02e4e2b5_9f24_48a6_b652_a29ee39107f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_81acd69f_5aca_4756_87b6_194607fa230d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_44a9cdcc_db3d_481e_a47d_35f1237fb485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7a76fd14_45be_43ff_9662_a05586cae774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_43ab80d8_a777_4612_aac6_11f15fd6d931() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_30e26445_74c9_449e_aa6a_8ba7b5b0ed2c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_09ca16bf_1e09_4b1b_9aab_70aacfb8f7a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a7088fcd_c901_4a00_9cf4_a82fb6c50f43() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5ceec3f9_577e_4110_9e26_429e6abacfac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_00ee933c_5fbb_424b_961f_7bab784b6313() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_67cba4b9_b2f5_47be_92d0_3dccd66b1c27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_629747ba_4d4c_4f5b_bd2b_a14d971bd093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_dadd5850_4de9_4016_b4dd_d2576c1f82fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_337463df_ee21_434a_bf4a_076a022a4446() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8de69452_1f11_4684_8ece_1457b71381b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9db81427_640e_4c48_a37e_2482177379d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0178b168_e24d_444d_b8c4_9ddeae144a66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_66ae0f59_cf2a_4140_9847_921a8ec77cd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e2fa40ad_f471_4b47_b920_b2a2b6167e78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_219cb1fd_f423_4026_ba37_63f6d5f7a31f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5c7886a3_9f1a_4198_ad5c_1a558324a93a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0b2a14bf_207b_4e95_bb8c_7a026627f371() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_54c2a1b2_17b8_4a7d_a268_43aa75b7bccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cd30fd21_244e_4dca_b60f_14c4617e1bae() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_77c43e01_430b_411e_8696_f020843a2aa4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d767be00_0d09_47c1_b7ac_4e4da06818fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_725b66d7_beea_4428_8186_ab4b9123d690() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e79acbe5_d3a1_4e25_980a_c8de94af50bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6a39d6fc_d42a_4ac4_9eb4_8f5e214b3d15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4e55defc_9543_4608_a0cc_03dec71f553d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_888b6463_e8c3_4a84_870c_43a85fa19308() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dfae5645_c08d_4b47_9758_f3e6eefc66fe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a6f6b163_8ab5_4ad6_b3c2_85424b3c2122() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0efcdd50_95c6_4ee3_8de2_f593566553ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_da1da0d4_71dc_4cb6_83b8_4993788d0212() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_06a22206_ce30_44bc_b58e_da3805b883e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_db39f24f_ce25_48cf_bffb_927e07fe1f21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1b779c34_e599_4e74_bfcf_3198f3303d00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4e64b342_6e25_4159_b211_8cb91591be38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_77255454_334d_4cad_9443_5914bb1808b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_969090a7_88b0_4747_931e_7c7fa8cd42e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_239b52e6_a9b2_4238_bc08_bae4e9bbe003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3098ca04_e5b8_4a0a_a7dc_c03b05bb21d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_267e195f_1de8_4c9a_bf55_b4c0c015e322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_089984ee_5306_47d5_88e0_40d69ffa6ee8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f62e55b4_1356_44c6_9eaa_f35a8f432466() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_894cdc6f_1076_4cb8_8cd6_c10b7b1876f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ca531aa1_5961_40d4_966f_14dd6f6ab662() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c492b77b_184d_439d_b300_d626bb7f945f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c8066e5b_edc1_44df_b213_2129247bc12e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e3fa8fcf_0b8b_4bc6_af2d_5db9c944ea8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_5ed0a64d_0f62_41eb_acbf_cda354b7eaf8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f65b5959_cea5_4e3d_aec0_1d581911963c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_3f592dd8_dc53_4ecf_95e9_f46c3e63d710() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_89167f5b_ea93_4863_8db3_5c136807facc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8dfe0f32_d08e_4987_a7d2_91584b50aa7b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_5ce9034b_3e1c_44d4_a73f_03fae80e4f9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_5f670649_c624_4d2d_af55_00573bc4552e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8deb3704_d9f3_4aa9_8484_b1a66c192c80() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_11db8141_c52c_4135_a959_2aa79dbd623c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e40eda04_d87c_49ce_9a25_87419712e7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_12264c3f_ca79_4c60_970f_4a97a1dcd72f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_77e11901_d334_41cc_a89d_c50bffb396f4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3838893_b2d4_4396_b685_28a3e1bafe96() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_fe0d5ebf_82e3_454c_9201_ce320a90ff30() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e1d25206_bd88_4c93_8320_ed2e98b667be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4e802081_d1e0_4828_a0ae_193e79d69ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ffae09a0_2c64_4176_a223_bcaf3c8b42b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c9641b9b_63ec_46ee_90d8_a4697f4e6557() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3f2dc4df_ca55_427c_9d7b_56cfbe3f3351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e78dd743_462d_48e1_bdbe_9337585277f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_404e1598_7906_4725_8e65_52c434a175bf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1a6205b3_b75a_49d8_8710_6b284d2ce377() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cd6aa086_9cd1_40f8_9d66_3f28aa104da6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_94e96751_e6c0_42e6_98ad_c3c7012a2510() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_97af02c1_cfe7_46fd_8333_161441dfe07c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_650182e5_0eb3_42da_bff1_7807d9c9af15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_63a8a0c2_df4a_4614_a650_e46225da042c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_777ee79a_23c7_40b0_859d_8153aeffcbdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ec2403d3_0ecd_4d2a_9ddc_330aa7d66b36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_de390a0d_b819_4a2b_bce1_80f7cb562d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dbef0625_b4df_4d30_88a6_96e5a6fdbd08() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_0db167ef_3894_444b_b1a7_579b45ffba74() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_15345ed4_bf44_4474_ba7b_c623adc2c923() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d8cbe52b_8b1e_41ed_a554_e39389f432f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5cc11bdc_063e_4d3a_9479_7610f16c6fff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1adb687a_d00b_4ff5_9858_2e8a09f59054() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_28448409_bcfc_4932_afed_f40fa565dd16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_203f6e8a_bbeb_4630_8ba3_cb8f7e35f76a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_04307450_8fcc_4d64_9af3_1ffaf94bfd67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fed6e354_703c_4b4d_9802_d184bc09c84d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2e7a5725_eb86_43cd_8009_5a374e4e5bec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_61a8a69d_9229_473c_a3ca_87f9941657be() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_82760ac2_0e67_479e_b4ef_7ce5bcacb3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4ed0c563_0aff_439a_883a_3f00526e6d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_24e84e15_238d_4327_ba61_f0f740db0ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0e5377cb_9021_467e_88a0_0e7cc0cd02d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_fc1d1d8c_3007_40f4_ae1a_efd17714a800() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_55c2e890_e112_4cb3_9b37_ed656f3d7b21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7142fead_6a6e_47a3_adae_c74bb3fbb8c6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8b00c3de_4279_42cb_ab15_e1d9ecb74e4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ac3b960d_f91e_4aaa_b7b0_0524089fd5ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0d7103d0_0eb1_4c8d_ad65_03a019dd055e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_00bf5f2e_1ae8_41a9_b524_a10bdede23bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4a54b712_2576_48fa_a17c_92473cdf8259() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_e069f3c3_e6d1_4686_81c7_7afe52a73f31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e7f042ce_a6da_4ed5_9df8_4579eafdd855() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_13e6cd36_064a_457f_a805_d403601a0c12() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_abe0fb8b_1aac_47fc_91c7_be806dae6bef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4fb470f0_a7ed_4b33_84b0_3c4381f499ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_352815ac_a828_4d27_be3e_6ce8449fb8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_518b7297_082e_433c_9d3a_e0fac6044752() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_433c8fd9_4db2_4e61_a968_3ad9c30ab513() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_827896c8_28f5_433f_9a45_0211c829d972() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_e595622c_98be_43f3_a444_9b207fbb0aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5d1e4853_635d_44da_888b_7b557f7fff21() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dae6821d_406f_4937_81f9_ee0044d9673d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a5e8ecc1_d2f6_4578_9e75_7ba3ee3951b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d4984829_50df_46cd_aa28_2226cc9a6e97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a04a9e4a_5a68_4ff9_8b50_e392fcaa6fcd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f1ddce82_9be3_4c28_bc20_f1ff1b606148() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7aad4e2e_6b63_48e6_9f4b_c76ebfc352bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6320ba2c_6cd4_428e_b937_6f6163ec3b7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_740fde14_cb46_4fac_82d6_0af55c249dbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_22860ffc_4c03_4893_9779_87487f40c92c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e6f65a74_28b1_4cc1_b5b4_a2ed6b3201b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8833c91c_e0c3_45c0_8810_81df57e691bc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1c4b58fe_6573_418a_ab2e_9683ab218a19() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_68dea4ba_32fe_4e92_838c_553cf4b09d72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9515dba0_d929_4eef_a9af_839c985c0d04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8e11ba2b_2a41_4272_b83e_61627a8e367a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f51b23ad_77ec_4f98_ac9c_9b14e6fe5858() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b3535275_44aa_407a_9d20_bb7eaadab25d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2408de9a_f57e_4b60_b5b5_505613fcde78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8de69452_1f11_4684_8ece_1457b71381b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f3c43a77_dd8d_407f_b5c4_26b5d1b78fda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c98fe157_634b_4ee2_84e9_0c03f9762866() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_888b6463_e8c3_4a84_870c_43a85fa19308() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a8706a6f_a461_4141_9c09_0ce0b8883d13() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_99285393_6807_4f00_9226_8baa19366252() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_870fc3a6_25d3_42fa_928c_dbda8428f875() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_454aa665_5404_406e_9ed4_ddb60e168381() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_09ca16bf_1e09_4b1b_9aab_70aacfb8f7a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_7d0de4e4_d8c3_44c5_83be_39425ae9cccb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_ea5fa813_fdc0_4364_841e_631ce4295118() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e08c38d6_2737_4874_b37c_9dbd7f67352a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2bcb6527_7cd4_4574_bd38_232ef083b15b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_cbc5b0f5_35b9_438e_8328_839968c65516() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_c52f1fe3_2d7a_4181_8d22_26861e180b8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_50de812e_6175_48e6_a7af_7dfcb717857b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ac42f2b8_ff39_414c_96d3_aebeeeab1e0c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ddf52d24_40d8_4dcd_bd02_546a0d51f524() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0b0774b4_6fbe_4d77_9266_be2d56ed8a22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8bff2aed_34ef_4da4_a92c_a621ba2705b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_494f1912_ecc1_4f46_bc0e_a6f35ffd1dde() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_adb9b07d_1769_4d65_a14e_2ad245eb8220() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1dc123d4_106e_419a_8d04_8d9936af6cc3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_35123a30_eee1_4819_bc15_77a90a2af72a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b7cd6932_d5d4_4eab_b728_2230157ced31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_96902333_8ff1_4d1f_81d4_cd3149f74028() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_23285734_4dfe_44e6_b9cf_9571ec015a24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a1826921_c0a2_416a_822a_56020104bc9a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b5058ccd_7148_42f2_9550_7663775e1c59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0df55716_cf24_4bc9_964e_bad7b6a16ed9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f4d75c78_aba8_4f00_ac04_25226ebc7d64() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_cbe6c902_604b_4b02_8765_414f1795fedb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fd14b76e_4dc3_4039_9cde_b0cf4c0e80b2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7b30b394_41bf_46ea_a61b_ccea03182fa3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_d13bae8e_68da_422d_b7f5_dbaccd156059() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2f859825_1516_42d7_a22c_04b4419418fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d659d3e6_1ac0_4664_86c2_7bdf5218c2b1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3bcd2064_6855_4b2d_b95f_61242cd4e155() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e7bb9677_4045_4868_a14e_5992802c6864() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5b75be85_5ddf_44c0_b557_81e5745bdbec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a44feec8_cd1e_4e28_b474_c4058b757e85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_621b308a_925c_413a_9b73_e3c96a6a5f2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e25f7eab_f96b_4b21_b28e_e78189089bdf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3d8d51c1_a1ae_4441_8888_55f5a4832fe1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d116127b_8798_4d0e_8004_01f0d7bb4f9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b9ae1602_c9e7_4fb3_a80a_bc5e6b1d37fd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_357eb072_1448_4ec3_8d82_43cbff09308b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_21404b62_ec35_4d01_9415_44dc1de36913() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_979acd88_05a6_4f37_86b5_670ed1e9f741() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_18dc3f25_376d_4557_abe6_0d452e879dc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_81597a34_5746_4d5b_bb43_0d5e1507783b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d68d9dab_72d7_476c_a031_bb00b486b156() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_221d9631_feb1_4bed_ac4c_5226c117685b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_83daf0c4_6706_4589_b371_0cc2d54b366d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9aaa4a89_0f2b_4e5e_9298_8091144e0353() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_bdeb5278_0028_4649_9d9f_fd55f411631f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_bc786e81_5ac8_4773_8738_f0d37b16c035() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_34f1d022_e285_4993_becf_c4050d6e4996() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3624b656_e6c3_415b_9d35_ae0a463ca101() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fd80eb23_de78_460a_a299_e2005c63ef29() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_3207e3ce_756b_435d_9415_c666eff0003e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_ab9b8f23_b0c4_4528_a070_a8d0fc7709fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0f24174b_da2d_4c55_a35d_3616d07c2509() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4bba4833_c78e_4b1f_8b00_2c3f995d38e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_afe1d87f_56c0_4d44_99b0_cb7ad989e136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_f85dbcdc_8ecc_4ac5_a35e_2f934daf0e76() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5c60854b_fba5_4790_8f01_0002bfa1ab3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d3e5020a_13a1_4593_8652_e329abe6a1ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_88052900_192e_4341_9692_f50f4f58dad4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bd5d3c57_51a5_435a_ac75_dc1f505ab139() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_36abf633_0522_45db_b369_ffd4d73c2d9f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_09610056_6b1d_4014_aa0c_b9f3986d6628() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_80ae6c97_f669_4566_9e80_59642bc0cc2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_feb7c19f_425e_4db8_9311_95b02250983d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2c48aa3b_a962_4e9b_9765_9194eb210dab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7397cac2_d361_446c_9568_e1c6a0e3816e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e5a1cadd_e10a_4db7_ae64_980300836906() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_783c8c43_ad20_44a3_9463_be9ad389c8dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_72b1811f_179b_4e69_a8e1_db84bd547921() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b2c38e98_0576_40f0_a967_6ba27501c5ea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_12e4f7bc_151a_45b4_b09e_9a1aa611c69f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_c22feb3b_a22b_4606_9e09_a15e16ecb3ca() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_33694269_f1d0_449a_aae5_afc3ffb2ad4b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2f44c480_bd04_43ed_8f43_575e0050ed07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_23237bef_4931_45e6_a111_fbb07fd44c7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7f281935_6cd9_41c7_891a_486550ae40d1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a0191b3b_428a_44c4_b6ca_a00bb98248b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_62a80dd7_e363_4320_a96d_8761c5bc8d69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_1665d5a4_27f1_403c_9fa1_fc52a4085141() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6604c0ce_a95e_4f0b_9b10_63dff26aa506() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_722c31c7_f68f_453d_8828_2d3ae12f62b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_e3afe311_171c_4673_8e81_1f35b1de294a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_950cf253_129e_415a_a971_410c2a4cdd38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_71db2be8_d53c_4f2e_8738_18dfd7ef7345() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9dfe1dc0_eea7_4e68_8e44_ac7a05ce3cf9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_374e2313_d3d4_4454_bb02_cc211708fd94() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_15beda9d_6bbd_4ecf_a4df_e466dd92d922() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b9688c40_6f3a_458c_a8cb_e04ae2df93ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9e27275c_059a_4d00_88de_00b301b88712() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d5feb41e_b3bd_4dd6_b168_c76a056b9ce6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d01d0266_66b9_4052_9617_4aead119fbe5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_efc9ff35_7a2f_4b88_93a4_f2ecd9c64fd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_eda933d1_2b04_44aa_af23_c2366bf4a151() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1367bfdf_4a0d_48f7_be6a_4a8bf28c9f6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7ba42349_0ad2_4390_bcd2_ed89b59e97bb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_122d9402_7951_4d79_a9a4_316e1f2befce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c79c35e6_5c46_4ff9_87db_dce8170c30f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a355cf0f_424e_408d_8bd3_99ec7008fbfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_06a03b57_30f9_4c44_8482_f93542fbb6c9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f548625c_7dae_4c77_9830_0a79cf483081() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4927f502_4273_4448_b36e_4a97fa94d2af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_7000e337_4c65_4c77_8501_048c972120bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2cf6db57_95ae_44bd_b4f9_9e3d524dffbf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_09b6d399_9c7b_41b5_b2e8_5121329af496() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6f4099a1_94d4_49f6_a995_e9ebbba423b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0ecfedfe_53b7_40a7_ad7e_3d47715034b5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_83fc8103_dec6_4d79_ad45_a48a9c63e746() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_33e6c4c2_ba35_4e58_b666_011e8e15834e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a934b946_dc81_4b41_a758_d3898018bf00() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_40e97289_ca13_48c1_b300_6bd0168e8316() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f8986078_bf16_4c40_9151_be778833cd34() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_362811cd_b5df_43d6_9152_b6ae31ec85dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_104bb2ef_6f38_4ef0_b37b_9be121c80d27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d86074bc_57db_43e4_b084_209a16a47780() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_db9f2b0d_e633_4b56_af5a_e73faacce45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6eac760f_f7eb_46ca_a449_18b338889a38() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c2294d65_d626_4729_9fd4_e9fe6b84c3fb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a386d00d_36ac_4374_9af5_a277bd6bc74c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18418372_b15f_4ae8_a3da_6c98419c941d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_8ad39f4a_ecab_4012_a69d_f2afa7dd1be8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_81e03e2a_40b6_42d6_9d56_b3bf84485572() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2ced5e01_8ab0_4846_acb8_4a479e44b026() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e2d9be19_0dde_41f6_9dc4_0b0cdce0bcc9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_48d83924_c32b_48c0_9114_e804c13f33da() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_230213de_c3e5_4cb1_86e1_8eb73f35f067() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1825cc41_fac4_4acc_92ed_6bd9c9331e9c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_2433f669_604d_4080_955b_658f7fcf17e6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5d6f3864_f0e2_451a_abb2_9e46caac0715() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_c08141f4_4c1b_4d2c_b2d2_a9e420bc20ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_c2641594_b7a2_4427_83cc_d995c16601d0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1601a950_e7ed_4d36_8933_2972587016c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_084cdc35_6b52_49d5_ac1d_06ebdf7649a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d99d224a_9177_468c_a387_2922c0165e86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_375ddcdd_b173_4f6b_8765_4466edced9b3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e1b24ebf_4038_47b2_87c8_212f5376dffa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_9fb4b20e_9b8b_43c7_9493_b9b6970cfd87() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_5846d239_8028_45a9_80ce_0eb13ec62537() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2839114d_1fa2_42f3_94a7_228d1f948bc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_50f653ac_258a_44eb_b323_e6c3807967af() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_5ba7b64b_376d_4ebc_a53d_7e9c9c8fcaaf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_27a1976c_e6d0_40d9_b660_b0510819b948() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_e43b8544_bdba_4614_8db4_a07e715b3535() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_43364f58_19fe_454b_a989_9307661834b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_daf949d0_3a04_4904_8028_07c2b99e0479() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f8519fe7_6513_459a_90a4_10d4a66a5a56() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_3b4c4883_5796_46b6_97c9_f2f312939291() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1367dc79_02d2_459e_9733_58bcf869a20d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_88286f5e_8a89_450e_97a5_90cd4c9999ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_37e5b609_a49d_4eb7_8786_313f58f15e7f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ce76004a_277b_40b5_941b_c8044745c6fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b23a3492_06d9_4cc0_b7e2_442eeb94a47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_820596aa_bd10_402a_81e4_1b717405fe7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1497e5e7_aa3d_4720_a911_3b112d22c94d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e6b2f1c8_b023_4a7f_9699_1e8d097d59b7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9f33d2a1_61dc_4311_965c_7b79ef766c6a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2fa090f0_f331_4328_b0c7_0a3878a1bf6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f0cdc8a9_d68b_4e66_a5f6_ed89f307afc2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_3dc2a76c_6d79_4f18_8314_d117f02c198e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_10d99ec3_5841_4c81_a11f_f9b813086003() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cd449108_2c61_46ee_8366_2b9ea75c6a98() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_06f8d0ed_6ad1_4a73_8509_8fe405c651e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_cc8e2e71_9522_4b05_a9b1_3816c6816254() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_c7e78183_0f58_492b_8e22_940d3c6967a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_0994cda2_9aee_44db_8643_c2c60cb0319f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_18ee7c0b_6e04_4749_bd14_248b18c2f750() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_ce82dadf_4c53_491e_ba2d_8a7651109961() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e1fc3719_18e0_4534_ac99_5f34e04a286d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_4c90689b_677f_4f69_8e10_4885786b1a36() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_00b26fcb_ab0d_4e29_bd68_0ba776862ba4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b59585d8_61ab_4035_821d_f223c28d8196() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2c10e026_a3eb_4d0f_b2c9_9f8d089d584b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_47f221d9_c882_4008_9662_6c998e60d23d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_096d8937_3203_4433_b394_7a8f88563062() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_0bf16892_1496_4be4_aea5_7dd68467aea7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_04a4aef4_d5a5_4d06_90e6_9edaaf61838a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1ccbdbb4_c304_4045_bf65_8ebfba5b80e5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0e1394cb_40dd_4b14_94cf_3f8c50fa618e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_11ef2fc9_2771_4206_b31f_4bc6e9519e72() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2adcc0cf_c93c_428c_b2a0_f042ea10d772() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0b25291f_ab1c_4b00_a91e_509279eb1ac1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b26c3f0b_99ae_46d4_bc0a_2a846a51de8e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_20d61fcd_1bb2_432c_a16f_86c2f0a2cf59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_be6c2d6b_b58f_4d35_ad7f_9a1aa0e68edb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_e59600eb_0960_4f3f_b989_defdaaf6e6e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b396ff69_508e_46be_a28a_65733cb7ff4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_57d4df0d_19e7_46e1_b9cd_ce30185eb1a6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54e9e49e_e1bd_46b9_b570_ed0d6207d548() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_3648021b_3a9b_409f_8d86_ec22b3ecf48a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_1db74c9d_a59c_4e1b_b72c_50f2cbf6fcac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ec4d1f96_ca1a_4f46_9e55_443b54f66dbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_25f8148c_079f_414c_8617_f35444a02db3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b03794b5_7e54_4ae2_a388_9a8e29ec8a4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e91267be_6c1b_42cb_a0ce_4713bd29eaba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_438a007a_0ef4_4c75_80ec_690841729497() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_b9745005_cc44_43fd_b938_58f888e872a4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4c71af4a_c308_4072_91b9_29d7d92c195b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_52581487_9bba_4b0d_bd81_8179301a2b4d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b20b6703_5478_495a_a2e1_96b98dd01a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a1e6a542_b7d3_4bd6_a1b0_b85e565213ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e4ae0c26_860e_414f_811f_b9ef9c6b971b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e9eb1f6_73bc_41ef_92bc_1902efa2870b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4ffbec73_3183_4ce0_bfc0_202ef086014d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1e1b2554_4db1_4114_9621_c2fb0b306131() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1d449c29_660e_4203_bd61_3f05763213df() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d68494fd_92a0_40dd_ba72_d63280290b41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_426d452f_aa19_415d_9a8b_f1ba855cd8d3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5a9cb2c7_e45b_4c90_b8c1_319bf66dcc8f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ce9d5300_b103_49c2_9173_e01cbc208baa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_82818af4_cf41_423e_ae12_00f817d56380() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_f9424fad_7ba1_4b4f_99c1_68920dca518d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a4c8d171_99cd_46eb_bda5_907060d3e2d8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9b75fc6d_f25a_4b95_8341_eae1c32a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_fca7338f_4cc1_45e1_bb3e_3dcba2cb7fc0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8540df1f_654b_437a_a505_568d167f0485() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_67cedba8_6d79_4f6b_b510_d80c7cf3b14f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_609916f4_cf72_4b97_aa54_b127262307a1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_daf949d0_3a04_4904_8028_07c2b99e0479() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_40fa0a60_c721_465f_8f37_73f70ff21008() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_2c51e5e2_14c5_4c6e_8bcf_62aa27ea2968() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_4ac7f5ab_d02f_411b_9d88_2b9168e7eb97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1694ca8a_d13c_4bb5_a3e6_2ce5948fcf85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_40149590_690c_4c02_97bb_882db2c92f45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7bb229d8_47e0_4ba6_804f_597fedebe6b6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_042b1f1f_b1cf_41b3_b066_0c91f96b5de1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7d364acb_24a9_47e8_9ada_dfee52164b93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_32e4db0f_7943_4656_9b55_f0c919a57a15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_37d58bde_f5f0_4908_a9dc_54d25210a78e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e295d6e1_fe2c_4be9_b0e5_d73d5837a77d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cafedd44_e2a4_4f3e_bcd6_1b0f1f1d9f06() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_f8e009cc_26a4_4480_a2d4_43216efc6430() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_204f17c1_8141_4fe0_866e_efa01a0fa12b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_a4abf60b_705d_4f57_ba75_d57268fd8fbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9b624e9f_54d5_49b2_943f_379124332e8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f36b9222_9ec9_4387_be1d_363f119acbd1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1efd44a6_347b_46fe_b1c4_9dbb08cfc7dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_287be09b_a6b8_42c3_a0e4_5072dce58d63() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_efe6da9b_e451_431d_b6c6_da6d343c3af3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5dabe75e_792c_4fe0_9f3e_d59fab699c81() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_14d1fb72_e51c_4536_a634_db7951c3b843() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_18174db8_52cf_4c6f_b9cb_df60e581a397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4620b01f_e12c_4ecf_8765_9dd4191ee607() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_1aaea35f_d94e_488d_9c42_81e91aa97d66() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_6f2a2a29_7a81_4c32_97a8_7b9fe7557e0d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_bc786e81_5ac8_4773_8738_f0d37b16c035() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_7e0831a0_ffe3_4351_b71f_9f8096337596() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9a18c4f0_7a91_4612_bc3e_3997a500d130() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b7d6af1c_39bd_4c7c_bc29_249ba339b315() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_f382fc87_6169_420d_b1c4_fc0ded7642cf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a69a4edd_dd00_47de_af7b_14dacc224f47() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_9a66de33_b618_476d_80f8_cd40bcc8af6f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_b01f03be_dcc3_4625_8f65_db905aa927ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_fbe001c0_2a24_4421_888a_cbcc1af8d5ba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f636c315_f644_482e_99d9_b4399817c716() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b678a6dd_4a81_44c6_8a46_789d2f66b185() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_37106a16_2623_44ab_9ae1_47b30c9834ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bc2135e9_ebcb_47eb_a429_feb4ec64df7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_dafb648b_fe13_48f5_9f9f_71379bed5dd5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_370dc114_0718_4143_a0b4_e32dbea83e3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cd8a0185_bc31_4c2e_b476_0456f4c83275() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_1feb9a60_b210_40ea_9d6d_524a7450a0c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cd178679_1e8b_458a_b8dd_c4d2c89944d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_edddd17d_38d4_4f06_adb5_3505201843e7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_56d5481b_6064_4e97_a8d4_46e9d8181d0e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_21197e53_1692_4ee5_b0e2_f795b89f0fbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_45072f85_9554_428e_8e12_8359a2b1d7f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_ce13456e_2f43_4546_8c5f_69a72da83002() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_43ab80d8_a777_4612_aac6_11f15fd6d931() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_ecf499e5_517c_451b_9624_42f173e1fb77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_63a8a0c2_df4a_4614_a650_e46225da042c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_4c729e0b_f357_4035_9186_7799e9cea3f9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_66ac46ed_8cbf_463a_9da2_6404ab34ec15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_dcafa1c2_5b12_46ce_89bf_f27f14015d6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_60e0e88c_a3f9_4360_a732_78ea18a539eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1eb48678_2607_4719_a6ec_8cc2a4ce0538() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_25eb65c9_a752_4bfe_a9b9_040020728928() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_55b091e7_86d8_4872_a5b7_bb4ed846affb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_40167a82_63fd_44fa_9ac8_ae843f2ace5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_66c5c231_0ec0_45d8_8971_02cfdd7ebe45() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_2841f6e8_2672_4b2b_9775_16b6981bcaff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_93c66994_e1f3_480f_9a20_50fad11142d2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d3e35cdf_60c2_4095_a1b7_b88b769c0dd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_54818d7f_67d8_4c5b_8cdd_0b290f4daf78() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_be2e046a_ce91_40f2_8ff5_067803806cc1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fa1cfb6d_9aaa_4ba8_8680_5e0bff3f304f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_cdad745a_0d83_4744_aae4_7000368b11dc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9768feb8_9c5f_4f96_8c49_8956719541ed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_515e2cf3_3b0f_4aa0_b5e4_4feff90be389() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_19c76eae_9d37_4318_9092_7cf329bc3b15() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_f47755ae_f2fd_48d3_aec7_9f55adec4782() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_703f718c_66fa_4bd3_8f87_893186f67208() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_80f16b2e_2486_475e_bb94_30e2544c5566() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_d393ff58_4292_47f9_86d5_330571b10620() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_8ffa0392_574c_4d90_90b1_a95fa718b312() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_02108d5f_cc20_4be2_8a2f_2fc5eb5933ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5dbf76de_9fb0_40b3_bc49_b52872dad9d6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_e7f042ce_a6da_4ed5_9df8_4579eafdd855() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_54d6259b_0b01_4de2_be30_3d53531c8b22() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9ca226ff_696b_4d75_aba6_c0f688ee9692() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_478b5f87_a177_4db3_bec2_e4c8cf808985() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_33510e15_568b_45d7_a88a_a9b626e05c5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7d221084_88d6_4df4_a0fa_d1e1c97f3136() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_5ca5f8f2_9193_4c71_9cdf_d666dc008aa5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_07d99a47_f8f5_44bd_a6ca_83adc571c280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_8d0cf734_f3c3_4d07_8874_97bffc211ea9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_a7e26e33_6598_42f9_8aa5_adacd6727e26() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6da56703_b139_402a_ad96_09625c283465() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_8d4da1e5_c890_4976_9368_1d8c1c440aba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_dacb0563_2aa7_4ef2_9c43_cd36a9cb701b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_d036e6a0_ff18_48e9_b488_1a8175f35874() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0b9d849c_506a_4fdf_be6d_55375fd8c85b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_077fd931_6c49_4b01_8ec5_bf7a878d8e2a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_8fb23de8_bf25_45b9_9a36_a5a461a9ea27() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_5417b348_66b2_400a_8e5b_a43ec06c78f3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e79a5d78_bc5c_4f14_b1e5_a0f21ece2ec3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3ce5fc3b_ff4f_42e8_bc12_3e65542e467d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f8e9511a_9825_4b81_b4c4_b2c6ef5ee55f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_1a9fe6e9_4aba_46d9_a618_e5b6c4bcfc03() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_a01a2651_6e7d_4030_997d_1aa2d7fd2889() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_825d991f_b0a8_441c_85bf_4d15f9117c88() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_617b4e7b_d79e_485a_8598_358ccb9d25b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_f1947a46_c086_416e_a84e_98be7067adfb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_f9c8b3c9_cf9f_4e7d_a738_cf71c3f8ce7c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_55ed9aa4_bbee_4fff_abf8_bfaf4f043a95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_de32295c_f040_401c_8c62_e0d1036badeb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_05f28961_6751_4ccf_a6a6_5b4fbeea7a67() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_590a09b1_cea4_4c49_bdc8_a2549d099748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d3133af7_880c_4443_8d3b_3dda50832b35() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_191aa0d2_c4e3_4004_8c9c_fa29b4bd8294() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7eedca29_6143_4715_85c2_97b6d92d2c6e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_f23c036e_99ad_46c7_b4b6_102c7cf580c1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_c9f4c599_8957_48eb_b08c_e352aefef173() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_75d944b2_a2de_4b62_8f6d_e2747e41eb9e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_73f524e0_be24_4938_9e05_0fe2f7f0bfe0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_d3e435c9_9259_4aa6_aee5_55560c0dbeed() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bad7969f_be3d_4f53_a33d_004bceb25c0b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_51581e19_68ca_44fd_88b0_9cd47353fe07() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_33c02692_5a76_4ea2_9242_5b1046ba580d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b3cc3f96_0b74_4fe6_a514_1db92bebc95d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_cdf4171a_b7d8_4433_97e8_029414a98a4f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_019c1ef8_33a8_4691_bdc6_8935b496635f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_94a9cf31_c53e_4b08_880a_2eb3391ef748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_7845a9a5_d7d5_4da8_bfaf_b9a8c1cf0f8b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_dfede978_7597_48ea_845f_b47b2fd8a5c0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_35e154fe_a3fe_441c_9dee_3609d2f409ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_ffbdbf8f_5c74_4980_97dd_74410372f870() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_95e186cc_46d0_4b1d_85ba_799350e5d611() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_532ea4cd_2f31_4809_aebb_2de4f975fd7a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_0e1bd993_122c_49bb_b89f_08783a8d8006() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b72dae46_6404_48da_a0d9_f5d8781ba351() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a8daae61_b7e8_42e1_a93f_8d88d70d7bff() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_aaabb218_a5cb_4460_afaa_c3d2d7ba8375() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_566f432a_a38b_4f43_be8a_74f54a26501e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_b3895458_36ce_4728_b3ba_ca5ba6155b5f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_07a734cb_701e_451b_b918_5efcc5780b8c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_e069f3c3_e6d1_4686_81c7_7afe52a73f31() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_af7721df_78e0_43ac_a51e_01184b660c3a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_dcd2caf5_874e_4554_987a_f41a0cf064b8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a1153311_0d3f_4f4c_8e16_25f0199a7add() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_98da50dd_0571_4bed_80e1_b3365dbba3b4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_981e9849_22eb_4c30_9a15_02db8a1deddf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_eca86f31_aa6d_4a29_8b85_8ca72623dfd4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8baf1d17_0824_40bb_b05a_b8b0faf76a04() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_1fbff3f1_72d6_4907_b4b9_7a62705a2280() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b0c64f9e_836a_428d_a14b_fc34f2c063ab() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_23430324_a10a_41c5_89a5_eecf28a0fe69() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_13cdcfa8_bd13_4557_a112_571620c9b6e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_9390a6a2_57b8_487c_87be_134ad8524e4e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_7d3c0167_782e_49f6_80cf_895055463eac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_93a49f57_cb43_4363_95c8_136c68f94cba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e42f680b_7c2c_4faf_8891_5758c91fd5dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_68187f42_6ba9_4e7c_b8c0_1a8dc8bfa41d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b40a5bf4_f590_41cb_84dd_c95cccd4f12f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_a898cb0b_8019_468a_96c5_778957f789a3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b532df21_b8a9_4b75_857d_1507a7797f6c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_b8c073fa_acf0_46dd_a546_b2271e8fd7ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_854d9468_9182_4579_94ae_c207e148e60e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d0690dc1_2ea1_4d3d_9ff9_ba3dd893657e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_814c9600_8515_4078_919e_9ed8d97fbe1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_853296ae_3ad6_4c3a_b26d_fde6f2352012() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8b53f527_db48_43cb_9546_2a5507dc755f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_d52e5456_8a2e_4339_bafc_aefd2d3dcd24() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_7902bdbe_6d7e_4511_9497_5a1821394693() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_61910b2d_80a2_4a45_9121_0fe755f09eb4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_94913f10_cde0_4e54_ad19_d5fc90cb9bbc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a0bba6dd_2168_4bd5_b09e_399f1f7b4296() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_4f4ad07a_fb06_419e_92cd_defac7d5f5f8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_d3d7a9b0_0232_42ce_b6e1_587f32713a2d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f4a774ad_b85d_402f_b77c_480f581ac28c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b6c919ad_2e5b_468a_8df2_da56df6e9ae9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_43ab80d8_a777_4612_aac6_11f15fd6d931() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_6afcf746_e6ac_4303_ac87_47404152b47a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_b1d712f9_7ffe_404d_b6cc_80ffaaf6ef01() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_3582f77e_0f70_4b19_953c_c984e0776fb0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_cfcb216b_1732_41c0_b321_b6b49d949f95() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_abd44de8_faa6_4362_b8da_a11dddc0c269() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e626d74c_04eb_4631_91f9_437a500cf7fa() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_576aaec2_b54f_4435_98c8_18fe9fa03c4c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_be26dc06_e3ad_44c2_b3a7_f3728a8ab3f1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_d9c187d0_8082_4e18_b3ef_428762340743() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_b225cf2a_352e_44a1_9b6f_4b9ad7434256() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_85316e08_2cd1_4549_a299_d44e6629fef6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_beda2932_d9c6_45c6_a443_2446a1b26588() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_99d9f6c3_5547_4f91_b7dd_7344b82e09f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_09943243_063b_4cb3_9d01_e3bc7448bb1e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f62054c8_3058_4248_8246_c6117e93a9ef() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_bf7f353c_670b_49b5_8dbb_4fd1655dea40() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_03e03ccc_126c_4855_a3f3_96e42e199598() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_3a9f5f50_05e9_4caf_8829_656556f4e19e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_895e6334_a609_4f95_8768_3d9a4dad25cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_66399fcd_91f0_4c3e_8440_4b796f1054f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_36844639_3549_4cc9_9156_78a02527cd5a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_00739a5f_37f5_4509_be1b_4d3329ed64ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_546b54ce_96b0_4777_b5fc_1bddd4566d93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_33b5d871_0867_4385_a820_9e66a2546cb5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_8210187d_7347_483c_a2ba_22ffe430b3d9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9e93c106_a3ee_4ec6_a50a_e87c172d86fc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_bedf9aea_5b4b_46e0_8211_fbc354844397() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_8e3a92ad_fe12_4175_bf8a_1118b489a64f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_51cc7a34_603e_4d3c_a48a_2f4481772e59() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_865c45e9_e35b_4851_98f7_bc97fa9811c3() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1d13a6a6_728a_49c1_ac51_e304f8d8fd41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_3d332fe9_b7f3_4374_8027_7969a3e2ee1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a0f844dd_d1f9_4a31_b0e2_d01466dd9415() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_23a321d9_49f6_4979_912e_3bca007fc551() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_a4d1b77f_c7bc_453d_8417_38b1c9e1fe18() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6cb9e01e_c953_4513_af30_664871228b77() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_a7987d0c_3397_442f_9742_271ffa5ca242() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6bb5f6a8_02dd_48a2_9574_6dfa0927bff9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1f09fe2d_b7b5_4d13_8d45_b5c0896c94ee() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_605f4995_6eea_4b62_a8f2_d1a93dd435ad() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_f2205151_6495_4b50_bb8f_9fb757467a5e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_906400e1_5cb0_4388_b045_690558f7489f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_4e1dea39_d6a5_4535_b9ea_f9503abd8ba6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_e895ae7a_6a5b_4cdb_a79f_6f2df8b92989() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_bb7384b0_b136_4e60_a586_83d30850d9e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_315fb91e_9c0a_45d5_bbb3_1963581e6d97() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_1d367218_3a4c_49f7_bd3d_57cf4d9f3748() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d7bd8def_df87_4f97_aa57_030a05eed093() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_9f0ca5ac_cac1_4404_9205_cc188e8a22e2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_f2663d44_c7c0_46fe_bd5a_5233f086cc71() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_546b54ce_96b0_4777_b5fc_1bddd4566d93() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_9c850be0_9570_4e15_b01b_a71a41b3bcc6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_18bb743d_3660_4d14_83b9_db8e8503a4c8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_891a2fc3_8a16_4a7d_b58d_7d15ceadd83e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_ec1c2816_8f51_441b_a3d7_5bca40f307f2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fb399914_4d34_4d51_b044_5c41a37d309d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_8a131b4e_be87_47db_bd2f_9bc74392587f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_a3d756ba_88e0_4c96_b26c_820e3130c982() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_0ee9603f_91e8_4b8e_9099_c6a8a524223e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_df4b1c9e_130a_4441_a64d_5368e085b887() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_76c7bc85_bba0_40a5_824b_3959e10bc14b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_6e4eea13_3780_4eab_8d6f_0a7228930a61() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_b1d58e35_4049_4384_890c_fad818550937() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_bc945a78_e135_4262_80e4_62830f4c561f() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_829c0dcf_ca51_43dd_9ba9_42e084fc58f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_367cb142_9d6f_48dd_acc7_5ec5d3221aea() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_0c53afa9_5987_49e9_ab21_99f2a490a4e4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_6ff0f20d_53c5_4f7b_ac36_22fda39cfe7e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_158811b9_3398_4cfa_9b7a_3a4b5b0c9cbb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_4c147766_0aa8_4fd9_aa45_83d34f4fa0ec() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_b2580565_8fa8_4073_87ae_7138e7c58da9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_b02e1aca_df2d_4f75_9144_4073cf47aff2() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_0eb5bf8b_873d_4075_82e6_c36fd5765561() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_dc257e60_8161_4d78_9f9e_280d395b49b0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_156a3ca4_a807_422b_9cc1_d6ce40107126() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_954c30a2_2617_4951_8cd4_75c54b833bbe() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_21720ac5_7fdb_464a_850e_25bde8578960() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_2d25c1ab_b756_4558_b546_3f959dd96cb8() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_85076fed_fcc3_4816_939f_80ea4f868adf() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_9f37202d_192f_45b6_8e23_3093084c2374() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_836afcf7_68d1_4087_acf6_43552e3dc320() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_a1090007_edbe_49c1_b52f_f6cafee235e0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_fd3dba58_da8b_4faf_b8ea_bc037fd8fa16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6b3c7b11_31fe_413c_b195_868407e72461() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_2c075ff4_6c8b_4dfa_932d_b47ed841db17() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_e12b4a55_a5ff_46a2_a15e_677f9252726d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_cbc7c4bc_536f_4406_be52_8c585ccc231e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_e3e1f751_d384_438f_be2a_e9e7380b9f86() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_0b47d2ff_33ed_4d06_af4c_87017cd6becc() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_7ce8b502_bacc_4796_bd6b_4acf1423bb02() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_8e70c4c5_460e_4ab6_bee1_a3b138def2ac() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_fe455e5b_cd24_4703_8f9b_0086fe0b6336() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_9396b3ec_a081_48ed_b49a_f335b5d66344() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_8fd2f829_da87_4218_bbb5_cb569853ede1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_6ba10acc_d36d_43c5_9f1a_b92b7961f5cd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_15c8c603_8ecb_4ea2_821c_78c44c90c594() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_57245445_2d66_49b1_b592_e7b1596fa1f6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_11257a47_c801_4425_a8eb_193a935a9ced() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_bcf8262a_3562_4358_84f3_0dcefedb204b() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_3703e50f_287f_481f_b9d9_48bff69219f0() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_f468650a_dcab_4889_ad00_16db5178f774() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_a5d899c5_cfa4_4219_83b2_9b939059df83() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_43168acd_3c84_4886_8853_1e1b061236bd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_7_6c080cea_2639_442b_a1e9_5a5e291ff3f7() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)13l, (long)8l, (long)3l, (long)4l))));
    assertEquals(3, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_ebe70350_f859_4bf6_9097_e397318c4d60() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_2e568e7f_31d8_4627_b639_dd1847461032() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_c3c1e2ce_e3e2_40c4_986c_0007e164babb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_4ec25aa9_8cd3_4fc2_bcd9_280bf528be16() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_7515f067_9b91_4da4_b29d_9ea055ace1dd() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_691f038a_ba6b_4aed_9300_8336a3ffc4ce() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_ac5b2a79_ada5_461f_a959_35097c96f0b9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_c7ba59dc_44d5_4852_a45e_4a35700d9562() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_34acc70a_f821_4ffa_a267_2e12d8d50ce4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_724c0a05_684d_4355_b024_bf2b1362ad2e() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_2_fefa9983_7e51_46e0_9321_520b5f2272e1() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)2l, (long)-10l))));
    assertEquals(-14, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_1a1fda22_777c_4181_8e64_09aa8e0a7e1a() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_1daec766_69c8_4748_8945_4719f8151aa9() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_da320971_52d5_4c54_92f9_4946d54dacba() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_2b674ad5_b7f6_4c10_89ed_b4452c475179() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_21ff430e_6f8f_4833_91f7_5b296cafe7d4() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_6_d22a8f74_2e8f_4565_ac9f_f382269757eb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_eabb64ca_bb66_44b6_9807_211991cecfda() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

    @Test
    public void test_minSubArraySum_Problem_10_68187f42_6ba9_4e7c_b8c0_1a8dc8bfa41d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_e528cb3b_1b9e_46c8_8414_db3a93f60393() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_b76a1b0d_4fd3_45dd_8997_98b530cc6aa6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_9_6e651730_9eb8_4657_80a4_36cb43ffd12c() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))));
    assertEquals(-10, result);
}

    @Test
    public void test_minSubArraySum_Problem_8_fef15f45_853b_44c8_b47d_0e25ec822005() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l, (long)-2l))));
    assertEquals(-33, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_878ff0e7_1e4e_4b5d_bcc3_39b209520abb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_9e2c9780_107c_4c24_bc42_6f72fde36d41() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_26c975d2_9cc6_4068_8ecd_fbe053748d3d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_3_a6b5f716_3296_443f_a77e_27cf38341ceb() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-9999999999999999l))));
    assertEquals(-9999999999999999, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_8f19019b_e197_4e7a_82c6_c4c10d002322() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_0_d71fdfb5_68ac_4352_bc60_44ebb62a9499() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))));
    assertEquals(1, result);
}

    @Test
    public void test_minSubArraySum_Problem_4_7c2a3816_ea15_4778_b951_bd107ba6c2a5() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l, (long)20l, (long)1000000l))));
    assertEquals(0, result);
}

    @Test
    public void test_minSubArraySum_Problem_5_ad12cd23_89c8_4338_b4b5_8544aaebff85() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l, (long)10l, (long)-5l))));
    assertEquals(-6, result);
}

    @Test
    public void test_minSubArraySum_Problem_1_76f6d0e0_d897_40cd_b69e_60c5cb97f45d() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))));
    assertEquals(7, result);
}

    @Test
    public void test_minSubArraySum_Problem_11_6778e76e_77f6_466b_b7f5_7557a2db6ff6() {
    int result = minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l))));
    assertEquals(-1, result);
}

}
